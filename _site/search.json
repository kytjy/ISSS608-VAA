[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_bar",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_bar",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "7.1 geom_bar",
    "text": "7.1 geom_bar\nThe code chunk below plots a bar chart by using geom_bar().\n\nggplot(data = exam_data, \n       aes(x = reorder(RACE, RACE, function(x)-length(x)))) +\n    geom_bar()+\n    ylim(0, 220) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-1) +\n    labs(x = \"Race\",\n         y = \"No. of\\nStudents\",\n         title = \"Number of Students by Race\") + \n    theme_grey() +\n    theme(\n      axis.title.y = element_text(hjust=1, angle=0),\n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_dotplot",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "7.2 geom_dotplot",
    "text": "7.2 geom_dotplot\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\nIn the code chunk below, geom_dotplot() of ggplot2 is used to plot a dot plot.\n\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_dotplot(dotsize=0.5) +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\nThe y scale is not very useful, in fact it is very misleading.\nThe code chunk below performs the following two steps:\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5.\n\n\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_dotplot(binwidth=2.5,\n               dotsize = 0.5) +\n  scale_y_continuous(NULL,\n                     breaks= NULL) +     \n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_histogram",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "7.3 geom_histogram",
    "text": "7.3 geom_histogram\nIn the code chunk below, geom_histogram() is used to create a simple histogram by using values in MATHS field of exam_data.\n\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_histogram(binwidth=10,color='white') +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "7.4 Modifying a geometric object by changing geom()",
    "text": "7.4 Modifying a geometric object by changing geom()\nIn the code chunk below,\n\nbins argument is used to change the number of bins to 20\nfill argument is used to shade the histogram with color\ncolor argument is used to change the outline colour of the bars\ngeom_vline is used to add mean and median lines\nannotate is used to include descriptions for each line\n\n\nggplot(data=exam_data,\n       aes(x=MATHS)) + \n    geom_histogram(bins=20, \n                   color=\"grey30\", \n                   fill=\"#E1C8C4\") +\n    labs(x = \"Math Score\",\n         y = \"No. of Pupils\",\n         title = \"Distribution of Math Scores\") + \n    geom_vline(aes(xintercept=median(exam_data$MATHS, na.rm=T)),\n               color=\"#595DE5\", linewidth=1, linetype=\"dashed\") + \n    # Add line annotations\n    annotate(\n      \"text\", \n      x = 82, \n      y = 50,\n      label = paste(\"Median =\", round(median(exam_data$MATHS, na.rm=T), 3)),\n      color = \"#595DE5\",\n      size = 3.5\n    ) +\n    geom_vline(aes(xintercept=mean(exam_data$MATHS, na.rm=T)),\n               colour=\"red\", linewidth=1, linetype=\"dashed\") + \n      # Add line annotations\n    annotate(\n      \"text\", \n      x = 60, \n      y = 42,\n      label = paste(\"Mean =\", round(mean(exam_data$MATHS, na.rm=T), 3)),\n      color = \"red\",\n      size = 3.5\n    ) +\n    theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\nChanged no. of binsUsing binwidthBin alignment using boundary & center\n\n\n\n\nShow the code\n# Original\nb_p1 &lt;- ggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 #binwidth=5, \n                 color= 'white',\n                 fill='grey') +\n  theme_gray() +\n  theme(panel.background=element_rect(fill='grey96')) +\n  labs(x = \"Math Score\",\n       y = \"No. of Pupils\",\n       title = \"20 bins\") +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n# Changed\nb_p2 &lt;- ggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(bins=30, \n                 boundary = 100,\n                 #binwidth=5, \n                 color= 'white',\n                 fill='grey') +\n  theme_gray() +\n  theme(panel.background=element_rect(fill='grey96')) +\n  labs(x = \"Math Score\",\n       y = \"No. of Pupils\",\n       title = \"30 bins\") +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n# format plot layout\nb_p1 + b_p2\n\n\n\n\n\n\n\n\n\nShow the code\n# Original\nbw_p1 &lt;- ggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 #binwidth=5, \n                 color= 'white',\n                 fill='grey') +\n  theme_gray() +\n  theme(panel.background=element_rect(fill='grey96')) +\n  labs(x = \"Math Score\",\n       y = \"No. of Pupils\",\n       title = \"20 bins\") +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))  \n\n# Changed\nbw_p2 &lt;- ggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(#bins=20, \n                 boundary = 100,\n                 binwidth=5, \n                 color= 'white',\n                 fill='grey') +\n  theme_gray() +\n  theme(panel.background=element_rect(fill='grey96')) +\n  labs(x = \"Math Score\",\n       y = \"No. of Pupils\",\n       title = \"Binwidth 5 = 19 bins\") +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n# format plot layout\nbw_p1 + bw_p2\n\n\n\n\n\n\n\nBe mindful of the boundaries of the bins and whether a point will fall into the left or right bin if it is on a boundary.\n\n\nShow the code\n# Original\nbb_p1 &lt;- ggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 #binwidth=5, \n                 color= 'white',\n                 fill='grey') +\n  theme_gray() +\n  theme(panel.background=element_rect(fill='grey96')) +\n  labs(x = \"Math Score\",\n       y = \"No. of Pupils\",\n       title = \"Bin alignment using boundary\") +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n  \n# Changed\nbb_p2 &lt;- ggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(bins=20, \n                 center = 50,\n                 #binwidth=5, \n                 color= 'white',\n                 fill='grey') +\n  theme_gray() +\n  theme(panel.background=element_rect(fill='grey96')) +\n  labs(x = \"Math Score\",\n       y = \"No. of Pupils\",\n       title = \"Bin alignment using center\") +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n# format plot layout\nbb_p1 + bb_p2\n\n\n\n\n\nNote: Don’t use both boundary and center for bin alignment. Just pick one.\n\n\n\n\nbins: default bin number is 30 in ggplot2\nboundary: bin position specifier\nbinwidth: bin breaks automatically based on a specific binwidth; can be used to specify the endpoint of any bin or center to specify the center of any bin"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "7.5 Modifying a geometric object by changing aes()",
    "text": "7.5 Modifying a geometric object by changing aes()\nThe code chunk below changes the interior colour of the histogram (i.e. fill) by using sub-group of *aesthetic()*.\nscale_fill_manual() allow you to specify your own set of mappings from levels in the data to aesthetic values.\n\nggplot(data=exam_data,\n       aes(x=MATHS,\n           fill = GENDER)) +\n         geom_histogram(bins =20,\n                        color='grey40')+\n  scale_fill_manual(values = c(\"#E1C8C4\",\"#7F948F\"))+\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\nThis approach can be used to colour, fill and alpha of the geometric."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_density",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_density",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "7.6 geom_density",
    "text": "7.6 geom_density\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram.\nIt is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\nThe code below plots the distribution of Maths scores in a kernel density estimate plot, where y = relative frequency / binwidth.\n\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_density(color='#7F948F')+\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\nThe code chunk below plots two kernel density lines by using colour or fill arguments of aes().\nChanges: - color within geom_density needs to be removed. - added fill and color within aes() - scale_color_manual() for changing line color - scale_fill_manual() for changing area fill colors.\n\nggplot(data=exam_data,\n       aes(x=MATHS,\n           fill = GENDER,\n           color=GENDER)) +\n  geom_density(size=2, \n               alpha=0.6)+\n  scale_color_manual(values = c(\"#E1C8C4\",\"#7F948F\"))+\n  scale_fill_manual(values = c(\"#E1C8C4\",\"#7F948F\"))+\n    labs(x = \"Maths Score\",\n       y = \"Density\",\n       title = \"Density of Maths Score by Gender\") +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_boxplot",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "7.7 geom_boxplot",
    "text": "7.7 geom_boxplot\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\nThe code chunk below plots boxplots by using geom_boxplot().\n\nggplot(data=exam_data, \n       aes(y=MATHS,\n           x=GENDER)) +\n  geom_boxplot() +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\nThe code chunk below plots the distribution of Maths scores by gender in notched plot instead of boxplot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE) +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\nWe can also incorporate facet_wrap() to create boxplots of math scores for each class that is separated by gender.\n\nggplot(data = exam_data, \n       aes(y = MATHS, \n           x = CLASS)) +\n  geom_boxplot() + \n  facet_wrap(~ GENDER) +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_violin",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_violin",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "7.8 geom_violin",
    "text": "7.8 geom_violin\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it’s easier to compare several distributions since they’re placed side by side.\nThe code below plot the distribution of Maths score by gender in violin plot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin() +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_point",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "7.9 geom_point",
    "text": "7.9 geom_point\ngeom_point() is especially useful for creating scatterplot.\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using geom_point(), grouped by gender.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= ENGLISH,\n           color = GENDER)) +\n  geom_point() +\n  scale_color_manual(values = c(\"#E1C8C4\",\"#7F948F\")) +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\nTo add reference lines and x/y axis limits:\n\nggplot(data=exam_data, \n       aes(x= ENGLISH, \n           y = MATHS, \n           color = GENDER)) +\n  geom_point() +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  scale_color_manual(values = c(\"#E1C8C4\",\"#7F948F\")) +\n  geom_vline(aes(xintercept = 50),\n             col = 'grey',\n             size = 0.8,\n             linetype = \"dashed\") + \n  geom_hline(aes(yintercept = 50),\n             col = 'grey',\n             size = 0.8,\n             linetype = \"dashed\") +  \n  labs(x = \"English Score\",\n       y = \"Maths Score\",\n       title = \"Maths against English Score by Gender\") +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#combination-of-geom-objects",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#combination-of-geom-objects",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "7.10 Combination of geom objects",
    "text": "7.10 Combination of geom objects\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\nImportant:\nOrder of geom layer matters! In the code below, boxplot is plotted after/above the scatter and thus covers parts of the scatterplot.\n\n\nShow the code\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n\n  geom_point(position = 'jitter',\n             size=0.5) +\n  geom_boxplot() +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5) +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "8.1 Working with stat()",
    "text": "8.1 Working with stat()\nThe boxplots below are incomplete because the positions of the means were not shown.\n\nggplot(data=exam_data,\n       aes( y= MATHS, x = GENDER)) +\n  geom_boxplot() +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "8.2 Working with stat - the stat_summary() method",
    "text": "8.2 Working with stat - the stat_summary() method\nThe code chunk below adds mean values by using stat_summary() function and overriding the default geom.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = 'red',\n               size=4) +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "8.3 Working with stat - the geom() method",
    "text": "8.3 Working with stat - the geom() method\nThe code chunk below adding mean values by using geom_() function and overriding the default stat.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)  +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-best-fit-curve",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-best-fit-curve",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "8.4 Adding best fit curve",
    "text": "8.4 Adding best fit curve\nThe scatterplot below shows the relationship of Maths and English grades of pupils. The interpretability of this graph can be improved by adding a best fit curve.\nIn the code chunk below, geom_smooth() is used to plot a best fit curve on the scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=1) +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\nThe default method used is loess.\nThe default smoothing method can be overridden as shown below.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=1, method = lm) +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\nTo add equation and R^2 to the plot, we can use the library ggpmisc.\n\npacman::p_load(ggpmisc)\n\nstat_poly_line() is used to add lm line and stat_poly_eq() displays the equation and R-square value.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  stat_poly_line() +\n  stat_poly_eq(use_label(c(\"eq\", \"R2\"))) +\n  geom_point() +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "9.1 Working with facet_wrap()",
    "text": "9.1 Working with facet_wrap()\nfacet_wrap wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\nThe code chunk below plots a trellis plot using facet-wrap().\n\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_histogram(bins=20) +\n  facet_wrap(~CLASS) +\n  labs(y='Number of students', \n       x='Math scores',\n       title = \"Maths scores by Class\") +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\nTilde Operator:\nThe operator ~ is used to define the relationship between dependent variable and independent variables in a formula; it separates the lefthand side and righthand side.\nThe basic syntax for the lm() function is: model &lt;- lm(y ~ x1 + x2, data=df)\nThe variable name on the left side of the tilde operator (y) represents the response variable. The variable names on the right side of the tilde operator (x1, x2) represent the predictor variables.\nFor multiple predictor variables: model &lt;- lm(y ~ x1 + x2 + x3, data=df)\nFor unknown number of predictor variables: model &lt;- lm(y ~ ., data=df)\n\n9.1.1 Subsetting Data\nIf we only want to visualise classes 3A, 3B, 3C, 3D, we could subset the exam data to include only these students using filter() from the dplyr package.\n\nsub_data &lt;- exam_data %&gt;% \n  filter(CLASS %in% c('3A', '3B', '3C', '3D'))\n\nggplot(data=sub_data,\n       aes(x=MATHS)) +\n  geom_histogram(bins=20) +\n  facet_wrap(~CLASS) +\n  labs(y='Number of students', \n       x='Math scores',\n       title = \"Maths scores for Classes 3A, 3B, 3C, 3D\") +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n9.1.2 Multiple Overlaid Histograms\n\nggplot(data=exam_data,\n       aes(x=MATHS, fill = GENDER)) + #Add fill to split histogram categories\n  geom_histogram(position = \"identity\", alpha=0.2, bins=20) +\n  labs(y='Number of students', \n       x='Math scores',\n       title = \"Maths scores by Gender\") +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\nReferences: StatisticsGlobe and Facetted histograms with overlaid normal curves\n\n\n9.1.3 Grouped Data\n\nBy ColumnBy Row\n\n\n\nggplot(data = exam_data, \n       aes(y = MATHS, \n           x = CLASS)) +\n  geom_boxplot() + \n  facet_wrap(~ GENDER) +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\nggplot(data = exam_data, \n       aes(y = MATHS, \n           x = CLASS)) +\n  geom_boxplot() + \n  facet_wrap(~ GENDER, nrow = 2, strip.position = \"right\") +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "9.2 facet_grid() function",
    "text": "9.2 facet_grid() function\nfacet_grid() forms a matrix of panels defined by row and column facetting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\nThe code chunk below plots a trellis plot using facet_grid().\n\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_histogram(bins=20) +\n  facet_grid(~CLASS) +\n  labs(y='Number of students', \n       x='Math scores',\n       title = \"Maths scores by Class\") +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "10.1 Working with Coordinate",
    "text": "10.1 Working with Coordinate\nBar chart of ggplot2 is in vertical form by default.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()+\n    labs(y='Number of students', \n       x='Race',\n       title = \"Number of Students by Race\") +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\nThe code chunk below flips the horizontal bar chart into vertical bar chart by using coord_flip().\nNote: No changes to x-, y- axis names under labs().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n    labs(y='Number of students', \n       x='Race',\n       title = \"Number of Students by Race\") +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "10.2 Changing the y- and x-axis range",
    "text": "10.2 Changing the y- and x-axis range\nThe scatterplot below is slightly misleading because the y-aixs and x-axis range are not equal.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5) +\n      labs(y='English', \n       x='Maths',\n       title = \"Graph of English against Maths scores\") +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\nThe code chunk below fixed both the y-axis and x-axis range from 0-100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5) +\n  coord_cartesian (xlim=c(0,100),\n                   ylim= c(0,100))+\n        labs(y='English', \n       x='Maths',\n       title = \"Graph of English against Maths scores\") +\n      theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "4.1 Working with ggtheme package",
    "text": "4.1 Working with ggtheme package\nggthemes provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\n\ntheme_economisttheme_hc()\n\n\n\n\nShow the code\nggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(bins=20,\n                 boundary=100,\n                 color='grey25',\n                 fill='grey90',size=0.8) +\n  theme_economist() +\n  labs(y= 'No. of \\nPupils') +\n  theme(axis.title.y=element_text(angle = 0,\n                                  vjust=0.9)) +\n  ggtitle('Distribution of Math scores')\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(bins=20,\n                 boundary=100,\n                 color='grey25',\n                 fill='grey90',size=0.8) +\n  theme_solarized() +\n  labs(y= 'No. of \\nPupils') +\n  theme(axis.title.y=element_text(angle = 0,\n                                  vjust=0.9)) +\n  ggtitle('Distribution of Math scores')\n\n\n\n\n\n\n\n\nIt also provides some extra geoms and scales for ‘ggplot2’. Refer to this vignette and ggthemes to learn more."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthemes-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthemes-package",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "4.2 Working with hrbthemes package",
    "text": "4.2 Working with hrbthemes package\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used. The second goal centers around productivity for a production workflow. In fact, this “production workflow” is the context for where the elements of hrbrthemes should be used.\n\nOriginalWith Elements\n\n\n\n\nShow the code\nggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(bins=20,\n                 boundary=100,\n                 color='grey25',\n                 fill='grey90') +\n  theme_ipsum() +\n  labs(y= 'No. of \\nPupils') +\n  theme(axis.title.y=element_text(angle = 0,\n                                  vjust=0.9)) +\n  ggtitle('Distribution of Math scores')\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(binwidth=5,\n                 boundary=100,\n                 color='grey25',\n                 fill='grey90') +\n  theme_ipsum(axis_title_size = 15,\n              base_size=12,\n              grid= 'Y') +\n labs(y= 'No. of \\nPupils') +\n theme(axis.title.y=element_text(angle = 0,\n                                  vjust=0.9)) +\n  ggtitle('Distribution of Math scores')\n\n\n\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 15,\nbase_size argument is used to increase the default axis label to 12, and\ngrid argument is used to remove the x-axis grid lines."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "5.1 Creating Composite Graphics: pathwork methods",
    "text": "5.1 Creating Composite Graphics: pathwork methods\nThere are several ggplot2 extension’s functions support the needs to prepare composite figure by combining several graphs such as grid.arrange() of gridExtra package and plot_grid() of cowplot package. In this section, we use ggplot2 extension called patchwork which is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax, such as:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "5.2 Combining two ggplot2 graphs",
    "text": "5.2 Combining two ggplot2 graphs\nFigure below shows a composite of two histograms created using patchwork.\n\nHorizontalVerticalChange relative area\n\n\n\n\nShow the code\np1 + p2\n\n\n\n\n\n\n\n\n\nShow the code\np1 / p2\n\n\n\n\n\n\n\n\n\nShow the code\np1 + p2 + plot_layout(ncol=2,widths=c(2,1))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "5.3 Combining three ggplot2 graphs",
    "text": "5.3 Combining three ggplot2 graphs\nWe can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:\n\n“|” operator to stack two ggplot2 graphs,\n“/” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting.\n\n\n/ and | Operators- Operator For Subtrack PlacementNested LayoutsAdding non-ggplot content\n\n\n\n\nShow the code\n(p1 / p2) | p3\n\n\n\n\n\n\n\n\n\nShow the code\np1 + p2 - p3 + plot_layout(ncol=1)\n\n\n\n\n\n\n\n\n\nShow the code\np3 + {\n  p1 + p2 + plot_layout(ncol=1)\n}\n\n\n\n\n\n\n\n\n\nShow the code\n((p1 / p2) | p3) + grid:: textGrob('I can add \\nother content here.',\n                                   hjust=0, \n                                   x=-0, \n                                   gp=grid::gpar(font=3, \n                                                 fontsize = 12))\n\n\n\n\n\n\n\n\nTo learn more about, refer to Plot Assembly."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "5.4 Creating a composite figure with tag",
    "text": "5.4 Creating a composite figure with tag\nIn order to identify subplots in text, patchwork also provides auto-tagging capabilities as shown in the figure below.\n\nEnumerationCustom / multilevel tagging\n\n\n\n\nShow the code\n((p1 / p2) | p3) +\n  plot_annotation(tag_levels = 'I') # Can also use tag_levels ='A'\n\n\n\n\n\n\n\n\n\nShow the code\n((p1 / p2) | p3)  + \n  plot_layout(tag_level = 'new') +\n  plot_annotation(tag_levels = c('A', '1'), tag_prefix = 'Fig. ', tag_sep = '.', \n                  tag_suffix = ':')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-inset",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-inset",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "5.5 Creating figure with inset",
    "text": "5.5 Creating figure with inset\nBeside providing functions to place plots next to each other based on the provided layout. With inset_element() of patchwork, we can place one or several plots or graphic elements freely on top or below another plot.\n\n\nShow the code\np4 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np5 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np6 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"Correlation between\\nEnglish & Maths scores\")\n\np6 +  inset_element(p5,\n                    left = 0.02,\n                    bottom=0.7,\n                    right= 0.5,\n                    top=1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "5.6 Creating a composite figure by using patchwork and ggtheme",
    "text": "5.6 Creating a composite figure by using patchwork and ggtheme\nFigure below is created by combining patchwork and theme_economist() of ggthemes package discussed earlier.\n\ntheme_economisttheme_solarized_2\n\n\n\npatchwork &lt;- ((p4/p5) | p6)\n\npatchwork & theme_economist() +\n  theme(plot.title=element_text(size =10),\n                                        axis.title.y=element_text(size = 9,\n                                                                  angle = 0,\n                                                                  vjust=0.9),\n                                         axis.title.x=element_text(size = 9))\n\n\n\n\n\n\n\npatchwork & theme_solarized_2() +\n  theme(plot.title=element_text(size =10),\n                                        axis.title.y=element_text(size = 9,\n                                                                  angle = 0,\n                                                                  vjust=0.9),\n                                         axis.title.x=element_text(size = 9))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tooltip-effect-with-tooltip-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tooltip-effect-with-tooltip-aesthetic",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "3.1 Tooltip effect with tooltip aesthetic",
    "text": "3.1 Tooltip effect with tooltip aesthetic\nBelow shows a typical code chunk to plot an interactive statistical graph by using ggiraph package. Notice that the code chunk consists of two parts. First, a ggplot object will be created. Next, girafe() of ggiraph will be used to create an interactive svg object.\nNotice that two steps are involved. First, an interactive version of ggplot2 geom (i.e. geom_dotplot_interactive()) will be used to create the basic graph. Then, girafe() will be used to generate an svg object to be displayed on an html page.\nSteps in creating an interactive graphic:\n\nInstead of geom_point (i.e.), use geom_point_interactive - provide at least one of the aesthetics tools (tooltip, data_id or onclick)\nCall function girafe with the ggplot object to translate graphic into a web interactive graphic.\n\nBy hovering the mouse pointer on an data point of interest, the student’s ID (character) will be displayed. To set index as the tooltip, replace with row.names(exam_data). To set numeric values as tooltip, replace with factor(MATHS) (number).\n\nCharacter format (ID)Row IndexNumber format (Math)\n\n\n\n\nShow the code\np &lt;- ggplot(data=exam_data,\n            aes(x=MATHS)) +\n  geom_dotplot_interactive(aes(tooltip=ID),\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks= NULL) +  #&lt;&lt;&lt; null to suppress axis labels\n  labs(x =\"Distribution of Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))\n\ngirafe(ggobj=p,\n       width_svg = 6,\n       height_svg = 6*0.618)\n\n\n\n\n\n\n\n\n\n\nShow the code\np &lt;- ggplot(data=exam_data,\n            aes(x=MATHS)) +\n  geom_dotplot_interactive(aes(tooltip=row.names(exam_data)),\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks= NULL)+  #&lt;&lt;&lt; null to suppress axis labels\n  labs(x =\"Distribution of Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))\n\ngirafe(ggobj=p,\n       width_svg = 6,\n       height_svg = 6*0.618)\n\n\n\n\n\n\n\n\n\n\nShow the code\np &lt;- ggplot(data=exam_data,\n            aes(x=MATHS)) +\n  geom_dotplot_interactive(aes(tooltip=factor(MATHS)),\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks= NULL)+  #&lt;&lt;&lt; null to suppress axis labels\n  labs(x =\"Distribution of Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))\n\ngirafe(ggobj=p,\n       width_svg = 6,\n       height_svg = 6*0.618)\n\n\n\n\n\n\n\n\n\n\n3.1.1 Displaying multiple information on tooltip\nThe content of the tooltip can be customised by including a list object as shown in the code chunk below. We create a new column [tooltip] in exam_data by concatenating ID and Class.\nThe first three lines of codes in the code chunk create a new field called tooltip. At the same time, it populates text in ID and CLASS fields into the newly created field. Next, this newly created field is used as tooltip field as shown in the code of line 7.\n\n\nShow the code\nexam_data$tooltip &lt;- c(paste0(\"Name = \",\n                              exam_data$ID,\n                              \"\\n Class = \",\n                              exam_data$CLASS))\n\np &lt;- ggplot(data=exam_data,\n            aes(x=MATHS)) +\n  geom_dotplot_interactive(aes(tooltip=tooltip),\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks= NULL)+  #null to suppress axis labels\n  labs(x =\"Distribution of Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))\n  \ngirafe(ggobj=p,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\nBy hovering the mouse pointer on an data point of interest, the student’s ID and Class will be displayed.\n\n\n3.1.2 Customising Tooltip style\nCode chunk below uses opts_tooltip() of ggiraph to customize tooltip rendering by adding css declarations.\n\nBlack and bold fontItalic with increased font size\n\n\nNotice that the background colour of the tooltip is gray and the font colour is black and bold.\n\n\nShow the code\ntooltip_css &lt;- 'background-color:#dfdfeb; font-style:bold; color:black;'  #&lt;&lt;&lt;\n\np &lt;- ggplot(data=exam_data,\n            aes(x=MATHS)) +\n  geom_dotplot_interactive(aes(tooltip=tooltip),\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks= NULL) +  #null to suppress axis labels\n  labs(x =\"Distribution of Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))\n  \ngirafe(ggobj=p,\n       width_svg = 8,\n       height_svg = 8*0.618,\n       options = list(          #&lt;&lt;&lt;\n         opts_tooltip(          #&lt;&lt;&lt;\n           css=tooltip_css\n         )\n       ))\n\n\n\n\n\n\n\n\nWe can also make the font italic and change the font size.\n\n\nShow the code\ntooltip_css &lt;- 'background-color:#dfdfeb; font-style:bold;  font-style:italic;\ncolor:black;font-size:18px;'  #&lt;&lt;&lt;\n\np &lt;- ggplot(data=exam_data,\n            aes(x=MATHS)) +\n  geom_dotplot_interactive(aes(tooltip=tooltip),\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks= NULL)+  #null to suppress axis labels\n  labs(x =\"Distribution of Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))\n  \ngirafe(ggobj=p,\n       width_svg = 8,\n       height_svg = 8*0.618,\n       options = list(          #&lt;&lt;&lt;\n         opts_tooltip(          #&lt;&lt;&lt;\n           css=tooltip_css\n         )\n       ))\n\n\n\n\n\n\n\n\n\nRefer to Customizing girafe objects to learn more about how to customise ggiraph objects.\n\n\n3.1.3 Displaying statistics on tooltip\nCode chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\n\nShow the code\ntooltip &lt;- function(y, ymax, accuracy = 0.01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales:: number (ymax-y, accuracy = accuracy)\n  paste(\"Mean maths scores (with standard error):\" , mean, \"+/-\", sem)\n}\n\n\ngg_point &lt;- ggplot(data=exam_data,\n                   aes(x = RACE)) +\n  stat_summary(aes(y=MATHS,\n                   tooltip = after_stat(tooltip(y, ymax))),\n               fun.data = mean_se,\n               geom = GeomInteractiveCol,\n               fill = 'lightblue') +\n  stat_summary(aes(y= MATHS),\n               fun.data = mean_se,\n               geom= 'errorbar',\n               width = 0.2,\n               size = 0.2)+\n  labs(title=\"Math Scores by Race\",\n  y =\"Math Scores\") + \n  theme(axis.title.x = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))\n\ngirafe(ggobj=gg_point,\n       width_svg = 8,\n       height_svg = 8 * 0.618)\n\n\n\n\n\n\nExplanation of the codes above:\n\nTooltip self-defined function:\n\n\nIt takes in two arguments y and ymax from results of stat_summary() via after_stat().\naccuracy is a fixed parameter with a value of 0.01. It takes a number to round to, ie 0.01 is used to show 2 decimal places of precision.\nscales:: number is to convert number to text, with formatting.\nsem output: Since ymax = y + se, thus, sem = ymax-y\nIt outputs “Mean maths scores (with standard error): 57.44 +/- 2.03”\n\n\nStat_summary function creates 2 other geom layers. The first stat summary function has two aes mappings to visual: (1) MATHS as Y (2) tooltip output\n\n\nIt first applies mean_se method to output y, ymin, ymax for each MATHS score by RACE\nAfter this, these groups of 3 values are send into tooltip function via after_stat() helper function\nGeomInteractive makes the columns interactive so tooltips is displayed when users hover over\n\n\nThe second stat summary uses y, ymin, ymax obtained from method= mean_se to plot the error bar\n\nDocumentation of mean_se:\nstat_summary(aes(fun.data=mean_se) is default. mean_se(x, mult = 1). When input a list of values, it returns a data frame with three columns:\n\ny: The mean.\nymin: The mean minus the multiples of the standard error.\nymax: The mean plus the multiples of the standard error.\n\nThere are a few summary functions from the Hmisc package which are reformatted for use in stat_summary(). They all return aesthetics for y, ymax, and ymin.\n\nmean_cl_normal(): Returns sample mean and 95% confidence intervals assuming normality (i.e., t-distribution based)\nmean_sdl(): Returns sample mean and a confidence interval based on the standard deviation times some constant\nmean_cl_boot(): Uses a bootstrap method to determine a confidence interval for the sample mean without assuming normality.\nmedian_hilow(): Returns the median and an upper and lower quantiles.\n\n\n\n3.1.4 Hover effect with data_id aesthetic\nCode chunk below shows the second interactive feature of ggiraph, namely data_id.\nElements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\n\n\nShow the code\np &lt;- ggplot(data= exam_data,\n            aes(x=MATHS)) +\n  geom_dotplot_interactive(aes(data_id=CLASS),\n                           stackgroups = TRUE,\n                           binwidth= 1,\n                           method = 'histodot') +\n  scale_y_continuous( NULL,\n                      breaks = NULL) +\n  labs(x =\"Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))\n\ngirafe(ggobj=p,\n       width_svg = 6,\n       height_svg = 6 *0.618)\n\n\n\n\n\n\nNote: the default value of the hover css is hover_css = “fill:orange;”.\n\n\n3.1.5 Styling hover effect\nIn the code chunk below, css codes are used to change the highlighting effect.\nElements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\n\n\nShow the code\np &lt;- ggplot(data=exam_data,\n            aes(x=MATHS)) +\n  geom_dotplot_interactive(aes(data_id = CLASS),\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks= NULL)+  #null to suppress axis labels\n  labs(x =\"Distribution of Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))\n  \ngirafe(ggobj=p,\n       width_svg = 6,\n       height_svg = 6*0.618,\n       options = list(                          #&lt;&lt;&lt;\n         opts_hover(css='fill: #202020;'),      #&lt;&lt;&lt;\n         opts_hover_inv(css = 'opacity: 0.2;')  #&lt;&lt;&lt;\n         )\n       )\n\n\n\n\n\n\nNote: Different from previous example (tooltip_css is pre-defined as input to a parameter in girafe(options=list(opts_tooltip(css=tooltip_css)))), in this example the ccs customisation request are encoded directly as girafe(options=list(opts_hover(css='tooltip_css'fill:#202020;')))\n\n\n3.1.6 Combining tooltip and hover effect\nThere are times that we want to combine tooltip and hover effect on the interactive statistical graph as shown in the code chunk below.\nElements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. At the same time, the tooltip will show the CLASS.\n\n\nShow the code\np &lt;- ggplot(data=exam_data,\n            aes(x=MATHS)) +\n  geom_dotplot_interactive(aes(tooltip = CLASS,  #&lt;&lt;&lt; Tooltip popup\n                               data_id = CLASS), #&lt;&lt;&lt;\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks= NULL)+  #null to suppress axis labels\n  labs(x =\"Distribution of Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))\n\ngirafe(ggobj=p,\n       width_svg = 6,\n       height_svg = 6*0.618,\n       options = list(                          #&lt;&lt;&lt;\n         opts_hover(css='fill: black;'),         #&lt;&lt;&lt;\n         opts_hover_inv(css = 'opacity: 0.2;')  #&lt;&lt;&lt;\n         )\n       )\n\n\n\n\n\n\n\n\n3.1.7 Click effect with onclick\nonclick argument of ggiraph provides hotlink interactivity on the web.\nThe code chunk below shown an example of onclick. Web document link with a data object will be displayed on the web browser upon mouse click.\n\n\nShow the code\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)+\n  labs(x =\"Distribution of Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))\n\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)\n\n\n\n\n\n\nNote that click actions must be a string column in the dataset containing valid javascript instructions.\n\n\n3.1.8 Coordinated Linked Plots with ggiraph\nCoordinated multiple views methods has been implemented in the data visualisation below.\nNotice that when a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too.\n\n\nShow the code\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID,\n        tooltip = ID),      #&lt;&lt;&lt; Added          \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) +    #&lt;&lt;&lt; p1 same as p2 x-axis\n  scale_y_continuous(NULL,            # suppress y axis\n                     breaks = NULL)+\n  labs(x =\"Distribution of Math Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))  \n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID,\n        tooltip = ID),      #&lt;&lt;&lt; Added                \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) +    #&lt;&lt;&lt; p1 same as p2 x-axis\n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  labs(x =\"Distribution of English Scores\") + \n  theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))  \n\ngirafe(code = print(p1 + p2),         #&lt;&lt;&lt; coordinated multiple views\n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\nIn order to build a coordinated multiple views as shown in the example above, the following programming strategy will be used:\n\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\nNote: hover effects can be encoded directly in girafe unlike tooltips and data_id . Added tooltip aes effects as well.\nThe data_id aesthetic is critical to link observations between plots and the tooltip aesthetic is optional but nice to have when mouse over a point."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "4.1 Creating an interactive scatter plot: plot_ly() method",
    "text": "4.1 Creating an interactive scatter plot: plot_ly() method\nThe tabset below shows an example an interactive plot created by using plot_ly()\n\n\nShow the code\nplot_ly(data = exam_data,\n        x = ~MATHS,\n        y = ~ENGLISH)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-visual-variable-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-visual-variable-plot_ly-method",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "4.2 Working with visual variable: plot_ly() method",
    "text": "4.2 Working with visual variable: plot_ly() method\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e. RACE). Click on the colour symbol at the legend to only show the RACE selected.\n\n\nShow the code\nplot_ly(data = exam_data,\n        x = ~ENGLISH,\n        y = ~MATHS,\n        color = ~RACE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "4.3 Creating an interactive scatter plot: ggplotly() method",
    "text": "4.3 Creating an interactive scatter plot: ggplotly() method\nThe code chunk below plots an interactive scatter plot by using ggplotly().\nNotice that the only extra line you need to include in the code chunk is ggplotly().\n\nBasicCustomised Tooltip\n\n\n\np &lt;- ggplot(data = exam_data,\n            aes(x= MATHS,\n                y= ENGLISH)) +\n  geom_point (size =1) +\n  geom_smooth(method=lm)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  labs(y= 'ENGLISH') +                                    \n  theme(axis.title.y=element_text(angle = 0,\n                                  vjust=0.9)) +   #&lt;&lt;&lt; does not work in ggplotly\n  labs(title = 'English against Math scores', \n       x = 'Math',\n       y = 'English') +\n  theme(plot.title = element_text(size = 14, face = \"bold\"),\n        axis.title.x = element_text(size = 10, face = \"bold\"),\n        axis.title.y = element_text(size = 10, face = \"bold\"),\n        plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\")\n        )\n\nggplotly(p)\n\n\n\n\n\n\n\nTooltip includes: Class, StudentID, Gender, Race, Math, and English scores.\n\np_c &lt;- ggplot(data = exam_data,\n            aes(x= MATHS,\n                y= ENGLISH,\n                color=CLASS,\n                label1=ID,      #&lt;&lt;&lt;\n                label2=GENDER,  #&lt;&lt;&lt;\n                label3=RACE,    #&lt;&lt;&lt;\n                label4=MATHS,   #&lt;&lt;&lt;\n                label5=ENGLISH  #&lt;&lt;&lt;\n                )) +\n  geom_point (size =1) +\n  geom_smooth(method=lm)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle('English and Math scores')+\n  labs(title = 'English against Math scores', \n       x = 'Math',\n       y = 'English',\n       color=\"Class\") +\n  theme(plot.title = element_text(size = 14, face = \"bold\"),\n        axis.title.x = element_text(size = 10, face = \"bold\"),\n        axis.title.y = element_text(size = 10, face = \"bold\"),\n        plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"),\n        legend.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\")\n        )  \n\nggplotly(p_c, tooltip=c(\"label1\", \"label2\", \"label3\", \"label4\", \"label5\")) #&lt;&lt;&lt;"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-linked-plots-with-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-linked-plots-with-plotly",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "4.4 Coordinated Linked Plots with plotly",
    "text": "4.4 Coordinated Linked Plots with plotly\nThe creation of a coordinated linked plot by using plotly involves three steps:\n\nhighlight_key() of plotly package is used as shared data.\ntwo scatterplots will be created by using ggplot2 functions.\nlastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\n\n\nShow the code\nd &lt;- highlight_key(exam_data)\n\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))+\n    theme(plot.title = element_text(size = 14, face = \"bold\"),\n        axis.title.x = element_text(size = 10, face = \"bold\"),\n        axis.title.y = element_text(size = 10, face = \"bold\"),\n        plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\")\n        ) \n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  theme(plot.title = element_text(size = 14, face = \"bold\"),\n        axis.title.x = element_text(size = 10, face = \"bold\"),\n        axis.title.y = element_text(size = 10, face = \"bold\"),\n        plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\")\n        ) +\n labs(x='Maths', \n       y='Science')\n\nsubplot(ggplotly(p1),\n        ggplotly(p2)) %&gt;% \n  layout(title = \"Side-by-Side Subplots\")\n\n\n\n\n\n\nThings to learn from the code chunk:\n\nhighlight_key() simply creates an object of class crosstalk::SharedData.\nVisit this link to learn more about crosstalk\n\nDifference between 3.1.8 and 4.4\n3.1.8:interactive geom functions of ggiraph & girafe(patchwork) used\n4.4 : highlight_key() , normal ggplot + geom_obj , subplot(ggplot(p1), ggplot(p2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#sliders-with-animated-gapminder-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#sliders-with-animated-gapminder-data",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "4.5 Sliders with animated Gapminder data",
    "text": "4.5 Sliders with animated Gapminder data\nKey arguments: - animation_opts() function here to change properties of the plotly animation - frame controls the amount of time between transitions (in milliseconds) - redraw = FALSE option means that the base plot won’t be redrawn at every transition.\nHere’s a plot that shows life expectancy and GDP evolving over time.\n\nlibrary(gapminder)\n\np &lt;- ggplot(gapminder, aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)) +\n  geom_point(alpha = 0.1) +\n  geom_point(aes(frame = year, ids = country)) +\n  scale_x_continuous(trans = \"log10\") +\n    theme(axis.line = element_blank(),\n        plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"),\n        legend.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))  \n\nggplotly(p) %&gt;% \n  animation_opts(1000, redraw = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table-dt-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table-dt-package",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "5.1 Interactive Data Table: DT package",
    "text": "5.1 Interactive Data Table: DT package\n\nA wrapper of the JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using the JavaScript library ‘DataTables’ (typically via R Markdown or Shiny).\n\n\n\nShow the code\nDT::datatable(exam_data, \n              caption = htmltools::tags$caption(style = \"caption-side: bottom; text-align: center;\",\n                                                \"Table of \", htmltools::em(\"Exam Data for Primary 3\")),\n              class='compact',\n              options = list(pageLength = 3))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk-method",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "5.2 Linked brushing: crosstalk method",
    "text": "5.2 Linked brushing: crosstalk method\n\n\nShow the code\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n    theme(plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))+\n  ggtitle(\"English vs Math scores\")\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,\n                  DT::datatable(d, options = list(pageLength = 3)),\n                  widths=5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhighlight_key(): used to create a unique identifier for each row in a data frame, based on its values. The resulting identifier is used to keep track of the rows that have been selected or highlighted on a plot, particularly when using the highlight() function.\nplotly_selected: a built-in plotly attribute that represents the currently selected points on the plot.\nSo, highlight(ggplotly(p), \"plotly_selected\") is taking the ggplotly(p) object and highlighting the currently selected points on the plot by changing their appearance in some way, such as by changing their color or size.\ncrosstalk::bscols(): creates a Bootstrap column layout. The first argument is the left column, and the second argument is the right column. The widths argument is used to specify the relative width of the two columns, with the default value being 6 for both.\ncrosstalk::bscols(): particularly useful when working with interactive data visualizations, as it allows for easy linking of different components of the dashboard, such as brushing and highlighting on the plot and filtering on the data table."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggiraph",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "6.1 ggiraph",
    "text": "6.1 ggiraph\nThis link provides online version of the reference guide and several useful articles. Use this link to download the pdf version of the reference guide.\n\nHow to Plot With Ggiraph\nInteractive map of France with ggiraph\nCustom interactive sunbursts with ggplot in R\nThis link provides code example on how ggiraph is used to interactive graphs for Swiss Olympians - the solo specialists."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-for-r",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-for-r",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "6.2 plotly for R",
    "text": "6.2 plotly for R\n\nGetting Started with Plotly in R\nA collection of plotly R graphs are available via this link.\nCarson Sievert (2020) Interactive web-based data visualization with R, plotly, and shiny, Chapman and Hall/CRC is the best resource to learn plotly for R. The online version is available via this link\nPlotly R Figure Reference provides a comprehensive discussion of each visual representations.\nPlotly R Library Fundamentals is a good place to learn the fundamental features of Plotly’s R API.\nGetting Started\nVisit this link for a very interesting implementation of gganimate by your senior.\nBuilding an animation step-by-step with gganimate.\nCreating a composite gif with multiple gganimate panels"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#basic-concepts-of-animation",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#basic-concepts-of-animation",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "1.1 Basic concepts of animation",
    "text": "1.1 Basic concepts of animation\nWhen creating animations, the plot does not actually move. Instead, many individual plots are built and then stitched together as movie frames, just like an old-school flip book or cartoon. Each frame is a different plot when conveying motion, which is built using some relevant subset of the aggregate data. The subset drives the flow of the animation when stitched back together."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#terminology",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#terminology",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "1.2 Terminology",
    "text": "1.2 Terminology\nBefore we dive into the steps for creating an animated statistical graph, it’s important to understand some of the key concepts and terminology related to this type of visualization.\n\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The animation attributes are the settings that control how the animation behaves. For example, you can specify the duration of each frame, the easing function used to transition between frames, and whether to start the animation from the current frame or from the beginning."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#static-population-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#static-population-bubble-plot",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "3.1 Static population bubble plot",
    "text": "3.1 Static population bubble plot\nIn the code chunk below, the basic ggplot2 functions are used to create a static bubble plot. A bubble plot is created when a third numeric variable is assigned to size = argument inside a ggplot with geom_point.\n\n\nShow the code\np &lt;- ggplot(data= globalPop,\n       aes(x= Old,\n           y=Young,\n           size= Population,\n           color=Country)) +\n  geom_point(alpha = 0.7,\n             show.legend = FALSE) +\n  scale_color_manual(values=country_colors) +  #&lt;&lt;&lt; 'country_colors' from Gapminder lib\n  scale_size(range= c(2,12)) +\n  labs(title = \"Age Distribution Across Time\",\n      subtitle ='Year: {frame_time}',\n       x = '% Aged',\n       y= '% Young')+\n  theme(legend.position = \"bottom\",\n      plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))\n\np\n\n\n\n\n\n\nThe scale_size(range= c(2,12)) sets the range of point sizes to be used in the plot to between 2 and 12.\nPopulation is mapped to size aes in ggplot, thus this range parameter controls the min and max size of the points.\n\nUsing scale_color_viridis_d() :\nThe code below uses scale_color_viridis_d() discrete colour scale instead, and does not require Gapminder package to be loaded.\n\n\nShow the code\np2 &lt;- ggplot(data= globalPop,\n       aes(x= Old,\n           y=Young,\n           size= Population,\n           color=Country)) +\n  geom_point(alpha = 0.7,\n             show.legend = FALSE) +\n  scale_color_viridis_d(option=\"plasma\")+    #&lt;&lt;&lt;\n  scale_size(range= c(2,12)) +\n  labs(title = \"Age Distribution Across Time\",\n      subtitle ='Year: {frame_time}',\n       x = '% Aged',\n       y= '% Young')+\n  theme(legend.position = \"bottom\",\n      plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))  \n\np2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#animated-bubble-plot",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "3.2 Animated bubble plot",
    "text": "3.2 Animated bubble plot\nNow you can incorporate the animation into a basic ggplot graph. Take note that when you run this code, the visual takes some time to render. This is because RStudio is creating a gif representation of your animated chart."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#basic",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#basic",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "Basic",
    "text": "Basic\nIn the code chunk below,\n\ntransition_time() of gganimate is used to create transition through a continuous variable, where there are distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\nTransition through distinct countries in time\n\n\nShow the code\np +\n  transition_time(Year) +\n  ease_aes(\"linear\")\n\n\n\n\n\nUsing scale_color_viridis_d() :\n\n\nShow the code\np2 +\n  transition_time(Year) +\n  ease_aes(\"linear\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#making-the-label-more-visible",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#making-the-label-more-visible",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "Making the label more visible",
    "text": "Making the label more visible\nWith the animation, it’s more engaging to see how life expectancy has changed over time in different countries. However, as you can see, the date is included in the title, but it is omitted from the graph, which prevents the title from being used for other purposes.\n\n\nShow the code\nggplot(data= globalPop,\n       aes(x= Old,\n           y=Young,\n           size= Population,\n           color=Country)) +\n  geom_point(alpha = 0.7,\n             show.legend = FALSE) +\n  geom_text(aes(x=min(Old),\n                y=min(Young),\n                label=as.factor(Year)),\n            hjust= -1.9,\n            vjust = -7.2,\n            alpha = 0.2,\n            col = \"gray\",\n            size= 20) +\n  scale_color_manual(values=country_colors) +  #&lt;&lt;&lt; 'country_colors' from Gapminder lib\n  scale_size(range= c(2,12)) +\n  labs(title = \"Age Distribution Across Time\",\n       x = '% Aged',\n       y= '% Young')+\n  theme(plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))+\n  transition_time(Year) +\n  ease_aes(\"linear\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#combining-with-geom_text",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#combining-with-geom_text",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "Combining with geom_text",
    "text": "Combining with geom_text\nText geoms are useful for labeling plots. They can be used by themselves as scatterplots or in combination with other geoms, for example, labeling points or for annotating the height of bars. geom_text() adds only text to the plot. geom_label() draws a rectangle behind the text, making it easier to read.\nI thought it would be clearer for the geom_point and geom_text to be placed side-by-side so I won’t have to refer to a the legend, but the trade-off is a messier overlapped plot.\n\n\nShow the code\npt &lt;- ggplot(data= globalPop,\n       aes(x= Old,\n           y=Young,\n           size= Population,\n           color=Country)) +\n  geom_point(alpha = 0.7,\n             show.legend = FALSE) +\n    scale_color_manual(values=country_colors) +  #&lt;&lt;&lt; 'country_colors' from Gapminder lib\n    scale_size(range= c(2,12)) +\n    labs(title = \"Age Distribution Across Time\",\n         x = '% Aged',\n         y= '% Young')+\n  geom_text(aes(x=min(Old),\n                y=min(Young),\n                label=as.factor(Year)),\n            hjust= -1.9,\n            vjust = -7.2,\n            alpha = 0.5,\n            col = \"gray\",\n            size = 20) +\n    geom_text(data=globalPop,                #&lt;&lt;&lt;\n            aes(x=Old + 1.2,                 #&lt;&lt;&lt; Add/minus a bit to or from the x mapping to shift labels left/right\n                y=Young + 1.2,               #&lt;&lt;&lt; Add/minus a bit to or from the y mapping to shift labels up/down  \n                label=Country,\n                color = \"Black\",             #&lt;&lt;&lt; Some Country colours were too light when color = Country was used\n                hjust=0,\n                vjust= 1.2),\n                size=2.5,\n                show.legend = FALSE)+        #&lt;&lt;&lt; Should be outside of aes() of geom_text()\n  theme(plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\")) +  \n  transition_time(Year) +\n  ease_aes(\"linear\")\n\npt\n\n\n\n\n\nReplacing geom_text() by geom_text_repel() from our last chapter gives us the following results. Also not ideal!\n\n\nShow the code\nggplot(data= globalPop,\n       aes(x= Old,\n           y=Young,\n           size= Population,\n           color=Country)) +\n  geom_point(alpha = 0.7,\n             show.legend = FALSE) +\n    scale_color_manual(values=country_colors) +  #&lt;&lt;&lt; 'country_colors' from Gapminder lib\n    scale_size(range= c(2,12)) +\n    labs(title = \"Age Distribution Across Time\",\n         x = '% Aged',\n         y= '% Young')+\n  geom_text(aes(x=min(Old),\n                y=min(Young),\n                label=as.factor(Year)),\n            hjust= -1.9,\n            vjust = -7.2,\n            alpha = 0.5,\n            col = \"gray\",\n            size = 20) +\n  geom_text_repel(data=globalPop,            #&lt;&lt;&lt;\n            aes(x=Old + 1.2,                 #&lt;&lt;&lt; Add/minus a bit to or from the x mapping to shift labels left/right\n                y=Young + 1.2,               #&lt;&lt;&lt; Add/minus a bit to or from the y mapping to shift labels up/down \n                label=Country,\n                color = \"Black\",             #&lt;&lt;&lt; Some Country colours were too light when color = Country was used\n                hjust=0,\n                vjust= 1.2),\n            size=2.5,\n            show.legend = FALSE,             #&lt;&lt;&lt; Should be outside of aes() of geom_text()\n            max.overlaps=)+\n  \n  theme(plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\")) +\n  transition_time(Year) +\n  ease_aes(\"linear\")\n\n\n\n\n\nUsed with both geom_text_repel() from ggrepel and geom_text_s() from ggpp.\n\n\nShow the code\nggplot(data= globalPop,\n       aes(x= Old,\n           y=Young,\n           size= Population,\n           color=Country,\n           label=Country)) +                   #&lt;&lt;&lt; Need to add for geom_text_s to work\n  geom_point(alpha = 0.7,\n             show.legend = FALSE) +\n  scale_color_manual(values=country_colors) +  #&lt;&lt;&lt; 'country_colors' from Gapminder lib\n  scale_size(range= c(2,12)) +\n  labs(title = \"Age Distribution Across Time\",\n       x = '% Aged',\n       y= '% Young')+\n  geom_text(aes(x=min(Old),\n                y=min(Young),\n                label=as.factor(Year)),\n            hjust= -1.9,\n            vjust = -7.2,\n            alpha = 0.5,\n            col = \"gray\",\n            size = 20) +\n  geom_text_s(nudge_x=2, show.legend = FALSE)+\n  expand_limits(x=10) +\n  theme(plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\")) +\n  transition_time(Year) +\n  ease_aes(\"linear\")\n\n\n\n\n\nWill update again when I can think of something better…\nYou can use anim_save(\"file_location\", plot) function to export animated chart in GIF format.\n\nanim_save(filename=\"Images/animation.gif\", pt)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#create-facets-by-continent",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#create-facets-by-continent",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "Create facets by continent",
    "text": "Create facets by continent\nCombining with facet_wrap() allows us to arrange the plots in a more space efficient manner when we have a single variable with many levels, such as the 6 unique Continents.\n\n\nShow the code\np + \n  facet_wrap(~Continent) +\n  transition_time(Year)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#let-the-view-follow-the-data-in-each-frame",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#let-the-view-follow-the-data-in-each-frame",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "Let the view follow the data in each frame",
    "text": "Let the view follow the data in each frame\n\n\nShow the code\np + transition_time(Year) +\n  view_follow(fixed_y = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#display-preceding-frames-with-a-gradual-decrease-in-size",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#display-preceding-frames-with-a-gradual-decrease-in-size",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "Display preceding frames with a gradual decrease in size",
    "text": "Display preceding frames with a gradual decrease in size\nBy displaying the most recent frames up to the current, this shadow is intended to create a small wake after data. You can choose to gradually reduce the shadow’s size and/or opacity. The duration of the wake is not specified in absolute frames, as this would subject the animation to framerate changes. Rather than that, it is expressed as a percentage of the total duration of the animation.\n\n\nShow the code\np + transition_time(Year) +\n  shadow_wake(wake_length = 0.1, alpha = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#show-the-original-data-as-background-marks",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#show-the-original-data-as-background-marks",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "Show the original data as background marks",
    "text": "Show the original data as background marks\n\n\nShow the code\np + transition_time(Year) +\n  shadow_mark(alpha = 0.3, size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#animated-line-graph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#animated-line-graph",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "3.3 Animated Line Graph",
    "text": "3.3 Animated Line Graph\n\n\nShow the code\nl &lt;- ggplot(\n  globalPop,\n  aes(Year, Old, group = Continent, color = Continent),\n  ) +\n  geom_line(show.legend = FALSE) +\n  scale_color_viridis_d() +\n  labs(x = \"Year\", y = \"% Aged\", title=\"% Aged Across Years\")+\n  geom_text(data=globalPop,              #&lt;&lt;&lt;\n            aes(x=Year,\n                y=Old,\n                label=Continent,\n                color=Continent,\n                hjust=0,\n                size=10),\n                show.legend = FALSE)+\n  theme(plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"),\n        legend.background = element_rect(fill=\"#f5f5f5\"))\n\n\n\n3.3.1 Reveal data along a given dimension\nReveal by day (x-axis):\n\n\nShow the code\nl + \n  geom_point() +\n  transition_reveal(Year)\n\n\n\n\n\nAnimation looks jumpy because there are a lot of countries for each continent for every year."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#reveal-data-along-a-given-dimension",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#reveal-data-along-a-given-dimension",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "3.2.1 Reveal data along a given dimension",
    "text": "3.2.1 Reveal data along a given dimension\nReveal by day (x-axis):\n\n\nShow the code\nl + \n  geom_point() +\n  transition_reveal(Year)\n\n\n\n\n\nAnimation looks weird because there are a lot of countries for each continent for every year."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-ggplotly-method",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "4.1 Building an animated bubble plot: ggplotly() method",
    "text": "4.1 Building an animated bubble plot: ggplotly() method\nThe animated bubble plot below includes a play/pause button and a slider component for controlling the animation.\nNote: - Appropriate ggplot2 functions are used to create a static bubble plot. The output is then saved as an R object called gg.\n\nggplotly() is then used to convert the R graphic object into an animated svg object.\n\n\n\nShow the code\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,    #&lt;&lt;&lt; perform aes mapping for each frame\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')+\n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n\nNotice that although show.legend = FALSE argument was used, the legend still appears on the plot. To overcome this problem, theme(legend.position='none') should be used as shown in the plot and code chunk below."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-plot_ly-method",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "4.2 Building an animated bubble plot: plot_ly() method",
    "text": "4.2 Building an animated bubble plot: plot_ly() method\n\n\nShow the code\nbp &lt;- globalPop %&gt;% \n  plot_ly( x = ~Old,\n           y= ~Young,\n           color = ~Continent,#&lt;&lt; 6 unique\n           frame= ~Year,\n           text= ~Country,\n           hoverinfo='text',\n           type = 'scatter',\n           mode= 'markers')\n\n\nbp"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 1: Now You See It!",
    "section": "",
    "text": "1 Installing and loading libraries\nIn this hands-on exercise, two R packages will be used. They are:\n\n\n\nPackage\nDescription\n\n\n\n\ntidyverse\nFor data wragling\n\n\nhaven\nTo enable R to read and write various data formats such as ‘SAS’ and ‘SPSS’\n\n\n\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse, haven)\n\n\n\n2 Importing PISA Data\nThe code chunk below imports PISA data into R environment by using read_sas() function of haven package.\nOutput: Tibble dataframe\n\nstu_qqq &lt;- read_sas(data_file = \"data/cy08msp_stu_qqq.sas7bdat\")\n\nfilter() of the dplyr package allows us to filter where participating country (CNT) is Singapore (SGP).\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\nThe .rds file format is usually smaller than its SAS file counterpart and will therefore take up less storage space. The .rds file will also preserve data types and classes such as factors and dates eliminating the need to redefine data types after loading the file.\nFiles can be exported as RDS and imported into R using write_rds() and read_rds() for fast and space efficient data storage.\n\nwrite_rds(stu_qqq_SG, \"data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")\n\n\n\n3 Understanding the Data\n\n#summary(stu_qqq_SG)"
  },
  {
    "objectID": "index.html#latest-posts",
    "href": "index.html#latest-posts",
    "title": "Visual Analytics and Application",
    "section": "Latest Posts:",
    "text": "Latest Posts:"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1:",
    "section": "",
    "text": "1 Overview\n\n\n1.1 Background\nThis exercise aims to reveal the\nInternational large-scale assessments have consistently provided educational researchers with large databases containing diverse type of variablesThe Programme for International Student Assessment (PISA) by the OECD\ndata was released on December 5, 2022. PISA global education survey every three years to assess the education systems worldwide through testing 15 year old students in the subjects of mathematics, reading, and science.\n\n\n1.2 Objectives\n\nAimTask\n\n\nIn this take-home exercise, you are required to use appropriate Exploratory Data Analysis (EDA) methods and ggplot2 functions to reveal:\n\nthe distribution of Singapore students’ performance in mathematics, reading, and science, and\nthe relationship between these performances with schools, gender and socioeconomic status of the students.\n\n\n\n\n\n\n\n\n\n2 Loading Packages\n\n\n\nLibrary\nescription\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3 Files Used\n\n\n4 Data Preparation\n\n\n5 Visualisation\n\n\n6 References\n\nVisual Considerations\n\nRaincloud plots are used to capture the density and range of values by expense, with dotplots beneath the half-density plots revealing patterns in consistency\n\nSeparate plots were coded for -ve and +ve transactions, with Education, Food & Recreation and Shelter separated as well. This is due to the wide scale of y-axis values, which made the narrower denIt extends ggplot2 with:\n\ninteractive geom functions: geom_point_interactive(), geom_col_interactive, etc.\ninteractive scale functions: scale_color_continuous_interactive(), scale_fill_manual_interactive(), etc.\ninteractive facet functions: facet_wrap_interactive() and facet_grid_interactive() that both work with labeller_interactive().\ninteractive guide functions: guide_colorbar_interactive(), guide_colourbar_interactive(), guide_legend_interactive().\ninteractive theme elements: element_line_interactive(), element_rect_interactive(), element_text_interactive(), label_interactive.sity plots too condensed for the distribution to be viewed in full.\n\n\npatchwork package was used to group the plots together in a single figure, using plot_layout(heights) to configure height ratio of the overall patched plots\n\n\n\nInitial Insights from Line Chart and Table\n\nExpenditure on education is the lowest, and has remained constant &gt; probably refers to school fees, which is normally a fixed monthly amount\nExpenditure on recreation and food shows monthly variation, and have decreased from Apr 2022 to Feb 2023\nExpenditure on Shelter is significantly higher that other categories, and also remains constant &gt; probably refers to rent\n\n\n\nThese may be grouped together by percentile, and analysed as age groups instead to give a better overview of different demographics. Each band represents sequential 20th percentiles:\n\nLowest 20th Percentile: 18-26\n20-40th Percentile: 27-35\n40-60th Percentile: 36-44\n60-80th Percentile: 45-52\nTop 20th Percentile: 53-60\n\n\n\nIt extends ggplot2 with:\n\ninteractive geom functions: geom_point_interactive(), geom_col_interactive, etc.\ninteractive scale functions: scale_color_continuous_interactive(), scale_fill_manual_interactive(), etc.\ninteractive facet functions: facet_wrap_interactive() and facet_grid_interactive() that both work with labeller_interactive().\ninteractive guide functions: guide_colorbar_interactive(), guide_colourbar_interactive(), guide_legend_interactive().\ninteractive theme elements: element_line_interactive(), element_rect_interactive(), element_text_interactive(), label_interactive."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#making-the-year-more-visible-wip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#making-the-year-more-visible-wip",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "Making the year more visible ~WIP",
    "text": "Making the year more visible ~WIP\nWith the animation, it’s more engaging to see how life expectancy has changed over time in different countries. However, as you can see, the date is included in the title, but it is omitted from the graph, which prevents the title from being used for other purposes.\n\n\nShow the code\nggplot(data= globalPop,\n       aes(x= Old,\n           y=Young,\n           size= Population,\n           color=Country)) +\n  geom_point(alpha = 0.7,\n             show.legend = FALSE) +\n  geom_text(aes(x=min(Old),\n                y=min(Young),\n                label=as.factor(Year)),\n            hjust= -1.9,\n            vjust = -7.2,\n            alpha = 0.2,\n            col = \"gray\",\n            size= 20) +\n  scale_color_manual(values=country_colors) +  #&lt;&lt;&lt; 'country_colors' from Gapminder lib\n  scale_size(range= c(2,12)) +\n  labs(title = \"Age Distribution Across Time\",\n       x = '% Aged',\n       y= '% Young')+\n  theme(plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))+\n  transition_time(Year) +\n  ease_aes(\"linear\")  \n\n\n\n\n\nNote: Not sure why this didn’t render with the Year like the GIF in RStudio, still debugging :)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#labelling-with-geom_text",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#labelling-with-geom_text",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "Labelling with geom_text",
    "text": "Labelling with geom_text\nText geoms are useful for labeling plots. They can be used by themselves as scatterplots or in combination with other geoms, for example, labeling points or for annotating the height of bars. geom_text() adds only text to the plot. geom_label() draws a rectangle behind the text, making it easier to read.\nI thought it would be clearer for the geom_point and geom_text to be placed side-by-side so I won’t have to refer to a legend, but the trade-off is a messier overlapped plot.\n\n\nShow the code\npt &lt;- ggplot(data= globalPop,\n       aes(x= Old,\n           y=Young,\n           size= Population,\n           color=Country)) +\n  geom_point(alpha = 0.7,\n             show.legend = FALSE) +\n    scale_color_manual(values=country_colors) +  #&lt;&lt;&lt; 'country_colors' from Gapminder lib\n    scale_size(range= c(2,12)) +\n  labs(title = \"Age Distribution Across Time\",\n      subtitle ='Year: {frame_time}',\n         x = '% Aged',\n         y= '% Young')+\n    geom_text(data=globalPop,                #&lt;&lt;&lt;\n            aes(x=Old + 1.2,                 #&lt;&lt;&lt; Add/minus a bit to or from the x mapping to shift labels left/right\n                y=Young + 1.2,               #&lt;&lt;&lt; Add/minus a bit to or from the y mapping to shift labels up/down  \n                label=Country,\n                color = \"Black\",             #&lt;&lt;&lt; Some Country colours were too light when color = Country was used\n                hjust=0,\n                vjust= 1.2),\n                size=2.5,\n                show.legend = FALSE)+        #&lt;&lt;&lt; Should be outside of aes() of geom_text()\n  theme(plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\")) +  \n  transition_time(Year) +\n  ease_aes(\"linear\")\n\npt\n\n\n\n\n\nReplacing geom_text() with geom_text_repel() from our last chapter gives us the following results.\n\n\nShow the code\npr &lt;- ggplot(data= globalPop,\n       aes(x= Old,\n           y=Young,\n           size= Population,\n           color=Country)) +\n  geom_point(alpha = 0.7,\n             show.legend = FALSE) +\n    scale_color_manual(values=country_colors) +  #&lt;&lt;&lt; 'country_colors' from Gapminder lib\n    scale_size(range= c(2,12)) +\n  labs(title = \"Age Distribution Across Time\",\n      subtitle ='Year: {frame_time}',\n         x = '% Aged',\n         y= '% Young')+\n  geom_text_repel(data=globalPop,            #&lt;&lt;&lt;\n            aes(x=Old + 1.2,                 #&lt;&lt;&lt; Add/minus a bit to or from the x mapping to shift labels left/right\n                y=Young + 1.2,               #&lt;&lt;&lt; Add/minus a bit to or from the y mapping to shift labels up/down \n                label=Country,\n                color = \"Black\",             #&lt;&lt;&lt; Some Country colours were too light when color = Country was used\n                hjust=0,\n                vjust= 1.2),\n            size=2.5,\n            show.legend = FALSE,             #&lt;&lt;&lt; Should be outside of aes() of geom_text()\n            max.overlaps=)+\n  \n  theme(plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\")) +\n  transition_time(Year) +\n  ease_aes(\"linear\")\n\npr\n\n\n\n\n\ngeom_point with borders no fill with geom_text_repel from ggrepel\n\n\nShow the code\nggplot(data= globalPop,\n       aes(x= Old,\n           y=Young,\n           size= Population,\n           color=Country,\n           label=Country)) +                   #&lt;&lt;&lt; Need to add for geom_text_s to work\n  geom_point(alpha = 0.85,\n             shape=21,\n             stroke =2,\n             show.legend = FALSE) +\n  scale_color_manual(values=country_colors) +  #&lt;&lt;&lt; 'country_colors' from Gapminder lib\n  scale_size(range= c(2,12)) +\n  labs(title = \"Age Distribution Across Time\",\n      subtitle ='Year: {frame_time}',\n       x = '% Aged',\n       y= '% Young')+\n  geom_text_repel(data=globalPop,            #&lt;&lt;&lt;\n            aes(x=Old + 1.2,                 #&lt;&lt;&lt; Add/minus a bit to or from the x mapping to shift labels left/right\n                y=Young + 1.2,               #&lt;&lt;&lt; Add/minus a bit to or from the y mapping to shift labels up/down \n                label=Country,\n                color = \"Black\",             #&lt;&lt;&lt; Some Country colours were too light when color = Country was used\n                hjust=0,\n                vjust= 1.2),\n            size=2.5,\n            show.legend = FALSE,             #&lt;&lt;&lt; Should be outside of aes() of geom_text()\n            max.overlaps=)+\n  theme(plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\")) +\n  transition_time(Year) +\n  ease_aes(\"linear\")\n\n\n\n\n\nUsinggeom_text_s() from ggpp.\n\n\nShow the code\nggplot(data= globalPop,\n       aes(x= Old,\n           y=Young,\n           size= Population,\n           color=Country,\n           label=Country)) +                   #&lt;&lt;&lt; Need to add for geom_text_s to work\n  geom_point(alpha = 0.7,\n             show.legend = FALSE) +\n  scale_color_manual(values=country_colors) +  #&lt;&lt;&lt; 'country_colors' from Gapminder lib\n  scale_size(range= c(2,12)) +\n  labs(title = \"Age Distribution Across Time\",\n      subtitle ='Year: {frame_time}',\n       x = '% Aged',\n       y= '% Young')+\n  geom_text_s(nudge_x=2, show.legend = FALSE)+\n  expand_limits(x=10) +\n  theme(plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\")) +\n  transition_time(Year) +\n  ease_aes(\"linear\")\n\n\n\n\n\nYou can use anim_save(\"file_location\", plot) function to export animated chart in GIF format.\n\nanim_save(filename=\"Images/animation.gif\", pr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#making-year-more-visible-wip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#making-year-more-visible-wip",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "Making Year more visible ~WIP",
    "text": "Making Year more visible ~WIP\nWith the animation, it’s more engaging to see how demography has changed over time in different countries. The date is included in the title, but it is omitted from the graph, which prevents the title from being used for other purposes.\n\n\nShow the code\nggplot(data= globalPop,\n       aes(x= Old,\n           y=Young,\n           size= Population,\n           color=Country)) +\n  geom_point(alpha = 0.7,\n             show.legend = FALSE) +\n  geom_text(aes(x=min(Old),\n                y=min(Young),\n                label=as.factor(Year)),\n            hjust= -1.9,\n            vjust = -7.2,\n            alpha = 0.2,\n            col = \"gray\",\n            size= 20) +\n  scale_color_manual(values=country_colors) +  #&lt;&lt;&lt; 'country_colors' from Gapminder lib\n  scale_size(range= c(2,12)) +\n  labs(title = \"Age Distribution Across Time\",\n       x = '% Aged',\n       y= '% Young')+\n  geom_text(data=globalPop,                  #&lt;&lt;&lt;\n            aes(x=Old + 1.2,                 #&lt;&lt;&lt; Add/minus a bit to or from the x mapping to shift labels left/right\n                y=Young + 1.2,               #&lt;&lt;&lt; Add/minus a bit to or from the y mapping to shift labels up/down  \n                label=Country,\n                color = \"Black\",             #&lt;&lt;&lt; Some Country colours were too light when color = Country was used\n                hjust=0,\n                vjust= 1.2),\n                size=2.5,\n                show.legend = FALSE)+        #&lt;&lt;&lt; Should be outside of aes() of geom_text()  \n  theme(plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\"))+\n  transition_time(Year) +\n  ease_aes(\"linear\")  \n\n\n\n\n\nNote: Not sure why this didn’t render with the Year like the GIF in RStudio, still debugging :)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#background",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#background",
    "title": "Take-home Exercise 1: Investigating Student Performance with Data Visualisations",
    "section": "1.1 Background",
    "text": "1.1 Background\nThe OECD Programme for International Student Assessment (PISA) surveys collected data on 15 year-old students’ performances in reading, mathematics and science, as well as contextual information on students’ background, home characteristics and school factors which could influence performance. It provides the most comprehensive and rigorous international assessment of student learning outcomes. Results from PISA indicate the quality and equity of learning outcomes attained around the world, and allow educators and policy makers to learn from the policies and practices applied in other countries.\nThis could be used to create shared points of reference and spur collaboration to act on the data. The goal of PISA was to help schools and policy makers shift from looking inward at each other within the same education system to looking outward: to teachers, schools and policy makers across the world.\nThe latest PISA assessment took place in 2022 and consisted of 8 questionnaires completed by different education systems stakeholders (students, teachers, parents, and school principals)."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-data",
    "title": "Take-home Exercise 1: Investigating Student Performance with Data Visualisations",
    "section": "1.2 The Data",
    "text": "1.2 The Data\nThe data for this exercise is the Student questionnaire data file in SAS format, retrieved from OECD’s PISA 2022 Database.\n\n\n\n\n\nSupplementary materials used in conjunction with dataset:\n\nCodebook\nMaster Questionnaire\nTechnical Report"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-task",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-task",
    "title": "Take-home Exercise 1: Investigating Student Performance with Data Visualisations",
    "section": "1.3 The Task",
    "text": "1.3 The Task\nUsing the 2022 Student Questionnaire Dataset, this post aims to use appropriate Exploratory Data Analysis (EDA) methods and ggplot2 functions to uncover:\n\nthe distribution of Singapore students’ performance in mathematics, reading, and science, and\nthe relationship between these performances with schools, gender and socioeconomic status of the students."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-type-conversion",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-type-conversion",
    "title": "Take-home Exercise 1: Investigating Student Performance with Data Visualisations",
    "section": "4.4 Data Type Conversion",
    "text": "4.4 Data Type Conversion\nglimpse() of the dplyr package allows us to see all columns and their data type in the data frame.\n\nglimpse(stu_SG_filtered)\n\nRows: 6,232\nColumns: 43\n$ SchID                    &lt;dbl&gt; 70200052, 70200134, 70200112, 70200004, 70200…\n$ Gender                   &lt;chr&gt; \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", \"…\n$ Immigration_Status       &lt;chr&gt; \"Native\", \"Native\", \"Native\", \"Native\", \"Nati…\n$ Occupation_Status_Father &lt;chr&gt; \"Unemployed\", \"Employed\", \"Unemployed\", \"Empl…\n$ Occupation_Status_Mother &lt;chr&gt; \"Employed\", \"Employed\", \"Unemployed\", \"Employ…\n$ Have_Comp                &lt;chr&gt; \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Ye…\n$ Have_EduSW               &lt;chr&gt; \"Yes\", \"Yes\", \"No\", \"Yes\", \"Yes\", \"Yes\", \"Yes…\n$ Have_Internet            &lt;chr&gt; \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Ye…\n$ Edu_Mother               &lt;ord&gt; Tertiary, Post-Secondary, Secondary, Post-Sec…\n$ Edu_Father               &lt;ord&gt; Post-Secondary, Post-Secondary, Secondary, Po…\n$ Time_HW_Math             &lt;ord&gt; &lt;31, 61-120, 31-60, 61-120, &gt;120, &lt;31, &lt;31, 3…\n$ Time_HW_Reading          &lt;ord&gt; &lt;31, 31-60, 61-120, &lt;31, 61-120, &lt;31, &lt;31, 31…\n$ Time_HW_Science          &lt;ord&gt; 31-60, 61-120, 61-120, 31-60, &gt;120, &lt;31, &lt;31,…\n$ PV1MATH                  &lt;dbl&gt; 639.004, 697.191, 693.710, 427.317, 436.462, …\n$ PV2MATH                  &lt;dbl&gt; 601.251, 754.277, 654.450, 410.376, 453.450, …\n$ PV3MATH                  &lt;dbl&gt; 621.480, 671.940, 696.938, 423.586, 392.315, …\n$ PV4MATH                  &lt;dbl&gt; 631.596, 657.300, 646.187, 388.935, 439.986, …\n$ PV5MATH                  &lt;dbl&gt; 579.276, 621.126, 678.119, 330.962, 443.125, …\n$ PV6MATH                  &lt;dbl&gt; 591.791, 655.729, 644.019, 379.988, 452.648, …\n$ PV7MATH                  &lt;dbl&gt; 600.709, 747.934, 720.531, 398.535, 396.970, …\n$ PV8MATH                  &lt;dbl&gt; 587.322, 694.365, 671.425, 422.127, 459.945, …\n$ PV9MATH                  &lt;dbl&gt; 618.131, 742.732, 694.085, 375.354, 438.166, …\n$ PV10MATH                 &lt;dbl&gt; 581.973, 656.934, 668.304, 453.348, 448.084, …\n$ PV1READ                  &lt;dbl&gt; 676.298, 625.585, 620.116, 381.495, 448.199, …\n$ PV2READ                  &lt;dbl&gt; 692.247, 686.716, 559.078, 400.815, 560.636, …\n$ PV3READ                  &lt;dbl&gt; 690.981, 663.147, 554.767, 374.911, 365.478, …\n$ PV4READ                  &lt;dbl&gt; 643.067, 567.435, 587.026, 367.484, 469.970, …\n$ PV5READ                  &lt;dbl&gt; 627.908, 614.500, 591.806, 336.009, 503.664, …\n$ PV6READ                  &lt;dbl&gt; 684.676, 604.745, 570.547, 324.630, 481.215, …\n$ PV7READ                  &lt;dbl&gt; 661.380, 669.375, 599.078, 396.242, 436.800, …\n$ PV8READ                  &lt;dbl&gt; 674.070, 623.735, 545.610, 374.723, 531.226, …\n$ PV9READ                  &lt;dbl&gt; 666.282, 649.579, 610.466, 314.704, 480.997, …\n$ PV10READ                 &lt;dbl&gt; 657.387, 571.261, 590.758, 342.956, 478.578, …\n$ PV1SCIE                  &lt;dbl&gt; 710.634, 670.646, 666.095, 340.308, 456.333, …\n$ PV2SCIE                  &lt;dbl&gt; 618.739, 748.839, 604.771, 329.889, 453.400, …\n$ PV3SCIE                  &lt;dbl&gt; 591.623, 635.443, 704.217, 411.353, 498.937, …\n$ PV4SCIE                  &lt;dbl&gt; 659.770, 639.735, 687.659, 327.974, 532.324, …\n$ PV5SCIE                  &lt;dbl&gt; 635.892, 608.385, 690.974, 292.183, 508.231, …\n$ PV6SCIE                  &lt;dbl&gt; 646.901, 670.662, 617.175, 355.423, 504.461, …\n$ PV7SCIE                  &lt;dbl&gt; 603.569, 734.807, 692.886, 400.182, 404.572, …\n$ PV8SCIE                  &lt;dbl&gt; 621.352, 639.748, 630.900, 317.518, 549.457, …\n$ PV9SCIE                  &lt;dbl&gt; 659.674, 716.768, 656.620, 298.893, 411.062, …\n$ PV10SCIE                 &lt;dbl&gt; 649.719, 655.670, 649.087, 362.702, 473.613, …\n\n\n\nObservations:\n\nSchID should be converted from &lt;dbl&gt; to &lt;chr&gt; format. It should be in categorical instead of numerical data type.\nThe columns Gender, Immigration_Status, Occupation_Status_Father, Occupation_Status_Mother, Have_Comp, Have_EduSW, Have_Internet, Edu_Mother, Edu_Father, Time_HW_Math, Time_HW_Reading, and Time_HW_Science are in numeric data type. These should be in factor data type for further processing.\n\n\nThe code chunk below does the following:\n\nacross of dplyr package is used to convert all character data type into factor for multiple columns. It applies as.factor() function to convert the variables from numeric to categorical data type each column specified in the col argument.\nas.character() is used to convert the SchID variable from numeric to categorical data type.\n\n\ncol &lt;- c(\"Gender\", \"Immigration_Status\", \"Occupation_Status_Father\", \"Occupation_Status_Mother\",\n         \"Have_Comp\", \"Have_EduSW\", \"Have_Internet\", \"Edu_Mother\", \"Edu_Father\",\n         \"Time_HW_Math\", \"Time_HW_Reading\", \"Time_HW_Science\")\n\nstu_SG_filtered &lt;- stu_SG_filtered %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(SchID = as.character(SchID))\n\nWe use glimpse() again to check the results.\n\nglimpse(stu_SG_filtered)\n\nRows: 6,232\nColumns: 43\n$ SchID                    &lt;chr&gt; \"70200052\", \"70200134\", \"70200112\", \"70200004…\n$ Gender                   &lt;fct&gt; Female, Male, Male, Male, Female, Female, Mal…\n$ Immigration_Status       &lt;fct&gt; Native, Native, Native, Native, Native, Third…\n$ Occupation_Status_Father &lt;fct&gt; Unemployed, Employed, Unemployed, Employed, E…\n$ Occupation_Status_Mother &lt;fct&gt; Employed, Employed, Unemployed, Employed, Emp…\n$ Have_Comp                &lt;fct&gt; Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, …\n$ Have_EduSW               &lt;fct&gt; Yes, Yes, No, Yes, Yes, Yes, Yes, Yes, Yes, Y…\n$ Have_Internet            &lt;fct&gt; Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, …\n$ Edu_Mother               &lt;ord&gt; Tertiary, Post-Secondary, Secondary, Post-Sec…\n$ Edu_Father               &lt;ord&gt; Post-Secondary, Post-Secondary, Secondary, Po…\n$ Time_HW_Math             &lt;ord&gt; &lt;31, 61-120, 31-60, 61-120, &gt;120, &lt;31, &lt;31, 3…\n$ Time_HW_Reading          &lt;ord&gt; &lt;31, 31-60, 61-120, &lt;31, 61-120, &lt;31, &lt;31, 31…\n$ Time_HW_Science          &lt;ord&gt; 31-60, 61-120, 61-120, 31-60, &gt;120, &lt;31, &lt;31,…\n$ PV1MATH                  &lt;dbl&gt; 639.004, 697.191, 693.710, 427.317, 436.462, …\n$ PV2MATH                  &lt;dbl&gt; 601.251, 754.277, 654.450, 410.376, 453.450, …\n$ PV3MATH                  &lt;dbl&gt; 621.480, 671.940, 696.938, 423.586, 392.315, …\n$ PV4MATH                  &lt;dbl&gt; 631.596, 657.300, 646.187, 388.935, 439.986, …\n$ PV5MATH                  &lt;dbl&gt; 579.276, 621.126, 678.119, 330.962, 443.125, …\n$ PV6MATH                  &lt;dbl&gt; 591.791, 655.729, 644.019, 379.988, 452.648, …\n$ PV7MATH                  &lt;dbl&gt; 600.709, 747.934, 720.531, 398.535, 396.970, …\n$ PV8MATH                  &lt;dbl&gt; 587.322, 694.365, 671.425, 422.127, 459.945, …\n$ PV9MATH                  &lt;dbl&gt; 618.131, 742.732, 694.085, 375.354, 438.166, …\n$ PV10MATH                 &lt;dbl&gt; 581.973, 656.934, 668.304, 453.348, 448.084, …\n$ PV1READ                  &lt;dbl&gt; 676.298, 625.585, 620.116, 381.495, 448.199, …\n$ PV2READ                  &lt;dbl&gt; 692.247, 686.716, 559.078, 400.815, 560.636, …\n$ PV3READ                  &lt;dbl&gt; 690.981, 663.147, 554.767, 374.911, 365.478, …\n$ PV4READ                  &lt;dbl&gt; 643.067, 567.435, 587.026, 367.484, 469.970, …\n$ PV5READ                  &lt;dbl&gt; 627.908, 614.500, 591.806, 336.009, 503.664, …\n$ PV6READ                  &lt;dbl&gt; 684.676, 604.745, 570.547, 324.630, 481.215, …\n$ PV7READ                  &lt;dbl&gt; 661.380, 669.375, 599.078, 396.242, 436.800, …\n$ PV8READ                  &lt;dbl&gt; 674.070, 623.735, 545.610, 374.723, 531.226, …\n$ PV9READ                  &lt;dbl&gt; 666.282, 649.579, 610.466, 314.704, 480.997, …\n$ PV10READ                 &lt;dbl&gt; 657.387, 571.261, 590.758, 342.956, 478.578, …\n$ PV1SCIE                  &lt;dbl&gt; 710.634, 670.646, 666.095, 340.308, 456.333, …\n$ PV2SCIE                  &lt;dbl&gt; 618.739, 748.839, 604.771, 329.889, 453.400, …\n$ PV3SCIE                  &lt;dbl&gt; 591.623, 635.443, 704.217, 411.353, 498.937, …\n$ PV4SCIE                  &lt;dbl&gt; 659.770, 639.735, 687.659, 327.974, 532.324, …\n$ PV5SCIE                  &lt;dbl&gt; 635.892, 608.385, 690.974, 292.183, 508.231, …\n$ PV6SCIE                  &lt;dbl&gt; 646.901, 670.662, 617.175, 355.423, 504.461, …\n$ PV7SCIE                  &lt;dbl&gt; 603.569, 734.807, 692.886, 400.182, 404.572, …\n$ PV8SCIE                  &lt;dbl&gt; 621.352, 639.748, 630.900, 317.518, 549.457, …\n$ PV9SCIE                  &lt;dbl&gt; 659.674, 716.768, 656.620, 298.893, 411.062, …\n$ PV10SCIE                 &lt;dbl&gt; 649.719, 655.670, 649.087, 362.702, 473.613, …"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#recode-categorical-variables",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#recode-categorical-variables",
    "title": "Take-home Exercise 1:",
    "section": "Recode Categorical Variables",
    "text": "Recode Categorical Variables"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#variable-creation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#variable-creation",
    "title": "Take-home Exercise 1: Investigating Student Performance with Data Visualisations",
    "section": "4.5 Variable Creation",
    "text": "4.5 Variable Creation\n\n4.5.1 Calculating Average Plausible Values\nThe following code chunk calculates the mean Plausible Values of each row for each subject for the columns saved under PV_Math, PV_Reading, and PV_Sci.\n\nc_across() works with rowwise() to perform aggregations on a data frame a row at a time.\n\nc_across() allows us to indicate the columns we want to transform.\n\nna.rm=TRUE ignores NA values when calculating the mean.\nmutate() creates new columns to store our new variable.\nselect() and the - minus sign removes columns we no longer require.\n\n\n# Columns of interest\nPV_Math &lt;- c(\"PV1MATH\", \"PV2MATH\", \"PV3MATH\", \"PV4MATH\", \"PV5MATH\", \"PV6MATH\", \"PV7MATH\", \"PV8MATH\", \"PV9MATH\", \"PV10MATH\")\nPV_Reading &lt;- c(\"PV1READ\", \"PV2READ\", \"PV3READ\", \"PV4READ\", \"PV5READ\", \"PV6READ\", \"PV7READ\", \"PV8READ\", \"PV9READ\", \"PV10READ\")\nPV_Sci &lt;- c(\"PV1SCIE\", \"PV2SCIE\", \"PV3SCIE\", \"PV4SCIE\", \"PV5SCIE\", \"PV6SCIE\", \"PV7SCIE\", \"PV8SCIE\", \"PV9SCIE\", \"PV10SCIE\")\n\n# Performing row-wise aggregation\nstu_SG_lean &lt;- \n  stu_SG_filtered %&gt;% \n  rowwise() %&gt;% \n  mutate(Avg_Math = mean(c_across(PV_Math), na.rm=TRUE),\n         Avg_Reading = mean(c_across(PV_Reading), na.rm=TRUE),\n         Avg_Sci = mean(c_across(PV_Sci), na.rm=TRUE)) %&gt;% \n  select(-c(PV_Math, PV_Reading, PV_Sci))\n\n\n\n4.5.2 Retrieving Variables from Schools Questionnaire\nThe School Questionnaire administered to school principals contains additional data we can use to further analyse how variations in school-related factors can affect students’ performance.\nThe dataset in SAS format is retrieved from OECD’s PISA 2022 Database.\n\n\n\n\n\nread_sav of the haven package lets us read SPSS data (in .sav data format) into RStudio.\n\nsch &lt;- read_sav(\"data/CY08MSP_SCH_QQQ.sav\")\n\nsch\n\n# A tibble: 21,629 × 432\n   CNT         CNTRYID CNTSCHID CYC   NatCen     STRATUM    SUBNATIO   REGION   \n   &lt;chr+lbl&gt;   &lt;dbl+l&gt;    &lt;dbl&gt; &lt;chr&gt; &lt;chr+lbl&gt;  &lt;chr+lbl&gt;  &lt;chr+lbl&gt;  &lt;dbl+lbl&gt;\n 1 ALB [Alban… 8 [Alb…   800001 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n 2 ALB [Alban… 8 [Alb…   800002 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n 3 ALB [Alban… 8 [Alb…   800003 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n 4 ALB [Alban… 8 [Alb…   800004 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n 5 ALB [Alban… 8 [Alb…   800005 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n 6 ALB [Alban… 8 [Alb…   800006 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n 7 ALB [Alban… 8 [Alb…   800007 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n 8 ALB [Alban… 8 [Alb…   800008 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n 9 ALB [Alban… 8 [Alb…   800009 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n10 ALB [Alban… 8 [Alb…   800010 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n# ℹ 21,619 more rows\n# ℹ 424 more variables: OECD &lt;dbl+lbl&gt;, ADMINMODE &lt;dbl+lbl&gt;,\n#   LANGTEST_QQQ &lt;dbl+lbl&gt;, SC001Q01TA &lt;dbl+lbl&gt;, SC013Q01TA &lt;dbl+lbl&gt;,\n#   SC014Q01TA &lt;dbl+lbl&gt;, SC016Q01TA &lt;dbl+lbl&gt;, SC016Q02TA &lt;dbl+lbl&gt;,\n#   SC016Q03TA &lt;dbl+lbl&gt;, SC016Q04TA &lt;dbl+lbl&gt;, SC011Q01TA &lt;dbl+lbl&gt;,\n#   SC002Q01TA &lt;dbl+lbl&gt;, SC002Q02TA &lt;dbl+lbl&gt;, SC211Q01JA &lt;dbl+lbl&gt;,\n#   SC211Q02JA &lt;dbl+lbl&gt;, SC211Q03JA &lt;dbl+lbl&gt;, SC211Q04JA &lt;dbl+lbl&gt;, …\n\n\nSimilar to the Student’s Questionnaire, let’s first filter for Singapore schools.\n\nsch_SG &lt;- sch %&gt;%\n  filter(CNT == \"SGP\")\n\nhead(sch_SG,3)\n\n# A tibble: 3 × 432\n  CNT             CNTRYID        CNTSCHID CYC   NatCen     STRATUM    SUBNATIO  \n  &lt;chr+lbl&gt;       &lt;dbl+lbl&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;chr+lbl&gt;  &lt;chr+lbl&gt;  &lt;chr+lbl&gt; \n1 SGP [Singapore] 702 [Singapor… 70200001 08MS  070… [Sin… SGP… [SGP… 702… [Sin…\n2 SGP [Singapore] 702 [Singapor… 70200002 08MS  070… [Sin… SGP… [SGP… 702… [Sin…\n3 SGP [Singapore] 702 [Singapor… 70200003 08MS  070… [Sin… SGP… [SGP… 702… [Sin…\n# ℹ 425 more variables: REGION &lt;dbl+lbl&gt;, OECD &lt;dbl+lbl&gt;, ADMINMODE &lt;dbl+lbl&gt;,\n#   LANGTEST_QQQ &lt;dbl+lbl&gt;, SC001Q01TA &lt;dbl+lbl&gt;, SC013Q01TA &lt;dbl+lbl&gt;,\n#   SC014Q01TA &lt;dbl+lbl&gt;, SC016Q01TA &lt;dbl+lbl&gt;, SC016Q02TA &lt;dbl+lbl&gt;,\n#   SC016Q03TA &lt;dbl+lbl&gt;, SC016Q04TA &lt;dbl+lbl&gt;, SC011Q01TA &lt;dbl+lbl&gt;,\n#   SC002Q01TA &lt;dbl+lbl&gt;, SC002Q02TA &lt;dbl+lbl&gt;, SC211Q01JA &lt;dbl+lbl&gt;,\n#   SC211Q02JA &lt;dbl+lbl&gt;, SC211Q03JA &lt;dbl+lbl&gt;, SC211Q04JA &lt;dbl+lbl&gt;,\n#   SC211Q05JA &lt;dbl+lbl&gt;, SC211Q06JA &lt;dbl+lbl&gt;, SC018Q01TA01 &lt;dbl+lbl&gt;, …\n\n\nA quick look at the data using head() shows that the table contains column CNTSCHID that we can use to perform a join with our stu_SG_lean table to patch in additional variables.\nAfter perusing through the Codebook, the following variables are selected for further analysis:\n\n\n\n\n\n\n\n\n\n\n\nCategory\nVariable Name\nDescription/Question\nType\nEncoding Scheme\n\n\n\n\nSchool\nSCHLTYPE\nSchool type\nNUM\n1 - Private independent\n2 - Private Government-dependent\n3 - Public\n\n\nSchool\nSTRATIO\nStudent-teacher ratio\nNUM\n\n\n\n\n\n4.5.2.1 Narrowing School Data\nThe code chunk below performs the following purpose:\n\nselect() extracts using the names of columns we have identified.\nrename() changes the names of individual variables so they are more intuitive.\nmutate() replaces ‘SchType’ from numeric type to factor type using as.factor() and replaces ‘SchID’ numeric to character data type with as.character().\n\n\nsch_SG_lean &lt;- sch_SG %&gt;% \n  select(CNTSCHID, SCHLTYPE, STRATIO) %&gt;% \n  rename(c(SchID=\"CNTSCHID\",\n           SchType=\"SCHLTYPE\",\n           StuTeacher_ratio=\"STRATIO\")) %&gt;% \n  mutate(SchType=as.factor(SchType)) %&gt;%\n  mutate(SchID = as.character(SchID))\n\n\n\n4.5.2.2 Recoding School Type\nSchType is recoded to reflect the type of schools in the education system (Private Independent, Private government-dependent, and public).\n\nsch_SG_lean &lt;- sch_SG_lean %&gt;%\n  mutate(SchType=\n           (recode(SchType, \n                   '1'=\"privindependent\", \n                   '2'=\"privgovdependent\", \n                   '3'=\"public\")))\n\n\n\n4.5.2.3 Combining with Students data\nNext, the left_join() retains all observations that appear in the left (first) data frame, even if they lack a match in the right (second) dataframe. by=c(\"SchID\"=\"CNTSCHID\") refers to the key used to perform the match, which are SchID from stu_SG_lean data and CNTSCHID from sch_SG_lean data.\n\nstu_SG_more &lt;- \n  left_join(stu_SG_lean, \n            sch_SG_lean,\n            by=c(\"SchID\"=\"SchID\")) %&gt;% \n  mutate(StuTeacher_ratio = as.numeric(StuTeacher_ratio))\n\nFinally, is.na() function is used to confirm that there are no missing values in our data,\n\nsum(is.na(stu_SG_more))\n\n[1] 0\n\n\nThe first 5 results of the final dataset are displayed below using kable() of the knitr package.\n\nkable(head(stu_SG_more, n=5), caption = \"Results from the 2022 PISA Student Questionnaire Survey\")\n\n\nResults from the 2022 PISA Student Questionnaire Survey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSchID\nGender\nImmigration_Status\nOccupation_Status_Father\nOccupation_Status_Mother\nHave_Comp\nHave_EduSW\nHave_Internet\nEdu_Mother\nEdu_Father\nTime_HW_Math\nTime_HW_Reading\nTime_HW_Science\nAvg_Math\nAvg_Reading\nAvg_Sci\nSchType\nStuTeacher_ratio\n\n\n\n\n70200052\nFemale\nNative\nUnemployed\nEmployed\nYes\nYes\nYes\nTertiary\nPost-Secondary\n&lt;31\n&lt;31\n31-60\n605.2533\n667.4296\n639.7873\npublic\n13.7528\n\n\n70200134\nMale\nNative\nEmployed\nEmployed\nYes\nYes\nYes\nPost-Secondary\nPost-Secondary\n61-120\n31-60\n61-120\n689.9528\n627.6078\n672.0703\npublic\n11.1354\n\n\n70200112\nMale\nNative\nUnemployed\nUnemployed\nYes\nNo\nYes\nSecondary\nSecondary\n31-60\n61-120\n61-120\n676.7768\n582.9252\n660.0384\npublic\n12.8729\n\n\n70200004\nMale\nNative\nEmployed\nEmployed\nYes\nYes\nYes\nPost-Secondary\nPost-Secondary\n61-120\n&lt;31\n31-60\n401.0528\n361.3969\n343.6425\npublic\n13.2381\n\n\n70200152\nFemale\nNative\nEmployed\nEmployed\nYes\nYes\nYes\nPost-Secondary\nPost-Secondary\n&gt;120\n61-120\n&gt;120\n436.1151\n475.6763\n479.2390\npublic\n10.6391"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary-statistics",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary-statistics",
    "title": "Take-home Exercise 1:",
    "section": "Summary Statistics",
    "text": "Summary Statistics"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#recoding-categorical-variables",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#recoding-categorical-variables",
    "title": "Take-home Exercise 1: Investigating Student Performance with Data Visualisations",
    "section": "4.3 Recoding Categorical Variables",
    "text": "4.3 Recoding Categorical Variables\n\nGenderImmigration StatusOccupation StatusAccess to Computer, Educational Software, and Internet at HomeParental Educational StatusTime Spent on Homework\n\n\nrecode() helps to set new values by providing a mapping from old to new values. Here, Gender = 1 is mapped to Female and Gender = 2 is mapped to Male. The recoded variable is then assigned using mutate() of the dplyr package.\n\nstu_SG_filtered &lt;- stu_SG_filtered %&gt;%\n  mutate(Gender=(recode(Gender, '1'=\"Female\", \n                        '2'=\"Male\")))\n\n\n\nThe code chunk below uses mutate() to replace the existing variable which sets its value based on the recode() function.\n\nstu_SG_filtered &lt;- stu_SG_filtered %&gt;%\n  mutate(Immigration_Status=\n           (recode(Immigration_Status, \n                   '1'=\"Native\", \n                   '2'=\"Second-Gen\", \n                   '3'=\"Third-Gen\")))\n\n\n\nThere are multiple labels for various occupations. However, we can generally group the following groups as “Unemployed” and the remaining as “Employed”:\n\n9701 - Doing housework, bringing up children\n9702 - Learning, studying\n9703 - Retired, pensioner, on unemployment benefits\n9704 - I do not know, it’s hard to say\n9997 - Not applicable\n9998 - Invalid\n9999 - No response\n\nThe code chunk below makes use of the ifelse() function to evaluate if the Occupation code falls in the list above with the help of the %in% operator. If it is, output will be “Unemployed”, else it would be shown as “Employed”.\n\n# Occupation_Status_Father\nstu_SG_filtered &lt;- stu_SG_filtered %&gt;% \n  mutate(Occupation_Status_Father = ifelse(Occupation_Status_Father %in% c(\"9701\", \"9702\", \"9703\", \"9704\", \"9997\", \"9998\", \"9999\"), \n                                           \"Unemployed\", \n                                           \"Employed\"))\n\n# Occupation_Status_Mother\nstu_SG_filtered &lt;- stu_SG_filtered %&gt;% \n  mutate(Occupation_Status_Mother = ifelse(Occupation_Status_Mother %in% c(\"9701\", \"9702\", \"9703\", \"9704\", \"9997\", \"9998\", \"9999\"), \n                                           \"Unemployed\", \n                                           \"Employed\"))  \n\n\n\nFor access to computer, educational software, and internet columns, ifelse() statement returns a “Yes” when the number is 1, else it returns a “No”.\n\n# Have_Comp\nstu_SG_filtered &lt;- stu_SG_filtered %&gt;% \n  mutate(Have_Comp = ifelse(Have_Comp==\"1\", \n                            \"Yes\", \n                            \"No\"))\n\n# Have_EduSW\nstu_SG_filtered &lt;- stu_SG_filtered %&gt;% \n  mutate(Have_EduSW = ifelse(Have_EduSW==\"1\", \n                            \"Yes\", \n                            \"No\"))\n\n# Have_Internet\nstu_SG_filtered &lt;- stu_SG_filtered %&gt;% \n  mutate(Have_Internet = ifelse(Have_Internet==\"1\", \n                            \"Yes\", \n                            \"No\"))\n\n\n\nPISA Survey adopts the International Standard Classification of Education (ISCED), which is the official framework used to facilitate international comparisons of education systems.\nDiagram below shows Singapore qualifications mapped against ISCED levels obtained from UNESCO.\n\n\n\n\n\nThe following mapping is used to recode for further data analysis:\n\n\n\n\n\n\n\n\n\nPISA Value\nPISA Value Description\nConverted Education Level\nRecoded Group\n\n\n\n\n1\nLess than ISCED Level 1\nEarly childhood\nPre-Primary\n\n\n2\nISCED level 1\nPrimary\nPrimary\n\n\n3\nISCED level 2\nLower Secondary\nSecondary\n\n\n4\nISCED level 3.3\nUpper Secondary\nSecondary\n\n\n6\nISCED level 4\nPost-secondary Non-tertiary\nPost-secondary\n\n\n7\nISCED level 5\nDiploma\nPost-secondary\n\n\n8\nISCED level 6\nBachelors\nTertiary\n\n\n9\nISCED level 7\nMasters\nTertiary\n\n\n10\nISCED level 8\nDoctoral\nTertiary\n\n\n\nAfter recoding, the ordered() function helps create such ordered factors to reflect the ascending sequence of the educational level.\n\n# Edu_Mother\nstu_SG_filtered &lt;- stu_SG_filtered %&gt;%\n  mutate(Edu_Mother=(recode(Edu_Mother,         \n                                    '1'=\"Pre-Primary\",   \n                                    '2'=\"Primary\", \n                                    '3'=\"Secondary\",\n                                    '4'='Secondary',\n                                    '6'=\"Post-Secondary\",\n                                    '7'=\"Post-Secondary\",\n                                    '8'=\"Tertiary\",\n                                    '9'=\"Tertiary\",\n                                    '10'=\"Tertiary\")\n  )) \n\nstu_SG_filtered$Edu_Mother = ordered(stu_SG_filtered$Edu_Mother, \n                                             levels=c(\"Pre-Primary\", \"Primary\", \"Secondary\", \"Post-Secondary\", \"Tertiary\"))\n\n\n# Edu_Father\nstu_SG_filtered &lt;- stu_SG_filtered %&gt;%\n  mutate(Edu_Father=(recode(Edu_Father,         \n                                    '1'=\"Pre-Primary\",   \n                                    '2'=\"Primary\", \n                                    '3'=\"Secondary\",\n                                    '4'='Secondary',\n                                    '6'=\"Post-Secondary\",\n                                    '7'=\"Post-Secondary\",\n                                    '8'=\"Tertiary\",\n                                    '9'=\"Tertiary\",\n                                    '10'=\"Tertiary\")\n  )) \n\nstu_SG_filtered$Edu_Father = ordered(stu_SG_filtered$Edu_Father, \n                                             levels=c(\"Pre-Primary\", \"Primary\", \"Secondary\", \"Post-Secondary\", \"Tertiary\"))\n\n\n\n\n\nShow the code\np_hwt_reading &lt;- ggplot(data = stu_SG_filtered, \n       aes(x = Time_HW_Reading)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 2600) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \\n\", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.2,\n      size=3) +  \n    labs(x = \"\",\n         y = \"\",\n         title=\"Reading\") + \n    theme(\n      panel.grid.major = element_blank(), \n      plot.title = element_text(size=9, face=\"bold\"),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),\n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\np_hwt_math &lt;- ggplot(data = stu_SG_filtered, \n       aes(x = Time_HW_Math)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 2600) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \\n\", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.2,\n      size=3) +  \n    labs(x = \"\",\n         y = \"\",\n         title=\"Math\") + \n    theme(\n      panel.grid.major = element_blank(), \n      plot.title = element_text(size=9, face=\"bold\"),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),\n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\np_hwt_sci &lt;- ggplot(data = stu_SG_filtered, \n       aes(x = Time_HW_Science)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 2600) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \\n\", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.2,\n      size=3) +  \n    labs(x = \"\",\n         y = \"\",\n         title=\"Science\") + \n    theme(\n      panel.grid.major = element_blank(), \n      plot.title = element_text(size=9, face=\"bold\"),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),\n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\n\np_hwt_reading + p_hwt_sci + p_hwt_math +\n  plot_layout(widths=c(1,1,1)) +\n  plot_annotation(title=\"Time Spent on Homework in mins (before grouping)\", \n                  theme=theme(plot.title = element_text(hjust = 0),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))\n\n\n\n\n\nThe bar charts display the distribution of responses regarding the time spent on homework for the 3 subjects. We can see that the frequency dips significantly where response is 4 and above, i.e. after 2 hours. We can combine codes 4 through 6 to be analysed together.\n\n\nShow the code\n# Time_HW_Math\nstu_SG_filtered &lt;- stu_SG_filtered %&gt;%\n  mutate(Time_HW_Math=(recode(Time_HW_Math,         \n                                    '1'=\"&lt;31\",   \n                                    '2'=\"31-60\", \n                                    '3'=\"61-120\",\n                                    '4'='&gt;120',\n                                    '5'='&gt;120',\n                                    '6'=\"&gt;120\")\n  )) \n\nstu_SG_filtered$Time_HW_Math = ordered(stu_SG_filtered$Time_HW_Math, \n                                             levels=c(\"&lt;31\", \"31-60\", \"61-120\", \"&gt;120\"))\n# Time_HW_Reading\nstu_SG_filtered &lt;- stu_SG_filtered %&gt;%\n  mutate(Time_HW_Reading=(recode(Time_HW_Reading,         \n                                    '1'=\"&lt;31\",   \n                                    '2'=\"31-60\", \n                                    '3'=\"61-120\",\n                                    '4'='&gt;120',\n                                    '5'='&gt;120',\n                                    '6'=\"&gt;120\")\n  )) \n\nstu_SG_filtered$Time_HW_Reading = ordered(stu_SG_filtered$Time_HW_Reading, \n                                             levels=c(\"&lt;31\", \"31-60\", \"61-120\", \"&gt;120\"))\n\n# Time_HW_Science\nstu_SG_filtered &lt;- stu_SG_filtered %&gt;%\n  mutate(Time_HW_Science=(recode(Time_HW_Science,         \n                                    '1'=\"&lt;31\",   \n                                    '2'=\"31-60\", \n                                    '3'=\"61-120\",\n                                    '4'='&gt;120',\n                                    '5'='&gt;120',\n                                    '6'=\"&gt;120\")\n  )) \n\nstu_SG_filtered$Time_HW_Science = ordered(stu_SG_filtered$Time_HW_Science, \n                                             levels=c(\"&lt;31\", \"31-60\", \"61-120\", \"&gt;120\"))\n\n\nThe distribution after combining and recoding looks like this:\n\n\nShow the code\np2_hwt_reading &lt;- ggplot(data = stu_SG_filtered, \n       aes(x = Time_HW_Reading)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 2600) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \\n\", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.2,\n      size=3) +  \n    labs(x = \"\",\n         y = \"\",\n         title=\"Reading\") + \n    theme(\n      panel.grid.major = element_blank(), \n      plot.title = element_text(size=9, face=\"bold\"),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),\n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\np2_hwt_math &lt;- ggplot(data = stu_SG_filtered, \n       aes(x = Time_HW_Math)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 2600) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \\n\", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.2,\n      size=3) +  \n    labs(x = \"\",\n         y = \"\",\n         title=\"Math\") + \n    theme(\n      panel.grid.major = element_blank(), \n      plot.title = element_text(size=9, face=\"bold\"),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),\n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\np2_hwt_sci &lt;- ggplot(data = stu_SG_filtered, \n       aes(x = Time_HW_Science)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 2600) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \\n\", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.2,\n      size=3) +  \n    labs(x = \"\",\n         y = \"\",\n         title=\"Science\") + \n    theme(\n      panel.grid.major = element_blank(), \n      plot.title = element_text(size=9, face=\"bold\"),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),\n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\n\np2_hwt_reading + p2_hwt_sci + p2_hwt_math +\n  plot_layout(widths=c(1,1,1)) +\n  plot_annotation(title=\"Time Spent on Homework in mins (after grouping)\", \n                  theme=theme(plot.title = element_text(hjust = 0),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#calculating-average-plausible-values",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#calculating-average-plausible-values",
    "title": "Take-home Exercise 1:",
    "section": "4.3.1 Calculating Average Plausible Values",
    "text": "4.3.1 Calculating Average Plausible Values\nThe following code chunk calculates the mean Plausible Values of each row for each subject for the columns saved under PV_Math, PV_Reading, and PV_Sci.\n\nc_across() works with rowwise() to perform aggregations on a data frame a row at a time.\n\nc_across() allows us to indicate the columns we want to transform.\n\nna.rm=TRUE ignores NA values when calculating the mean.\nmutate() creates new columns to store our new variable.\nselect() and the - minus sign removes columns we no longer require.\n\n\n# Columns of interest\nPV_Math &lt;- c(\"PV1MATH\", \"PV2MATH\", \"PV3MATH\", \"PV4MATH\", \"PV5MATH\", \"PV6MATH\", \"PV7MATH\", \"PV8MATH\", \"PV9MATH\", \"PV10MATH\")\nPV_Reading &lt;- c(\"PV1READ\", \"PV2READ\", \"PV3READ\", \"PV4READ\", \"PV5READ\", \"PV6READ\", \"PV7READ\", \"PV8READ\", \"PV9READ\", \"PV10READ\")\nPV_Sci &lt;- c(\"PV1SCIE\", \"PV2SCIE\", \"PV3SCIE\", \"PV4SCIE\", \"PV5SCIE\", \"PV6SCIE\", \"PV7SCIE\", \"PV8SCIE\", \"PV9SCIE\", \"PV10SCIE\")\n\n# Performing row-wise aggregation\nstu_SG_lean &lt;- \n  stu_SG_filtered %&gt;% \n  rowwise() %&gt;% \n  mutate(Avg_Math = mean(c_across(PV_Math), na.rm=TRUE),\n         Avg_Reading = mean(c_across(PV_Reading), na.rm=TRUE),\n         Avg_Sci = mean(c_across(PV_Sci), na.rm=TRUE)) %&gt;% \n  select(-c(PV_Math, PV_Reading, PV_Sci))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#univariate-exploration",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#univariate-exploration",
    "title": "Take-home Exercise 1:",
    "section": "Univariate Exploration",
    "text": "Univariate Exploration"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#retrieving-variables-from-schools-questionnaire",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#retrieving-variables-from-schools-questionnaire",
    "title": "Take-home Exercise 1:",
    "section": "4.3.2 Retrieving Variables from Schools Questionnaire",
    "text": "4.3.2 Retrieving Variables from Schools Questionnaire\nThe School Questionnaire administered to school principals contains additional data we can use to further analyse how variations in school-related factors can affect students’ performance.\nThe dataset in SAS format is retrieved from OECD’s PISA 2022 Database.\n\n\n\n\n\nread_sav of the haven package lets us read SPSS data (in .sav data format) into RStudio.\n\nsch &lt;- read_sav(\"data/CY08MSP_SCH_QQQ.sav\")\n\nsch\n\n# A tibble: 21,629 × 432\n   CNT         CNTRYID CNTSCHID CYC   NatCen     STRATUM    SUBNATIO   REGION   \n   &lt;chr+lbl&gt;   &lt;dbl+l&gt;    &lt;dbl&gt; &lt;chr&gt; &lt;chr+lbl&gt;  &lt;chr+lbl&gt;  &lt;chr+lbl&gt;  &lt;dbl+lbl&gt;\n 1 ALB [Alban… 8 [Alb…   800001 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n 2 ALB [Alban… 8 [Alb…   800002 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n 3 ALB [Alban… 8 [Alb…   800003 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n 4 ALB [Alban… 8 [Alb…   800004 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n 5 ALB [Alban… 8 [Alb…   800005 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n 6 ALB [Alban… 8 [Alb…   800006 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n 7 ALB [Alban… 8 [Alb…   800007 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n 8 ALB [Alban… 8 [Alb…   800008 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n 9 ALB [Alban… 8 [Alb…   800009 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n10 ALB [Alban… 8 [Alb…   800010 08MS  000… [Alb… ALB… [ALB… 008… [Alb… 800 [Alb…\n# ℹ 21,619 more rows\n# ℹ 424 more variables: OECD &lt;dbl+lbl&gt;, ADMINMODE &lt;dbl+lbl&gt;,\n#   LANGTEST_QQQ &lt;dbl+lbl&gt;, SC001Q01TA &lt;dbl+lbl&gt;, SC013Q01TA &lt;dbl+lbl&gt;,\n#   SC014Q01TA &lt;dbl+lbl&gt;, SC016Q01TA &lt;dbl+lbl&gt;, SC016Q02TA &lt;dbl+lbl&gt;,\n#   SC016Q03TA &lt;dbl+lbl&gt;, SC016Q04TA &lt;dbl+lbl&gt;, SC011Q01TA &lt;dbl+lbl&gt;,\n#   SC002Q01TA &lt;dbl+lbl&gt;, SC002Q02TA &lt;dbl+lbl&gt;, SC211Q01JA &lt;dbl+lbl&gt;,\n#   SC211Q02JA &lt;dbl+lbl&gt;, SC211Q03JA &lt;dbl+lbl&gt;, SC211Q04JA &lt;dbl+lbl&gt;, …\n\n\nSimilar to the Student’s Questionnaire, let’s first filter for Singapore schools.\n\nsch_SG &lt;- sch %&gt;%\n  filter(CNT == \"SGP\")\n\nhead(sch_SG,3)\n\n# A tibble: 3 × 432\n  CNT             CNTRYID        CNTSCHID CYC   NatCen     STRATUM    SUBNATIO  \n  &lt;chr+lbl&gt;       &lt;dbl+lbl&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;chr+lbl&gt;  &lt;chr+lbl&gt;  &lt;chr+lbl&gt; \n1 SGP [Singapore] 702 [Singapor… 70200001 08MS  070… [Sin… SGP… [SGP… 702… [Sin…\n2 SGP [Singapore] 702 [Singapor… 70200002 08MS  070… [Sin… SGP… [SGP… 702… [Sin…\n3 SGP [Singapore] 702 [Singapor… 70200003 08MS  070… [Sin… SGP… [SGP… 702… [Sin…\n# ℹ 425 more variables: REGION &lt;dbl+lbl&gt;, OECD &lt;dbl+lbl&gt;, ADMINMODE &lt;dbl+lbl&gt;,\n#   LANGTEST_QQQ &lt;dbl+lbl&gt;, SC001Q01TA &lt;dbl+lbl&gt;, SC013Q01TA &lt;dbl+lbl&gt;,\n#   SC014Q01TA &lt;dbl+lbl&gt;, SC016Q01TA &lt;dbl+lbl&gt;, SC016Q02TA &lt;dbl+lbl&gt;,\n#   SC016Q03TA &lt;dbl+lbl&gt;, SC016Q04TA &lt;dbl+lbl&gt;, SC011Q01TA &lt;dbl+lbl&gt;,\n#   SC002Q01TA &lt;dbl+lbl&gt;, SC002Q02TA &lt;dbl+lbl&gt;, SC211Q01JA &lt;dbl+lbl&gt;,\n#   SC211Q02JA &lt;dbl+lbl&gt;, SC211Q03JA &lt;dbl+lbl&gt;, SC211Q04JA &lt;dbl+lbl&gt;,\n#   SC211Q05JA &lt;dbl+lbl&gt;, SC211Q06JA &lt;dbl+lbl&gt;, SC018Q01TA01 &lt;dbl+lbl&gt;, …\n\n\nA quick look at the data using head() shows that the table contains column CNTSCHID that we can use to perform a join with our stu_SG_lean table to patch in additional variables.\nAfter perusing through the Codebook, the following variables are selected for further analysis:\n\n\n\n\n\n\n\n\n\n\n\nCategory\nVariable Name\nDescription/Question\nType\nEncoding Scheme\n\n\n\n\nSchool\nSCHLTYPE\nSchool type\nNUM\n1 - Private independent\n2 - Private Government-dependent\n3 - Public\n\n\nSchool\nSTRATIO\nStudent-teacher ratio\nNUM\n\n\n\n\n\n4.3.2.1 Narrowing School Data\nThe code chunk below performs the following purpose:\n\nselect() extracts using the names of columns we have identified.\nrename() changes the names of individual variables so they are more intuitive.\nmutate() replaces ‘SchType’ from numeric type to factor type using as.factor() and replaces ‘SchID’ numeric to character data type with as.character().\n\n\nsch_SG_lean &lt;- sch_SG %&gt;% \n  select(CNTSCHID, SCHLTYPE, STRATIO) %&gt;% \n  rename(c(SchID=\"CNTSCHID\",\n           SchType=\"SCHLTYPE\",\n           StuTeacher_ratio=\"STRATIO\")) %&gt;% \n  mutate(SchType=as.factor(SchType)) %&gt;%\n  mutate(SchID = as.character(SchID))\n\n\n\n4.3.2.2 Recoding School Type\nSchType is recoded to reflect the type of schools in the education system (Private Independent, Private government-dependent, and public).\n\nsch_SG_lean &lt;- sch_SG_lean %&gt;%\n  mutate(SchType=\n           (recode(SchType, \n                   '1'=\"privindependent\", \n                   '2'=\"privgovdependent\", \n                   '3'=\"public\")))\n\n\n\n4.3.2.3 Performing left join\nNext, the left_join() retains all observations that appear in the left (first) data frame, even if they lack a match in the right (second) dataframe. by=c(\"SchID\"=\"CNTSCHID\") refers to the key used to perform the match, which are SchID from stu_SG_lean data and CNTSCHID from sch_SG_lea data.\n\nstu_SG_more &lt;- \n  left_join(stu_SG_lean, \n            sch_SG_lean,\n            by=c(\"SchID\"=\"SchID\")) %&gt;% \n  mutate(StuTeacher_ratio = as.numeric(StuTeacher_ratio))\n\nFinally, is.na() function is used to confirm that there are no missing values in our data,\n\nsum(is.na(stu_SG_more))\n\n[1] 0\n\n\nThe first 5 results of the final dataset are displayed below using kable() of the knitr package.\n\nkable(head(stu_SG_more, n=5), caption = \"Results from the 2022 PISA Student Questionnaire Survey\")\n\n\nResults from the 2022 PISA Student Questionnaire Survey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSchID\nGender\nImmigration_Status\nOccupation_Status_Father\nOccupation_Status_Mother\nHave_Comp\nHave_EduSW\nHave_Internet\nEdu_Mother\nEdu_Father\nTime_HW_Math\nTime_HW_Reading\nTime_HW_Science\nAvg_Math\nAvg_Reading\nAvg_Sci\nSchType\nStuTeacher_ratio\n\n\n\n\n70200052\nFemale\nNative\nUnemployed\nEmployed\nYes\nYes\nYes\nTertiary\nPost-Secondary\n&lt;31\n&lt;31\n31-60\n605.2533\n667.4296\n639.7873\npublic\n13.7528\n\n\n70200134\nMale\nNative\nEmployed\nEmployed\nYes\nYes\nYes\nPost-Secondary\nPost-Secondary\n61-120\n31-60\n61-120\n689.9528\n627.6078\n672.0703\npublic\n11.1354\n\n\n70200112\nMale\nNative\nUnemployed\nUnemployed\nYes\nNo\nYes\nSecondary\nSecondary\n31-60\n61-120\n61-120\n676.7768\n582.9252\n660.0384\npublic\n12.8729\n\n\n70200004\nMale\nNative\nEmployed\nEmployed\nYes\nYes\nYes\nPost-Secondary\nPost-Secondary\n61-120\n&lt;31\n31-60\n401.0528\n361.3969\n343.6425\npublic\n13.2381\n\n\n70200152\nFemale\nNative\nEmployed\nEmployed\nYes\nYes\nYes\nPost-Secondary\nPost-Secondary\n&gt;120\n61-120\n&gt;120\n436.1151\n475.6763\n479.2390\npublic\n10.6391"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#variable-selection",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#variable-selection",
    "title": "Take-home Exercise 1: Investigating Student Performance with Data Visualisations",
    "section": "4.1 Variable Selection",
    "text": "4.1 Variable Selection\nNow, I want to just keep the columns that are useful to me. Both Technical Report and Codebook on PISA’s website were particularly helpful in deciphering the various variable names.\nIn particular, Chapter 19: Scaling procedures and construct validation of context questionnaire data of the Technical Report provides detailed descriptions of the derived variables in each questionnaire while the Codebook provides information on variable names, variable locations, format information, variable labels, questionnaire text, values, and frequencies.\nBelow are the list of variables retained for this study, which can be grouped into 4 broad categories of School, Gender, Socio-economic status, Performance (Math, Reading, and Science). Details are extracted from the Codebook:\n\n\n\n\n\n\n\n\n\n\n\nCategory\nVariable Name\nDescription/Question\nType\nEncoding Scheme\n\n\n\n\nSchool\nCNTSCHID\nIntl. School ID\nNUM\n\n\n\nGender\nST004D01T\nStudent (Standardized) Gender\nNUM\n1 - Female\n2 - Male\n.N/97 - Not Applicable\n\n\nSocioeconomic Status\nIMMIG\nIndex on immigrant background (OECD definition)\nNUM\n1 - Native Student\n2 - Second-Generation Student\n3 - First Generation Student\n\n\nSocioeconomic Status\nOCOD1\nISCO-08 Occupation code - Mother\nCHAR\nThere are multiple labels for various occupations. However, we can generally group the following groups as “Unemployed” and the remaining as “Employed”:\n9701 - Doing housework, bringing up children\n9702 - Learning, studying\n9703 - Retired, pensioner, on unemployment benefits\n9704 - I do not know, it’s hard to say\n9997 - Not applicable\n9998 - Invalid\n9999 - No response\n\n\nSocioeconomic Status\nOCOD2\nISCO-08 Occupation code - Father\nCHAR\nSame as previous variable.\n\n\nSocioeconomic Status\nST250Q02JA\nWhich of the following are in your [home]: A computer (laptop, desktop, or tablet) that you can use for school work\nNUM\n1 - Yes\n2 - No\n\n\nSocioeconomic Status\nST250Q03JA\nWhich of the following are in your [home]: Educational Software or Apps\nNUM\n1 - Yes\n2 - No\n\n\nSocioeconomic Status\nST250Q05JA\nWhich of the following are in your [home]: Internet access (e.g. Wi-fi) (excluding through smartphones)\nNUM\n1 - Yes\n2 - No\n\n\nSocioeconomic Status\nMISCED\nMother’s level of education (ISCED)\nNUM\n1 - Less than ISCED Level 1\n2 - ISCED level 1\n3 - ISCED level 2\n4 - ISCED level 3.3\n5 - ISCED level 3.4\n6 - ISCED level 4\n7 - ISCED level 5\n8 - ISCED level 6\n9 - ISCED level 7\n10 - ISCED level 8\n\n\nSocioeconomic Status\nFISCED\nFather’s level of education (ISCED)\nNUM\nSame as previous variable.\n\n\nMath\nST296Q01JA\nHow much time spent on homework in: Mathematics homework\nNUM\n1 - Up to 30 minutes a day\n2 - More than 30 minutes and up to 1 hour a day\n3 - More than 1 hour and up to 2 hours a day\n4 - More than 2 hours and up to 3 hours a day\n5 - More than 3 hours and up to 4 hours a day\n6 - More than 4 hours a day\n\n\nReading\nST296Q02JA\nHow much time spent on homework in: [Test language] homework\nNUM\nSame as previous variable.\n\n\nScience\nST296Q03JA\nHow much time spent on homework in: [Science] homework\nNUM\nSame as previous variable.\n\n\nMath\nPV1MATH to PV10MATH\nPlausible Values 1 to 10 in Mathematics\nNUM\n\n\n\nReading\nPV1READ to PV10READ\nPlausible Value 1 to 10 in Science\nNUM\n\n\n\nScience\nPV1SCIE to PV10SCIE\nPlausible Values 1 to 10 in Science\nNUM\n\n\n\n\nThe code chunk below filters for the selected variables based on their column names using select() and renames them to more intuitive headers using rename() from the dplyr package.\n\nstu_SG_filtered &lt;- stu_SG %&gt;%\n\n  # Retains desired variables for further analysis  \n  select(CNTSCHID,ST004D01T,IMMIG,OCOD1,OCOD2, ST250Q02JA, ST250Q03JA, ST250Q05JA, MISCED, FISCED, ST296Q01JA,ST296Q02JA, ST296Q03JA, PV1MATH, PV2MATH, PV3MATH, PV4MATH, PV5MATH, PV6MATH, PV7MATH, PV8MATH, PV9MATH, PV10MATH, PV1READ, PV2READ, PV3READ, PV4READ, PV5READ, PV6READ, PV7READ, PV8READ, PV9READ, PV10READ, PV1SCIE, PV2SCIE, PV3SCIE, PV4SCIE, PV5SCIE, PV6SCIE, PV7SCIE, PV8SCIE ,PV9SCIE ,PV10SCIE) %&gt;% \n  \n  # Renames columns to more intuitive headers\n  dplyr::rename(SchID=\"CNTSCHID\",\n           Gender=\"ST004D01T\",\n           Immigration_Status=\"IMMIG\",\n           Occupation_Status_Father=\"OCOD1\",\n           Occupation_Status_Mother=\"OCOD2\", \n           Have_Comp=\"ST250Q02JA\", \n           Have_EduSW=\"ST250Q03JA\", \n           Have_Internet=\"ST250Q05JA\", \n           Edu_Mother=\"MISCED\", \n           Edu_Father=\"FISCED\", \n           Time_HW_Math=\"ST296Q01JA\",\n           Time_HW_Reading=\"ST296Q02JA\", \n           Time_HW_Science=\"ST296Q03JA\"\n           )"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#handling-missing-values",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#handling-missing-values",
    "title": "Take-home Exercise 1: Investigating Student Performance with Data Visualisations",
    "section": "4.2 Handling missing values",
    "text": "4.2 Handling missing values\nNow, I need to remove incomplete rows that have missing data in them. The main reason for doing this is that later on, I want to recode the variables into more intuitive descriptions. If there are NA’s in the columns, that might affect the recoding if a value is accidentally inputted to a variable which was originally NA.\nis.na() allows us to identify missing values in our dataset and sum() counts the frequency of such missing values.\n\n# Checks for NA in each column\nsum(is.na(stu_SG_filtered$SchID))\n\n[1] 0\n\nsum(is.na(stu_SG_filtered$Gender))\n\n[1] 0\n\nsum(is.na(stu_SG_filtered$Immigration_Status))\n\n[1] 236\n\nsum(is.na(stu_SG_filtered$Occupation_Status_Father))\n\n[1] 0\n\nsum(is.na(stu_SG_filtered$Occupation_Status_Mother))\n\n[1] 0\n\nsum(is.na(stu_SG_filtered$Have_Comp))\n\n[1] 45\n\nsum(is.na(stu_SG_filtered$Have_EduSW))\n\n[1] 60\n\nsum(is.na(stu_SG_filtered$Have_Internet))\n\n[1] 46\n\nsum(is.na(stu_SG_filtered$Edu_Father))\n\n[1] 97\n\nsum(is.na(stu_SG_filtered$Edu_Mother))\n\n[1] 74\n\nsum(is.na(stu_SG_filtered$Time_HW_Reading))\n\n[1] 77\n\nsum(is.na(stu_SG_filtered$Time_HW_Math))\n\n[1] 70\n\nsum(is.na(stu_SG_filtered$Time_HW_Science))\n\n[1] 87\n\n\nThe variables with missing values are: Immigration_Status, Have_Comp, Have_EduSW, Have_Internet, Edu_Father, Edu_Mother, Time_HW_Reading, Time_HW_Math, and Time_HW_Science.\ndrop_na() drops rows where any column specified contains a missing value.\n\nstu_SG_filtered &lt;- drop_na(stu_SG_filtered,\n                           # Drops rows where either of these columns have NAs\n                           Immigration_Status, Have_Comp, Have_EduSW, Have_Internet, Edu_Father,\n                           Edu_Mother, Time_HW_Reading, Time_HW_Math, Time_HW_Science)\n\n# Here's what the dataset looks like so far\nstu_SG_filtered\n\n# A tibble: 6,232 × 43\n      SchID Gender Immigration_Status Occupation_Status_Father\n      &lt;dbl&gt;  &lt;dbl&gt;              &lt;dbl&gt; &lt;chr&gt;                   \n 1 70200052      1                  1 9701                    \n 2 70200134      2                  1 31                      \n 3 70200112      2                  1 9701                    \n 4 70200004      2                  1 41                      \n 5 70200152      1                  1 23                      \n 6 70200043      1                  3 9701                    \n 7 70200049      2                  1 11                      \n 8 70200107      2                  3 23                      \n 9 70200012      1                  1 1                       \n10 70200061      2                  1 34                      \n# ℹ 6,222 more rows\n# ℹ 39 more variables: Occupation_Status_Mother &lt;chr&gt;, Have_Comp &lt;dbl&gt;,\n#   Have_EduSW &lt;dbl&gt;, Have_Internet &lt;dbl&gt;, Edu_Mother &lt;dbl&gt;, Edu_Father &lt;dbl&gt;,\n#   Time_HW_Math &lt;dbl&gt;, Time_HW_Reading &lt;dbl&gt;, Time_HW_Science &lt;dbl&gt;,\n#   PV1MATH &lt;dbl&gt;, PV2MATH &lt;dbl&gt;, PV3MATH &lt;dbl&gt;, PV4MATH &lt;dbl&gt;, PV5MATH &lt;dbl&gt;,\n#   PV6MATH &lt;dbl&gt;, PV7MATH &lt;dbl&gt;, PV8MATH &lt;dbl&gt;, PV9MATH &lt;dbl&gt;, PV10MATH &lt;dbl&gt;,\n#   PV1READ &lt;dbl&gt;, PV2READ &lt;dbl&gt;, PV3READ &lt;dbl&gt;, PV4READ &lt;dbl&gt;, …\n\n\nThe output shows that 6,232 observations are retained."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#performance-response-variable",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#performance-response-variable",
    "title": "Take-home Exercise 1:",
    "section": "4.1 Performance (Response Variable)",
    "text": "4.1 Performance (Response Variable)\n\nMathReadingScience\n\n\n\n\nShow the code\n# Calculating the mean, median, min and max\nmean_math &lt;- round(mean(stu_SG_more$Avg_Math),0)\nmedian_math &lt;- round(median(stu_SG_more$Avg_Math),0)\nmin_math &lt;- round(min(stu_SG_more$Avg_Math),0)\nmax_math &lt;- round(max(stu_SG_more$Avg_Math),0)\nleftwhisk_math &lt;- round(quantile(stu_SG_more$Avg_Math, probs = .25)-1.5*IQR(stu_SG_more$Avg_Math),0)\n\n# Histogram\nhist_math &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(x = Avg_Math)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#c7c8cc\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    \n    # Set same limits for both plots to ensure justification\n    limits = c(250,850), \n  ) + \n  geom_vline(\n    aes(xintercept = median_math),\n    colour=\"#595DE5\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 640, \n    y = 680,\n    label = paste0(\"Median = \", median_math),\n    color=\"#595DE5\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean_math),\n    colour=\"#e0218a\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 535, \n    y = 680,\n    label = paste0(\"Mean = \", mean_math),\n    color=\"#e0218a\"\n  ) +  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n# Boxplot\nbox_math &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(y = Avg_Math, x=\"\")\n  ) + \n  geom_boxplot(\n    fill=\"#c7c8cc\",\n    outlier.colour=\"#d18a7d\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = '#e0218a',\n               size=4) +\n  coord_flip() + \n  \n    #Annotate with amounts to show range of income on boxplot diagram\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = min_math,\n    label = paste0(min_math),\n    color = \"#d18a7d\"\n  ) + \n   annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = leftwhisk_math,\n    label = paste0(leftwhisk_math),\n    color = \"#34414E\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = max_math,\n    label = paste0(max_math),\n    color = \"#34414E\"\n  ) + \n  \n  labs(\n    title = \"Distribution of Average Math Scores\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(250,850), \n  ) +\n  \n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\nhbox_math &lt;- (box_math / hist_math) + \n        plot_layout(heights = c(1, 3.5)) #&lt; Scale layout to keep boxplot height shorter\n\nhbox_math & theme(plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\nShow the code\n# Calculating the mean, median, min and max\nmean_reading &lt;- round(mean(stu_SG_more$Avg_Reading),0)\nmedian_reading &lt;- round(median(stu_SG_more$Avg_Reading),0)\nmin_reading &lt;- round(min(stu_SG_more$Avg_Reading),0)\nmax_reading &lt;- round(max(stu_SG_more$Avg_Reading),0)\nleftwhisk_reading &lt;- round(quantile(stu_SG_more$Avg_Reading, probs = .25)-1.5*IQR(stu_SG_more$Avg_Reading),0)\n\n# Histogram\nhist_reading &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(x = Avg_Reading)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#c7c8cc\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    \n    # Set same limits for both plots to ensure justification\n    limits = c(150,800), \n  ) + \n  geom_vline(\n    aes(xintercept = median_reading),\n    colour=\"#595DE5\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = median_reading+50, \n    y = 750,\n    label = paste0(\"Median = \", median_reading),\n    color=\"#595DE5\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean_reading),\n    colour=\"#e0218a\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = mean_reading-30, \n    y = 750,\n    label = paste0(\"Mean = \", mean_reading),\n    color=\"#e0218a\"\n  ) +  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n# Boxplot\nbox_reading &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(y = Avg_Reading, x=\"\")\n  ) + \n  geom_boxplot(\n    fill=\"#c7c8cc\",\n    outlier.colour=\"#d18a7d\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = '#e0218a',\n               size=4) +\n  coord_flip() + \n  \n    #Annotate with amounts to show range of income on boxplot diagram\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = min_reading,\n    label = paste0(min_reading),\n    color = \"#d18a7d\"\n  ) + \n   annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = leftwhisk_reading,\n    label = paste0(leftwhisk_reading),\n    color = \"#34414E\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = max_reading,\n    label = paste0(max_reading),\n    color = \"#34414E\"\n  ) + \n  \n  labs(\n    title = \"Distribution of Average Reading Scores\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(150,800), \n  ) +\n  \n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\nhbox_reading &lt;- (box_reading / hist_reading) + \n        plot_layout(heights = c(1, 3.5)) #&lt; Scale layout to keep boxplot height shorter\n\nhbox_reading & theme(plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\nShow the code\n# Calculating the mean, median, min and max\nmean_sci &lt;- round(mean(stu_SG_more$Avg_Sci),0)\nmedian_sci &lt;- round(median(stu_SG_more$Avg_Sci),0)\nmin_sci &lt;- round(min(stu_SG_more$Avg_Sci),0)\nmax_sci &lt;- round(max(stu_SG_more$Avg_Sci),0)\nleftwhisk_sci &lt;- round(quantile(stu_SG_more$Avg_Sci, probs = .25)-1.5*IQR(stu_SG_more$Avg_Sci),0)\n\n# Histogram\nhist_sci &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(x = Avg_Sci)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#c7c8cc\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    \n    # Set same limits for both plots to ensure justification\n    limits = c(240,810), \n  ) + \n  geom_vline(\n    aes(xintercept = median_sci),\n    colour=\"#595DE5\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = median_sci+45, \n    y = 750,\n    label = paste0(\"Median = \", median_sci),\n    color=\"#595DE5\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean_sci),\n    colour=\"#e0218a\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = mean_sci-30, \n    y = 750,\n    label = paste0(\"Mean = \", mean_sci),\n    color=\"#e0218a\"\n  ) +  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n# Boxplot\nbox_sci &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(y = Avg_Sci, x=\"\")\n  ) + \n  geom_boxplot(\n    fill=\"#c7c8cc\",\n    outlier.colour=\"#d18a7d\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = '#e0218a',\n               size=4) +\n  coord_flip() + \n  \n  #Annotate with amounts to show range of income on boxplot diagram\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = min_sci,\n    label = paste0(min_sci),\n    color = \"#d18a7d\"\n  ) + \n   annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = leftwhisk_sci,\n    label = paste0(leftwhisk_sci),\n    color = \"#34414E\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = max_sci,\n    label = paste0(max_sci),\n    color = \"#34414E\"\n  ) + \n  \n  labs(\n    title = \"Distribution of Average Science Scores\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(240,810), \n  ) +\n  \n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\nhbox_sci &lt;- (box_sci / hist_sci) + \n        plot_layout(heights = c(1, 3.5)) #&lt; Scale layout to keep boxplot height shorter\n\nhbox_sci & theme(plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\nObservations\n\nDistribution of math, reading and science scores based on the average plausible values seem to be quite symmetrically distributed. Mean and median for each subject are close together with most values spreading around the mean line.\nWe note the presence of outliers on the left end of the whisker from the boxplots. This is particularly prominent for Reading.\n\nDesign Consideration"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#student-characteristics",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#student-characteristics",
    "title": "Take-home Exercise 1: Investigating Student Performance with Data Visualisations",
    "section": "5.3 Student Characteristics",
    "text": "5.3 Student Characteristics\nTo calculate percentage values, we can either create the labels first or on the fly. In the last and next few plots, the labels are added with the help of geom_text() to add text as marker labels, after_stat() to count the frequency, and paste0 for concatenation.\ngeom_text() comes with arguments that help you to align and position text labels. hjust and vjust refers to the horizontal and vertical justification to align text, while nudge_x and nudge_y offset text from points horizontally and vertically.\n\n\nShow the code\np_gender &lt;-\n  ggplot(data = stu_SG_more, \n       aes(x = reorder(Gender, Gender, function(x)-length(x)))) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 5200) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.5,\n      size=3) +\n    labs(x = \"\",\n         y = \"\",\n         title = \"Gender: \") + \n    theme(\n      plot.title = element_text(size=9, face=\"bold\"),\n      panel.grid.major = element_blank(), \n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),   \n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\np_immig &lt;-\n  ggplot(data = stu_SG_more, \n       aes(x = Immigration_Status)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 5200) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.5,\n      size=3) +\n    labs(x = \"\",\n         y = \"\",\n         title = \"Immigration Status: \") + \n    theme(\n      plot.title = element_text(size=9, face=\"bold\"),\n      panel.grid.major = element_blank(), \n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),     \n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\n\np_havecomp &lt;- ggplot(data = stu_SG_more, \n       aes(x = Have_Comp)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 6600) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.5,\n      size=3) +\n    labs(x = \"\",\n         y = \"\",\n         title=\"Computer: \") + \n    theme(\n      plot.title = element_text(size=9, face=\"bold\"),\n      panel.grid.major = element_blank(), \n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),   \n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\np_haveEduSW &lt;- ggplot(data = stu_SG_more, \n       aes(x = Have_EduSW)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 6600) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.5,\n      size=3) +\n    labs(x = \"\",\n         y = \"\",\n         title=\"Educational Software: \") + \n    theme(\n      panel.grid.major = element_blank(), \n      plot.title = element_text(size=9, face=\"bold\"),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),\n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\",)\n    ) \n\np_haveInternet &lt;- ggplot(data = stu_SG_more, \n       aes(x = Have_Internet)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 6600) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.5,\n      size=3) +\n    labs(x = \"\",\n         y = \"\",\n         title=\"Internet: \") + \n    theme(\n      panel.grid.major = element_blank(), \n      plot.title = element_text(size=9, face=\"bold\"),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),\n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\n\np_access &lt;- (p_havecomp + p_haveEduSW + p_haveInternet) \np_stuchar &lt;- (p_gender + p_immig) / p_access +\n              plot_layout(widths = c(1,1))+\n              plot_annotation(title=\"Equitable gender distribution, majority native Singaporeans,\\n and high access to educational hools at home\", \n                              theme=theme(plot.title = element_text(hjust = 0),\n                                          plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                                          panel.border = element_blank()))\n\n\np_stuchar\n\n\n\n\n\n\nObservations\n\nThe students responses are almost evenly distributed between males and females. Uneven distributions seen across Immigration Status, and home access to educational resources like computers, educational software, and internet.\nNative Singaporeans make up the bulk of the survey responses.\nMost students have access to educational tools/resources such as computer, educational software, and the internet from home."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#symmetrical-distribution-of-average-scores",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#symmetrical-distribution-of-average-scores",
    "title": "Take-home Exercise 1:",
    "section": "4.1 Symmetrical Distribution of Average Scores",
    "text": "4.1 Symmetrical Distribution of Average Scores\n\nMathReadingScience\n\n\n\n\nShow the code\n# Calculating the mean, median, min and max\nmean_math &lt;- round(mean(stu_SG_more$Avg_Math),0)\nmedian_math &lt;- round(median(stu_SG_more$Avg_Math),0)\nmin_math &lt;- round(min(stu_SG_more$Avg_Math),0)\nmax_math &lt;- round(max(stu_SG_more$Avg_Math),0)\nleftwhisk_math &lt;- round(quantile(stu_SG_more$Avg_Math, probs = .25)-1.5*IQR(stu_SG_more$Avg_Math),0)\n\n# Histogram\nhist_math &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(x = Avg_Math)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#c7c8cc\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    \n    # Set same limits for both plots to ensure justification\n    limits = c(150,850), \n  ) + \n  geom_vline(\n    aes(xintercept = median_math),\n    colour=\"#595DE5\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 640, \n    y = 730,\n    label = paste0(\"Median = \", median_math),\n    color=\"#595DE5\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean_math),\n    colour=\"#e0218a\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 535, \n    y = 730,\n    label = paste0(\"Mean = \", mean_math),\n    color=\"#e0218a\"\n  ) +  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n# Boxplot\nbox_math &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(y = Avg_Math, x=\"\")\n  ) + \n  geom_boxplot(\n    fill=\"#c7c8cc\",\n    outlier.colour=\"#d18a7d\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = '#e0218a',\n               size=4) +\n  coord_flip() + \n  \n    #Annotate with amounts to show range of income on boxplot diagram\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = min_math,\n    label = paste0(min_math),\n    color = \"#d18a7d\"\n  ) + \n   annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = leftwhisk_math,\n    label = paste0(leftwhisk_math),\n    color = \"#34414E\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = max_math,\n    label = paste0(max_math),\n    color = \"#34414E\"\n  ) + \n  \n  labs(\n    title = \"Distribution of Average Math Scores\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(150,850), \n  ) +\n  \n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\nhbox_math &lt;- (box_math / hist_math) + \n        plot_layout(heights = c(1, 3.5)) #&lt; Scale layout to keep boxplot height shorter\n\nhbox_math & theme(plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\nShow the code\n# Calculating the mean, median, min and max\nmean_reading &lt;- round(mean(stu_SG_more$Avg_Reading),0)\nmedian_reading &lt;- round(median(stu_SG_more$Avg_Reading),0)\nmin_reading &lt;- round(min(stu_SG_more$Avg_Reading),0)\nmax_reading &lt;- round(max(stu_SG_more$Avg_Reading),0)\nleftwhisk_reading &lt;- round(quantile(stu_SG_more$Avg_Reading, probs = .25)-1.5*IQR(stu_SG_more$Avg_Reading),0)\n\n# Histogram\nhist_reading &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(x = Avg_Reading)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#c7c8cc\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    \n    # Set same limits for both plots to ensure justification\n    limits = c(150,850), \n  ) + \n  geom_vline(\n    aes(xintercept = median_reading),\n    colour=\"#595DE5\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = median_reading+50, \n    y = 780,\n    label = paste0(\"Median = \", median_reading),\n    color=\"#595DE5\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean_reading),\n    colour=\"#e0218a\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = mean_reading-50, \n    y = 780,\n    label = paste0(\"Mean = \", mean_reading),\n    color=\"#e0218a\"\n  ) +  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n# Boxplot\nbox_reading &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(y = Avg_Reading, x=\"\")\n  ) + \n  geom_boxplot(\n    fill=\"#c7c8cc\",\n    outlier.colour=\"#d18a7d\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = '#e0218a',\n               size=4) +\n  coord_flip() + \n  \n    #Annotate with amounts to show range of income on boxplot diagram\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = min_reading,\n    label = paste0(min_reading),\n    color = \"#d18a7d\"\n  ) + \n   annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = leftwhisk_reading,\n    label = paste0(leftwhisk_reading),\n    color = \"#34414E\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = max_reading,\n    label = paste0(max_reading),\n    color = \"#34414E\"\n  ) + \n  \n  labs(\n    title = \"Distribution of Average Reading Scores\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(150,850), \n  ) +\n  \n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\nhbox_reading &lt;- (box_reading / hist_reading) + \n        plot_layout(heights = c(1, 3.5)) #&lt; Scale layout to keep boxplot height shorter\n\nhbox_reading & theme(plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\nShow the code\n# Calculating the mean, median, min and max\nmean_sci &lt;- round(mean(stu_SG_more$Avg_Sci),0)\nmedian_sci &lt;- round(median(stu_SG_more$Avg_Sci),0)\nmin_sci &lt;- round(min(stu_SG_more$Avg_Sci),0)\nmax_sci &lt;- round(max(stu_SG_more$Avg_Sci),0)\nleftwhisk_sci &lt;- round(quantile(stu_SG_more$Avg_Sci, probs = .25)-1.5*IQR(stu_SG_more$Avg_Sci),0)\n\n# Histogram\nhist_sci &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(x = Avg_Sci)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#c7c8cc\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    \n    # Set same limits for both plots to ensure justification\n    limits = c(150,850), \n  ) + \n  geom_vline(\n    aes(xintercept = median_sci),\n    colour=\"#595DE5\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = median_sci+50, \n    y = 840,\n    label = paste0(\"Median = \", median_sci),\n    color=\"#595DE5\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean_sci),\n    colour=\"#e0218a\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = mean_sci-50, \n    y = 840,\n    label = paste0(\"Mean = \", mean_sci),\n    color=\"#e0218a\"\n  ) +  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n# Boxplot\nbox_sci &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(y = Avg_Sci, x=\"\")\n  ) + \n  geom_boxplot(\n    fill=\"#c7c8cc\",\n    outlier.colour=\"#d18a7d\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = '#e0218a',\n               size=4) +\n  coord_flip() + \n  \n  #Annotate with amounts to show range of income on boxplot diagram\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = min_sci,\n    label = paste0(min_sci),\n    color = \"#d18a7d\"\n  ) + \n   annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = leftwhisk_sci,\n    label = paste0(leftwhisk_sci),\n    color = \"#34414E\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = max_sci,\n    label = paste0(max_sci),\n    color = \"#34414E\"\n  ) + \n  \n  labs(\n    title = \"Distribution of Average Science Scores\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(150,850), \n  ) +\n  \n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\nhbox_sci &lt;- (box_sci / hist_sci) + \n        plot_layout(heights = c(1, 3.5)) #&lt; Scale layout to keep boxplot height shorter\n\nhbox_sci & theme(plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\nObservations\n\nDistribution of math, reading and science scores based on the average plausible values seem to be quite symmetrically distributed. Mean and median for each subject are close together with most values spreading around the mean line.\nWe note the presence of outliers on the left end of the whisker from the boxplots. This is particularly prominent for Reading scores.\n\nDesign Consideration"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#design-consideration",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#design-consideration",
    "title": "Take-home Exercise 1:",
    "section": "Design Consideration",
    "text": "Design Consideration"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#parents-occupational-educational-status",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#parents-occupational-educational-status",
    "title": "Take-home Exercise 1: Investigating Student Performance with Data Visualisations",
    "section": "5.4 Parents Occupational & Educational Status",
    "text": "5.4 Parents Occupational & Educational Status\n\n\nShow the code\np_osf &lt;- ggplot(data = stu_SG_more, \n       aes(x = Occupation_Status_Father)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 6110) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.5,\n      size=3) +\n    labs(x = \"\",\n         y = \"\",\n         title=\"Father\") + \n    theme(\n      panel.grid.major = element_blank(), \n      plot.title = element_text(size=9, face=\"bold\"),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),\n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\np_osm &lt;- ggplot(data = stu_SG_more, \n       aes(x = Occupation_Status_Mother)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 6110) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.5,\n      size=3) +\n    labs(x = \"\",\n         y = \"\",\n         title=\"Mother\") + \n    theme(\n      panel.grid.major = element_blank(), \n      plot.title = element_text(size=9, face=\"bold\"),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),\n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\np_eduF &lt;- ggplot(data = stu_SG_more, \n       aes(x = Edu_Father)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 6110) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.5,\n      size=3) +\n    labs(x = \"\",\n         y = \"\",\n         title=\"Father\") + \n    theme(\n      panel.grid.major = element_blank(), \n      plot.title = element_text(size=9, face=\"bold\"),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),\n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\np_eduM &lt;- ggplot(data = stu_SG_more, \n       aes(x = Edu_Mother)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 6110) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.5,\n      size=3) +\n    labs(x = \"\",\n         y = \"\",\n         title=\"Mother\") + \n    theme(\n      panel.grid.major = element_blank(), \n      plot.title = element_text(size=9, face=\"bold\"),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),\n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    )  \n\np_eduF + p_osf + p_eduM + p_osm +\n  plot_layout(widths=c(2,1)) +\n  plot_annotation(title = \"Most students have parents who are employed, with nearly half of them having tertiary education.\", \n                  subtitle=\"Similar patterns in education and employment among fathers and mothers\", \n                  theme=theme(plot.title = element_text(hjust = 0),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))\n\n\n\n\n\n\nObservations\n\nThere are more parents with post-secondary and tertiary education compared to lower levels of educational attainment. Employed parents make up the majority of the responses.\nThe split between educational levels and employment status are similar between Fathers and Mothers. Both have the highest proportion (almost half) with Tertiary education and most parents are employed.\nUnemployed father are almost twice as many as unemployed mothers."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#school-characteristics",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#school-characteristics",
    "title": "Take-home Exercise 1: Investigating Student Performance with Data Visualisations",
    "section": "5.5 School Characteristics",
    "text": "5.5 School Characteristics\n\n\nShow the code\np_schtype &lt;- ggplot(data = stu_SG_more, \n       aes(x = SchType )) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 6110) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.5,\n      size=3) +\n    labs(x = \"\",\n         y = \"\",\n         title=\"School Type\") + \n    theme(\n      panel.grid.major = element_blank(), \n      plot.title = element_text(size=9, face=\"bold\"),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),\n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\n# Calculating the mean, median, min and max\nmean_str &lt;- round(mean(stu_SG_more$StuTeacher_ratio),2)\nmedian_str &lt;- round(median(stu_SG_more$StuTeacher_ratio),2)\nmin_str &lt;- round(min(stu_SG_more$StuTeacher_ratio),2)\nmax_str &lt;- round(max(stu_SG_more$StuTeacher_ratio),2)\nleftwhisk_str &lt;- round(quantile(stu_SG_more$StuTeacher_ratio, probs = .25)-1.5*IQR(stu_SG_more$StuTeacher_ratio),2)\n\n# Histogram\nhist_str &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(x = StuTeacher_ratio)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#c7c8cc\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    \n    # Set same limits for both plots for consistency\n    limits = c(1,100), \n  ) + \n  geom_vline(\n    aes(xintercept = median_str),\n    colour=\"#595DE5\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 20, \n    y = 5000,\n    label = paste0(\"Median =\\n\", median_str),\n    color=\"#595DE5\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean_str),\n    colour=\"#e0218a\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 5, \n    y = 5000,\n    label = paste0(\"Mean =\\n\", mean_str),\n    color=\"#e0218a\"\n  ) +  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n# Boxplot\nbox_str &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(y = StuTeacher_ratio, x=\"\")\n  ) + \n  geom_boxplot(\n    fill=\"#c7c8cc\",\n    outlier.colour=\"#d18a7d\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = '#e0218a',\n               size=2) +\n  coord_flip() + \n  \n  #Annotate with amounts to show range\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = min_str,\n    label = paste0(min_str),\n    color = \"#d18a7d\"\n  ) + \n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = max_str,\n    label = paste0(max_str),\n    color = \"#d18a7d\"\n  ) + \n  \n  labs(\n    title = \"Distribution of Student-Teacher Ratio\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(1,100), \n  ) +\n  \n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    plot.title = element_text(size=9, face=\"bold\"),\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n\nhbox_str &lt;- (box_str / hist_str) + \n        plot_layout(heights = c(1, 3.5)) #&lt; Scale layout to keep boxplot height shorter\n\n(p_schtype + hbox_str) +\n  plot_layout(widths=c(1,2)) +\n  plot_annotation(title=\"Most Responses from Public Schools Show a 12:1 Student-Teacher Ratio\", \n                  theme=theme(plot.title = element_text(hjust = 0),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))\n\n\n\n\n\n\nObservations\n\nResponses are mostly from students attending public schools, with less than 10% of responses from private-school goers.\nThe distribution of Student-Teacher ratio is highly skewed to the right, with most of the responses centered around the mean and median Student-Teacher Ratio of 12.\nThere is a large variation in the Student-Teacher Ratio range. Significant outliers on both ends of the scale are noted, particularly on the right tail with a ratio of 100 students to 1 teacher.\nTo increase variability and to make the patterns in the data more interpretable, we can consider performing a log transformation to reduce the skewness of the variable.\n\nDesign Consideration for EDA\n\nInterestingly, the boxplot was able to highlight the outliers on the far right end of the scale while the histogram was unable to capture this due to the scale/range of the y-axis even though the y-axis starts from 0. Graphically, the boxplot is a much better tool for detecting outliers in such cases.\nYet, boxplots are not very helpful at conveying frequencies. It is hard to tell the sample size through conventional boxplots."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#out-of-school-study-time",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#out-of-school-study-time",
    "title": "Take-home Exercise 1:",
    "section": "5.2 Out-of-School Study Time",
    "text": "5.2 Out-of-School Study Time\nBar charts can be used to represent frequencies of different categories, appropriate for categorical variables that use a nominal or ordinal scale of measurement. Adding direct labels can increase accessibility of a bar grapb and reduce the “chart junk” since grid lines, axis labels, and even axis titles become obsolete. Ordering bar charts for categorical values with no internal order can help the reader focus on the largest and smallest groups. In the plot below, arranging according to increasing time frame would make sense as the variable follows the ordinal scale.\n\n\nShow the code\np2_hwt_reading &lt;- ggplot(data = stu_SG_filtered, \n       aes(x = Time_HW_Reading)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 2600) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \\n\", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.2,\n      size=3) +  \n    labs(x = \"\",\n         y = \"\",\n         title=\"Reading\") + \n    theme(\n      panel.grid.major = element_blank(), \n      plot.title = element_text(size=9, face=\"bold\"),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),\n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\np2_hwt_math &lt;- ggplot(data = stu_SG_filtered, \n       aes(x = Time_HW_Math)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 2600) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \\n\", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.2,\n      size=3) +  \n    labs(x = \"\",\n         y = \"\",\n         title=\"Math\") + \n    theme(\n      panel.grid.major = element_blank(), \n      plot.title = element_text(size=9, face=\"bold\"),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),\n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\np2_hwt_sci &lt;- ggplot(data = stu_SG_filtered, \n       aes(x = Time_HW_Science)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 2600) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \\n\", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.2,\n      size=3) +  \n    labs(x = \"\",\n         y = \"\",\n         title=\"Science\") + \n    theme(\n      panel.grid.major = element_blank(), \n      plot.title = element_text(size=9, face=\"bold\"),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),\n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\n\np2_hwt_math + p2_hwt_reading + p2_hwt_sci +\n  plot_layout(widths=c(1,1,1)) +\n  plot_annotation(title=\"Time Spent on Homework in mins\", \n                  theme=theme(plot.title = element_text(hjust = 0),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))\n\n\n\n\n\n\nObservations\n\nBoth Science and Math seem to be more spread out to cover more timeframes.\nThe bar chart is clustered around the lower end of time spent on homework for Reading.\nThis is interesting because median and mean Reading scores are the lowest among the 3 subjects."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#parent-educational-occupational-statuses",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#parent-educational-occupational-statuses",
    "title": "Take-home Exercise 1:",
    "section": "Parent Educational & Occupational Statuses",
    "text": "Parent Educational & Occupational Statuses"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#average-scores",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#average-scores",
    "title": "Take-home Exercise 1:",
    "section": "4.1 Average Scores",
    "text": "4.1 Average Scores\n\nMathReadingScience\n\n\n\n\nShow the code\n# Calculating the mean, median, min and max\nmean_math &lt;- round(mean(stu_SG_more$Avg_Math),0)\nmedian_math &lt;- round(median(stu_SG_more$Avg_Math),0)\nmin_math &lt;- round(min(stu_SG_more$Avg_Math),0)\nmax_math &lt;- round(max(stu_SG_more$Avg_Math),0)\nleftwhisk_math &lt;- round(quantile(stu_SG_more$Avg_Math, probs = .25)-1.5*IQR(stu_SG_more$Avg_Math),0)\n\n# Histogram\nhist_math &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(x = Avg_Math)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#c7c8cc\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    \n    # Set same limits for both plots to ensure justification\n    limits = c(150,950), \n  ) + \n  geom_vline(\n    aes(xintercept = median_math),\n    colour=\"#595DE5\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 660, \n    y = 870,\n    label = paste0(\"Median = \", median_math),\n    color=\"#595DE5\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean_math),\n    colour=\"#e0218a\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 535, \n    y = 870,\n    label = paste0(\"Mean = \", mean_math),\n    color=\"#e0218a\"\n  ) +  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n# Boxplot\nbox_math &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(y = Avg_Math, x=\"\")\n  ) + \n  geom_boxplot(\n    fill=\"#c7c8cc\",\n    outlier.colour=\"#d18a7d\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = '#e0218a',\n               size=4) +\n  coord_flip() + \n  \n    #Annotate with amounts to show range\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = min_math,\n    label = paste0(min_math),\n    color = \"#d18a7d\"\n  ) + \n   annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = leftwhisk_math,\n    label = paste0(leftwhisk_math),\n    color = \"#34414E\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = max_math,\n    label = paste0(max_math),\n    color = \"#34414E\"\n  ) + \n  \n  labs(\n    title = \"Symmetrical Distribution of Average Math Scores\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(150,950), \n  ) +\n  \n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\nhbox_math &lt;- (box_math / hist_math) + \n        plot_layout(heights = c(1, 3.5)) #&lt; Scale layout to keep boxplot height shorter\n\nhbox_math & theme(plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\nShow the code\n# Calculating the mean, median, min and max\nmean_reading &lt;- round(mean(stu_SG_more$Avg_Reading),0)\nmedian_reading &lt;- round(median(stu_SG_more$Avg_Reading),0)\nmin_reading &lt;- round(min(stu_SG_more$Avg_Reading),0)\nmax_reading &lt;- round(max(stu_SG_more$Avg_Reading),0)\nleftwhisk_reading &lt;- round(quantile(stu_SG_more$Avg_Reading, probs = .25)-1.5*IQR(stu_SG_more$Avg_Reading),0)\n\n# Histogram\nhist_reading &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(x = Avg_Reading)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#c7c8cc\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    \n    # Set same limits for both plots to ensure justification\n    limits = c(150,950), \n  ) + \n  geom_vline(\n    aes(xintercept = median_reading),\n    colour=\"#595DE5\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = median_reading+80, \n    y = 920,\n    label = paste0(\"Median = \", median_reading),\n    color=\"#595DE5\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean_reading),\n    colour=\"#e0218a\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = mean_reading-50, \n    y = 920,\n    label = paste0(\"Mean = \", mean_reading),\n    color=\"#e0218a\"\n  ) +  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n# Boxplot\nbox_reading &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(y = Avg_Reading, x=\"\")\n  ) + \n  geom_boxplot(\n    fill=\"#c7c8cc\",\n    outlier.colour=\"#d18a7d\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = '#e0218a',\n               size=4) +\n  coord_flip() + \n  \n    #Annotate with amounts to show range\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = min_reading,\n    label = paste0(min_reading),\n    color = \"#d18a7d\"\n  ) + \n   annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = leftwhisk_reading,\n    label = paste0(leftwhisk_reading),\n    color = \"#34414E\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = max_reading,\n    label = paste0(max_reading),\n    color = \"#34414E\"\n  ) + \n  \n  labs(\n    title = \"Symmetrical Distribution of Average Reading Scores\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(150,950), \n  ) +\n  \n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\nhbox_reading &lt;- (box_reading / hist_reading) + \n        plot_layout(heights = c(1, 3.5)) #&lt; Scale layout to keep boxplot height shorter\n\nhbox_reading & theme(plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\nShow the code\n# Calculating the mean, median, min and max\nmean_sci &lt;- round(mean(stu_SG_more$Avg_Sci),0)\nmedian_sci &lt;- round(median(stu_SG_more$Avg_Sci),0)\nmin_sci &lt;- round(min(stu_SG_more$Avg_Sci),0)\nmax_sci &lt;- round(max(stu_SG_more$Avg_Sci),0)\nleftwhisk_sci &lt;- round(quantile(stu_SG_more$Avg_Sci, probs = .25)-1.5*IQR(stu_SG_more$Avg_Sci),0)\n\n# Histogram\nhist_sci &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(x = Avg_Sci)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#c7c8cc\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    \n    # Set same limits for both plots to ensure justification\n    limits = c(150,950), \n  ) + \n  geom_vline(\n    aes(xintercept = median_sci),\n    colour=\"#595DE5\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = median_sci+70, \n    y = 940,\n    label = paste0(\"Median = \", median_sci),\n    color=\"#595DE5\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean_sci),\n    colour=\"#e0218a\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = mean_sci-50, \n    y = 940,\n    label = paste0(\"Mean = \", mean_sci),\n    color=\"#e0218a\"\n  ) +  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n# Boxplot\nbox_sci &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(y = Avg_Sci, x=\"\")\n  ) + \n  geom_boxplot(\n    fill=\"#c7c8cc\",\n    outlier.colour=\"#d18a7d\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = '#e0218a',\n               size=4) +\n  coord_flip() + \n  \n  #Annotate with amounts to show range\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = min_sci,\n    label = paste0(min_sci),\n    color = \"#d18a7d\"\n  ) + \n   annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = leftwhisk_sci,\n    label = paste0(leftwhisk_sci),\n    color = \"#34414E\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = max_sci,\n    label = paste0(max_sci),\n    color = \"#34414E\"\n  ) + \n  \n  labs(\n    title = \"Symmetrical Distribution of Average Science Scores\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(150,950), \n  ) +\n  \n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\nhbox_sci &lt;- (box_sci / hist_sci) + \n        plot_layout(heights = c(1, 3.5)) #&lt; Scale layout to keep boxplot height shorter\n\nhbox_sci & theme(plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\nObservations\n\nMath has the highest mean and median scores amongst the 3 subjects.\nDistribution of math, reading and science scores based on the average plausible values seem to be quite symmetrically distributed. Mean and median for each subject are close together with most values spreading around the mean line.\nWe note the presence of outliers on the left end of the whisker from the boxplots. This is particularly prominent for Reading scores."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#infocomm-technology-ownership",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#infocomm-technology-ownership",
    "title": "Take-home Exercise 1:",
    "section": "4.5 Infocomm Technology Ownership",
    "text": "4.5 Infocomm Technology Ownership\n\nstu_SG_more$Num_ICT = as.numeric(stu_SG_more$Num_ICT)\n\n\n\nShow the code\n# Calculating the mean, median, min and max\nmean_ict &lt;- round(mean(stu_SG_more$Num_ICT),0)\nmedian_ict &lt;- round(median(stu_SG_more$Num_ICT),0)\nmin_ict &lt;- round(min(stu_SG_more$Num_ICT),0)\nmax_ict &lt;- round(max(stu_SG_more$Num_ICT),0)\nleftwhisk_ict &lt;- round(quantile(stu_SG_more$Num_ICT, probs = .25)-1.5*IQR(stu_SG_more$Num_ICT),0)\n\n# Histogram\nhist_ict &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(x = Num_ICT)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#c7c8cc\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    \n    # Set same limits for both plots to ensure justification\n    limits = c(0,7), \n  ) + \n  geom_vline(\n    aes(xintercept = median_ict),\n    colour=\"#595DE5\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 6, \n    y = 6,\n    label = paste0(\"Median = \", median_ict),\n    color=\"#595DE5\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean_ict),\n    colour=\"#e0218a\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 6, \n    y = 6,\n    label = paste0(\"Mean = \", mean_ict),\n    color=\"#e0218a\"\n  ) +  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n# Boxplot\nbox_ict &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(y = Num_ICT, x=\"\")\n  ) + \n  geom_boxplot(\n    fill=\"#c7c8cc\",\n    outlier.colour=\"#d18a7d\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = '#e0218a',\n               size=4) +\n  coord_flip() + \n  \n  #Annotate with amounts to show range\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = min_ict,\n    label = paste0(min_ict),\n    color = \"#d18a7d\"\n  ) + \n   annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = leftwhisk_ict,\n    label = paste0(leftwhisk_ict),\n    color = \"#34414E\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = max_ict,\n    label = paste0(max_ict),\n    color = \"#34414E\"\n  ) + \n  \n  labs(\n    title = \"No. of Infocomm Devices\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(0,7), \n  ) +\n  \n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\nhbox_ict &lt;- (box_ict / hist_ict) + \n        plot_layout(heights = c(1, 3.5)) #&lt; Scale layout to keep boxplot height shorter\n\nhbox_ict & theme(plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\nObservations\nDesign Consideration"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#if-time-spent-on-homework-affects-the-distribution-of-scores-between-genders",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#if-time-spent-on-homework-affects-the-distribution-of-scores-between-genders",
    "title": "Take-home Exercise 1:",
    "section": "If time spent on homework affects the distribution of scores between genders",
    "text": "If time spent on homework affects the distribution of scores between genders\n\npyr_m_m &lt;- \n  ggplot(data = subset(stu_SG_more, Gender==\"Male\"),\n            aes(x = Avg_Math, group=Time_HW_Math)) +\n  # Math + Male\n  geom_density(aes(y=-..density..),\n               fill=\"#f7af7a\",\n               color=\"#f7af7a\",\n               alpha=0.2)+\n    guides(fill = guide_legend(reverse = TRUE)) +\n    theme_minimal() +\n    theme(legend.position = \"bottom\",\n          plot.title = element_text(size = rel(0.8), face = \"bold\"),\n          plot.subtitle = element_text(size = rel(0.8)),\n          plot.caption = element_text(size = rel(0.8)),\n          axis.text.y = element_blank(),\n          axis.text.x = element_blank(),\n          axis.title.x = element_blank(),\n          plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n          ) +\n  coord_cartesian(xlim = c(150, 850)) +\n  scale_y_continuous(expand = expansion(mult = c(0, 0)), breaks = -1:1,\n                     labels = abs(-1:1)) +\n    labs(x = \"\", y = NULL, title = \"Score Distribution of the Population of England and Wales:\",\n         subtitle = \"Time spent on homework: {current_frame} minutes\",\n         fill = \"Gender\") +\n        coord_flip(clip=\"off\")\n\npyr_m_f &lt;- \n  ggplot(data = subset(stu_SG_more, Gender==\"Female\"),\n            aes(x = Avg_Math, group=Time_HW_Math)) +\n  # Math + Female\n  geom_density(aes(y=..density..),\n               fill=\"#f7af7a\",\n               color=\"#f7af7a\",\n               alpha=0.2)+  \n     guides(fill = guide_legend(reverse = TRUE)) +\n    theme_minimal() +\n    theme(legend.position = \"bottom\",\n          plot.title = element_text(size = rel(0.8), face = \"bold\"),\n          plot.subtitle = element_text(size = rel(0.8)),\n          plot.caption = element_text(size = rel(0.8)),\n          axis.text.y = element_text(size = rel(0.9), margin = margin(r = 20)),\n          axis.text.x = element_blank(),\n          axis.title.x = element_blank(),\n          \n          plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n          ) +\n  coord_cartesian(xlim = c(150, 850)) +\n  scale_y_continuous(expand = expansion(mult = c(0, 0)), breaks = -1:1,\n                     labels = abs(-1:1)) +\n    labs(x = \"\", y = NULL, \n         fill = \"Gender\") +\n        coord_flip(clip=\"off\")\n\n(pyr_m_m + pyr_m_f) +\n  plot_layout(guides = \"collect\", widths = c( 1, 1)) +\n  transition_manual(factor(Time_HW_Math, c(\"&lt;31\", \"31-60\", \"61-120\", \"&gt;120\"))) +\n  ease_aes(\"linear\")\n\n\n\n\n\n#stu_SG_HWT$base &lt;- 0\n\npyr_hwtime &lt;- \n  ggplot(NULL,\n            aes(x = x)) +\n  # Math + Male\n  geom_density(data = subset(stu_SG_more, Gender==\"Male\" & Time_HW_Math==\"&lt;31\"),\n               aes(x=Avg_Math,\n                   y=-..density..),\n               fill=\"#f7af7a\",\n               color=\"#f7af7a\",\n               alpha=0.2)+\n  # Math + Female\n  geom_density(data = subset(stu_SG_more, Gender==\"Female\" & Time_HW_Math==\"&lt;31\"),\n               aes(x=Avg_Math,\n                   y=..density..),\n               fill=\"#f7af7a\",\n               colour=\"#f7af7a\",\n               alpha=0.2)+\n  \n  # Reading + Male\n  geom_density(data = subset(stu_SG_more,  Gender==\"Male\" & Time_HW_Reading==\"&lt;31\"),\n               aes(x=Avg_Reading,\n                   y=-..density..),\n               fill=\"#f27279\",\n               color=\"#f27279\",\n               alpha=0.2)+\n  # Science + Male\n  geom_density(data = subset(stu_SG_more,  Gender==\"Female\" & Time_HW_Science==\"&lt;31\"),\n               aes(x=Avg_Sci,\n                   y=-..density..),\n               fill=\"#73b2c4\",\n               color=\"#73b2c4\",\n               alpha=0.2)+\n  # Math + Female\n  geom_density(data = subset(stu_SG_more, Gender==\"Female\" & Time_HW_Math==\"&lt;31\"),\n               aes(x=Avg_Math,\n                   y=..density..),\n               fill=\"#f7af7a\",\n               colour=\"#f7af7a\",\n               alpha=0.2)+\n  # Reading + Female\n  geom_density(data = subset(stu_SG_more,  Gender==\"Female\" & Time_HW_Reading==\"&lt;31\"),\n               aes(x=Avg_Reading,\n                   y=..density..),\n               fill=\"#f27279\",\n               color=\"#f27279\",\n               alpha=0.2)+\n  # Science + Female\n  geom_density(data = subset(stu_SG_more,  Gender==\"Female\" & Time_HW_Science==\"&lt;31\"),\n               aes(x=Avg_Sci,\n                   y=..density..),\n               fill=\"#73b2c4\",\n               colour=\"#73b2c4\",\n               alpha=0.2)+      \n    guides(fill = guide_legend(reverse = TRUE)) +\n    theme_minimal() +\n    theme(legend.position = \"bottom\",\n          plot.title = element_text(size = rel(0.8), face = \"bold\"),\n          plot.subtitle = element_text(size = rel(0.8)),\n          plot.caption = element_text(size = rel(0.8)),\n          axis.text.y = element_text(size = rel(0.9)),\n          axis.text.x = element_text(size = rel(0.9)),\n          axis.title.x = element_blank(),\n          plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n          ) +\n  scale_x_continuous(breaks = seq(150,850,100),\n                     labels = seq(150,850,100)) +\n  scale_y_continuous(expand = expansion(mult = c(0, 0)), breaks = -1:1,\n                     labels = abs(-1:1)) +\n    labs(x = \"\", y = NULL, title = \"Score Distribution:\",\n         subtitle = \"Time spent on homework: {frame_time} minutes\",\n         caption = \"\",\n         fill = \"Gender\") +\n        coord_flip(clip=\"off\")\n\n\npyr_hwtime \n\n\n\n#+\n#  transition_time(Time_HW_Math) +\n#  ease_aes(\"linear\")\n\n\nlibrary(viridis)\n\nggplot(stu_SG_more, aes(x = Avg_Math, y = Time_HW_Math, fill = factor(..quantile..))) + \n    stat_density_ridges(quantiles = c(0.25,0.5,0.75)\n                        , quantile_lines = TRUE\n                        , geom = \"density_ridges_gradient\"\n                        , alpha = 0.6\n                        , scale = 2.3) + \n  scale_fill_viridis(discrete = TRUE\n                       , name = \"Quantile\"\n                       , alpha = 0.3\n                       , option = \"cividis\") + \n  ggtitle(\"What is the weather like in NYC?\",\n          subtitle = \"Ridgeline plot for NYC temperature by months\") +\n  xlab(\"Math Score\") + \n  ylab(\"Time spent on Homework\") +\n  labs(caption = \"\") +\n  theme(plot.title = element_text(face=\"bold\")) +\n  theme(plot.subtitle = element_text(face=\"bold\", color=\"grey\")) +\n  theme(plot.caption=element_text(color=\"grey\"))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-the-distribution-of-scores-against-time-spent-on-homework-between-genders",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-the-distribution-of-scores-against-time-spent-on-homework-between-genders",
    "title": "Take-home Exercise 1:",
    "section": "Comparing the distribution of scores against time spent on homework between genders",
    "text": "Comparing the distribution of scores against time spent on homework between genders\n\nMathReading\n\n\n\npyr_math &lt;- \n  ggplot(data = stu_SG_more,\n            aes(x = Avg_Math, group=Time_HW_Math)) +\n  # Math + Male\n  geom_density(data = subset(stu_SG_more, Gender==\"Male\"),\n               aes(x = Avg_Math,\n                   y=-..density..),\n               fill=\"#73b2c4\",\n               color=\"#73b2c4\",\n               alpha=0.5)+\n  # Math + Female\n  geom_density(data = subset(stu_SG_more, Gender==\"Female\"),\n               aes(x = Avg_Math,\n                   y=..density..),\n               fill=\"#f27279\",\n               colour=\"#f27279\",\n               alpha=0.5)+\n    guides(fill = guide_legend(reverse = TRUE)) +\n    theme_minimal() +\n    theme(legend.position = \"bottom\",\n          plot.title = element_text(size = rel(0.8), face = \"bold\"),\n          plot.subtitle = element_text(size = rel(0.8)),\n          plot.caption = element_text(size = rel(0.8)),\n          axis.text.y = element_text(size = rel(0.9)),\n          axis.text.x = element_blank(),\n          axis.title.x = element_blank(),\n          plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n          ) +\n  scale_x_continuous(breaks = seq(150,850,100),\n                     labels = seq(150,850,100)) +\n  scale_y_continuous(breaks = -1:1,\n                     labels = abs(-1:1)) +\n    labs(x = \"\", y = NULL, title = \"Direct relationship between the time spent on math homework and math scores among females,\\n whereas an inverse relationship exists for males\",\n         subtitle = \"Time spent on homework: {current_frame} minutes\",\n         fill = \"Gender\") +\n        coord_flip(clip=\"off\")+\n  annotate(\n    geom = \"text\", \n    x = 780, \n    y = -0.003,\n    label = \"Male\",\n    color = \"#4472af\")+\n      \n    annotate(\n    geom = \"text\", \n    x = 780, \n    y = 0.003,\n    label = \"Female\",\n    color = \"#e0218a\")\n\n\npyr_math +\n  transition_manual(factor(Time_HW_Math, c(\"&lt;31\", \"31-60\", \"61-120\", \"&gt;120\"))) +\n  ease_aes(\"linear\")\n\n\n\n\n\n\n\npyr_reading &lt;- \n  ggplot(data = stu_SG_more,\n            aes(x = Avg_Reading, group=Time_HW_Reading)) +\n  # Reading + Male\n  geom_density(data = subset(stu_SG_more, Gender==\"Male\"),\n               aes(y=-..density..),\n               fill=\"#73b2c4\",\n               color=\"#73b2c4\",\n               alpha=0.5)+\n  # Reading + Female\n  geom_density(data = subset(stu_SG_more, Gender==\"Female\"),\n               aes(y=..density..),\n               fill=\"#f27279\",\n               colour=\"#f27279\",\n               alpha=0.5)+\n    guides(fill = guide_legend(reverse = TRUE)) +\n    theme_minimal() +\n    theme(legend.position = \"bottom\",\n          plot.title = element_text(size = rel(0.8), face = \"bold\"),\n          plot.subtitle = element_text(size = rel(0.8)),\n          plot.caption = element_text(size = rel(0.8)),\n          axis.text.y = element_text(size = rel(0.9)),\n          axis.text.x = element_blank(),\n          axis.title.x = element_blank(),\n          plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n          ) +\n  scale_x_continuous(breaks = seq(150,850,100),\n                     labels = seq(150,850,100)) +\n  scale_y_continuous(breaks = -1:1,\n                     labels = abs(-1:1)) +\n    labs(x = \"\", y = NULL, title = \"Multimodal, left-tailed distribution for both genders observed in cases where there is less time spent on reading homework.\",\n         subtitle = \"Time spent on homework: {current_frame} minutes\",\n         fill = \"Gender\") +\n        coord_flip(clip=\"off\")+\n  annotate(\n    geom = \"text\", \n    x = 780, \n    y = -0.003,\n    label = \"Male\",\n    color = \"#4472af\")+\n      \n    annotate(\n    geom = \"text\", \n    x = 780, \n    y = 0.003,\n    label = \"Female\",\n    color = \"#e0218a\")\n\n\npyr_reading +\n  transition_manual(factor(Time_HW_Reading, c(\"&lt;31\", \"31-60\", \"61-120\", \"&gt;120\"))) +\n  ease_aes(\"linear\")\n\n\n\n\n\n\n\n\npyr_hwtime &lt;- \n  ggplot(NULL,\n            aes(x = x)) +\n  # Math + Male\n  geom_density(data = subset(stu_SG_more, Gender==\"Male\" & Time_HW_Math==\"&lt;31\"),\n               aes(x=Avg_Math,\n                   y=-..density..),\n               fill=\"#f7af7a\",\n               color=\"#f7af7a\",\n               alpha=0.2)+\n  # Math + Female\n  geom_density(data = subset(stu_SG_more, Gender==\"Female\" & Time_HW_Math==\"&lt;31\"),\n               aes(x=Avg_Math,\n                   y=..density..),\n               fill=\"#f7af7a\",\n               colour=\"#f7af7a\",\n               alpha=0.2)+\n  \n  # Reading + Male\n  geom_density(data = subset(stu_SG_more,  Gender==\"Male\" & Time_HW_Reading==\"&lt;31\"),\n               aes(x=Avg_Reading,\n                   y=-..density..),\n               fill=\"#f27279\",\n               color=\"#f27279\",\n               alpha=0.2)+\n  # Science + Male\n  geom_density(data = subset(stu_SG_more,  Gender==\"Female\" & Time_HW_Science==\"&lt;31\"),\n               aes(x=Avg_Sci,\n                   y=-..density..),\n               fill=\"#73b2c4\",\n               color=\"#73b2c4\",\n               alpha=0.2)+\n  # Math + Female\n  geom_density(data = subset(stu_SG_more, Gender==\"Female\" & Time_HW_Math==\"&lt;31\"),\n               aes(x=Avg_Math,\n                   y=..density..),\n               fill=\"#f7af7a\",\n               colour=\"#f7af7a\",\n               alpha=0.2)+\n  # Reading + Female\n  geom_density(data = subset(stu_SG_more,  Gender==\"Female\" & Time_HW_Reading==\"&lt;31\"),\n               aes(x=Avg_Reading,\n                   y=..density..),\n               fill=\"#f27279\",\n               color=\"#f27279\",\n               alpha=0.2)+\n  # Science + Female\n  geom_density(data = subset(stu_SG_more,  Gender==\"Female\" & Time_HW_Science==\"&lt;31\"),\n               aes(x=Avg_Sci,\n                   y=..density..),\n               fill=\"#73b2c4\",\n               colour=\"#73b2c4\",\n               alpha=0.2)+      \n    guides(fill = guide_legend(reverse = TRUE)) +\n    theme_minimal() +\n    theme(legend.position = \"bottom\",\n          plot.title = element_text(size = rel(0.8), face = \"bold\"),\n          plot.subtitle = element_text(size = rel(0.8)),\n          plot.caption = element_text(size = rel(0.8)),\n          axis.text.y = element_text(size = rel(0.9)),\n          axis.text.x = element_text(size = rel(0.9)),\n          axis.title.x = element_blank(),\n          plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n          ) +\n  scale_x_continuous(breaks = seq(150,850,100),\n                     labels = seq(150,850,100)) +\n  scale_y_continuous(expand = expansion(mult = c(0, 0)), breaks = -1:1,\n                     labels = abs(-1:1)) +\n    labs(x = \"\", y = NULL, title = \"Score Distribution:\",\n         subtitle = \"Time spent on homework: {frame_time} minutes\",\n         caption = \"\",\n         fill = \"Gender\") +\n        coord_flip(clip=\"off\")\n\n\npyr_math \n\n\n\n#+\n#  transition_time(Time_HW_Math) +\n#  ease_aes(\"linear\")\n\n\nlibrary(viridis)\n\nggplot(stu_SG_more, aes(x = Avg_Math, y = Time_HW_Math, fill = factor(..quantile..))) + \n    stat_density_ridges(quantiles = c(0.25,0.5,0.75)\n                        , quantile_lines = TRUE\n                        , geom = \"density_ridges_gradient\"\n                        , alpha = 0.6\n                        , scale = 2.3) + \n  scale_fill_viridis(discrete = TRUE\n                       , name = \"Quantile\"\n                       , alpha = 0.3\n                       , option = \"cividis\") + \n  ggtitle(\"What is the weather like in NYC?\",\n          subtitle = \"Ridgeline plot for NYC temperature by months\") +\n  xlab(\"Math Score\") + \n  ylab(\"Time spent on Homework\") +\n  labs(caption = \"\") +\n  theme(plot.title = element_text(face=\"bold\")) +\n  theme(plot.subtitle = element_text(face=\"bold\", color=\"grey\")) +\n  theme(plot.caption=element_text(color=\"grey\"))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "title": "In-class Exercise 2:",
    "section": "",
    "text": "1 Loading Packages\n\n\n\n\n\n\n\nLibrary\nDescription\n\n\n\n\ntidyverse\nA collection of core packages designed for data science, used extensively for data preparation and wrangling.\n\n\nhaven\nTo enable R to read and write various data formats such as SAS and SPSS.\n\n\npatchwork\nFor preparing composite figure created using ggplot2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nflowchart LR\n    A(Student PISA Survey) --&gt;|\\nFilter| B[Singapore Students' Responses]\n\n    B--&gt; F[Schools]\n    F-.-&gt; F1[CNTSCHID]\n    \n    B--&gt; B1[Student ID]\n    B1-.-&gt; B1.1[CNTSTUID]  \n\n    B--&gt; G[Gender]\n    G-.-&gt; M[ST004D01T] \n\n    B--&gt; H[Socioeconomic status]\n    H--&gt; H1[Immigration status] \n    H1-.-&gt; H1A[IMMIG]        \n    H--&gt; H2[Parental occupational status] \n    H2-.-&gt; H2A[OCOD1, OCOD2]\n    H--&gt; H3[Educational resources]\n    H3-.-&gt; H3A[ST250Q02JA, ST250Q03JA, ST250Q05JA]\n\n    H--&gt; H6[Parental educational status]\n    H6-.-&gt; H6A[MISCED, FISCED]          \n\n    B--&gt; C[Math performance]\n    C--&gt; C1[Out-of-school study time]\n    C1-.-&gt; C1A[ST296Q01JA]\n    C--&gt; C2[Curriculum time]   \n    C2-.-&gt; C2A[ST059Q01TA]\n    C--&gt; C3[Plausible Values]   \n    C3-.-&gt; C3A[PV1MATH to PV10MATH]        \n\n    B--&gt; D[Reading performance]\n    D--&gt; D1[Out-of-school study time]\n    D1-.-&gt; D1A[ST296Q02JA] \n    D--&gt; D2[Plausible Values]\n    D2-.-&gt; D2A[PV1READ to PV10READ]     \n\n    B--&gt; E[Science performance]\n    E--&gt; E1[Out-of-school study time]\n    E1-.-&gt; E1A[ST296Q03JA]   \n    E--&gt; E2[Plausible Values]\n    E2-.-&gt; E12[PV1SCIE to PV10SCIE] \n\n    1(Schools PISA Survey) --&gt;|\\nFilter| 1.1[Singapore Schools \\nResponses]\n    F1--&gt; F2[Type, Student-Teacher ratio]\n    F2-.-&gt; F2a[SCHLTYPE, STRATIO]\n    1.1-.-&gt;F1"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-distribution-of-subject-performance",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-distribution-of-subject-performance",
    "title": "Take-home Exercise 1: Investigating Student Performance with Data Visualisations",
    "section": "6.1 Comparing distribution of subject performance",
    "text": "6.1 Comparing distribution of subject performance\nRidgeline plots are a way to express the distribution of the data for several categorical variables. The code chunk below uses geom_density_ridges() to show the distribution of scores by subject. Each curve gives the appropriate probability density function, where the area under the curve is 1.\nFigure below is plotted by mapping the probabilities calculated by using stat(ecdf) which represent the empirical cumulative density function for the distribution of each subject score. When used as a fill aesthetic in a plot, it can create visual representation where areas of the plot that are closer to the median have a different colour intensity than areas that are further away. This is particularly useful for highlighting the central tendency and dispersion of data in a cumulative distribution plot.\npivot_longer() is used to pivot the subject scores into rows from its separate columns.\n\n\nShow the code\nstu_SG_more_long &lt;- \n  stu_SG_more %&gt;% \n  pivot_longer(cols = starts_with(\"Avg\"),\n               names_to = \"subject\",\n               names_prefix=\"Avg_\",\n               values_to=\"score\")\n\nggplot(data= stu_SG_more_long,\n        aes(x = score, \n            y = subject, \n           fill = 0.5-abs(0.5-after_stat(ecdf)))\n       )+ \n  geom_density_ridges_gradient(\n                     alpha = 0.8,\n                     scale = 2,\n                     geom = \"density_ridges_gradient\", \n                     calc_ecdf = TRUE) + \n  scale_fill_gradientn(colors = c(\"#ecc9d0\", \"#e0218a\")) +\n  #guides(color = \"none\", fill = \"none\") + \n  labs(x = \"Score\", y = NULL, title = \"Median score for Math higher than Science and Reading.\", \n         subtitle=\"Symmetrical curves appear to resemble Normal distributions across subject.\")+\n  theme(legend.position = \"right\",\n        legend.direction = \"vertical\",\n          plot.title = element_text(size = 12, face = \"bold\"),\n          plot.subtitle = element_text(size = 9),\n          plot.caption = element_text(size = rel(0.8)),\n          axis.text.y = element_text(size = rel(0.9)),\n          plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n          )\n\n\n\n\n\n\nInsights\n\nThe most probable scores are brighter (in hot pink).\nHere we can start to see that Math has the highest median among the 3 subjects.\nRange and distribution of the 3 subject scores appear to be quite similar.\n\n\nNow that we understand the basics of the data a bit more, let’s look more into their interaction with other variables."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-scores-against-time-spent-on-homework-between-genders",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-scores-against-time-spent-on-homework-between-genders",
    "title": "Take-home Exercise 1: Investigating Student Performance with Data Visualisations",
    "section": "6.2 Comparing scores against time spent on homework between genders",
    "text": "6.2 Comparing scores against time spent on homework between genders\nA diverging plot is used to facilitate comparison between male and female students. gganimate() helps transition as amount of time spent on homework increases. transition_manual() animates the plot over the Time_HW_Math variable and y = -..density.. is used to create the diverging effect. This can allow us to detect changes or trends in our dataset.\nIdeally, I would like to include a mean line or a textbox to indicate the changing mean score for each gender at each timeframe and to put all 3 animations side by side, but I haven’t managed to figure that out yet.\n\nMathReadingScience\n\n\n\n\nShow the code\npyr_math &lt;- \n  ggplot(data = stu_SG_more,\n            aes(x = Avg_Math, group=Time_HW_Math)) +\n  # Math + Male\n  geom_density(data = subset(stu_SG_more, Gender==\"Male\"),\n               aes(x = Avg_Math,\n                   y=-..density..),\n               fill=\"#73b2c4\",\n               color=\"#73b2c4\",\n               alpha=0.5)+\n  # Math + Female\n  geom_density(data = subset(stu_SG_more, Gender==\"Female\"),\n               aes(x = Avg_Math,\n                   y=..density..),\n               fill=\"#f27279\",\n               colour=\"#f27279\",\n               alpha=0.5)+\n    guides(fill = guide_legend(reverse = TRUE)) +\n    theme_minimal() +\n    theme(legend.position = \"bottom\",\n          plot.title = element_markdown(size = 12, face = \"bold\"),\n          plot.subtitle = element_text(size = rel(0.8)),\n          plot.caption = element_text(size = rel(0.8)),\n          axis.text.y = element_text(size = rel(0.9)),\n          axis.text.x = element_blank(),\n          axis.title.x = element_blank(),\n          plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n          ) +\n  scale_x_continuous(breaks = seq(150,950,100),\n                     labels = seq(150,950,100)) +\n  scale_y_continuous(breaks = -1:1,\n                     labels = abs(-1:1)) +\n    labs(x = \"\", y = NULL, title = \"Better math scores for &lt;span style='color: #73b2c4;'&gt;males&lt;/span&gt;, cyclic trends for both &lt;span style='color: #f27279;'&gt;females&lt;/span&gt; and&lt;br&gt;&lt;span style='color: #73b2c4;'&gt;males&lt;/span&gt;\" ,\n         subtitle = \"Time spent on homework: {current_frame} minutes\",\n         fill = \"Gender\") +\n        coord_flip(clip=\"off\")+\n  annotate(\n    geom = \"text\", \n    x = 780, \n    y = -0.003,\n    label = \"Male\",\n    color = \"#4472af\")+\n      \n    annotate(\n    geom = \"text\", \n    x = 780, \n    y = 0.003,\n    label = \"Female\",\n    color = \"#e0218a\")\n\n\npyr_math +\n  transition_manual(factor(Time_HW_Math, c(\"&lt;31\", \"31-60\", \"61-120\", \"&gt;120\"))) +\n  ease_aes(\"linear\")\n\n\n\n\n\n\n\n\n\nShow the code\npyr_reading &lt;- \n  ggplot(data = stu_SG_more,\n            aes(x = Avg_Reading, group=Time_HW_Reading)) +\n  # Reading + Male\n  geom_density(data = subset(stu_SG_more, Gender==\"Male\"),\n               aes(y=-..density..),\n               fill=\"#73b2c4\",\n               color=\"#73b2c4\",\n               alpha=0.5)+\n  # Reading + Female\n  geom_density(data = subset(stu_SG_more, Gender==\"Female\"),\n               aes(y=..density..),\n               fill=\"#f27279\",\n               colour=\"#f27279\",\n               alpha=0.5)+\n    guides(fill = guide_legend(reverse = TRUE)) +\n    theme_minimal() +\n    theme(legend.position = \"bottom\",\n          plot.title = element_text(size = 12, face = \"bold\"),\n          plot.subtitle = element_text(size = rel(0.8)),\n          plot.caption = element_text(size = rel(0.8)),\n          axis.text.y = element_text(size = rel(0.9)),\n          axis.text.x = element_blank(),\n          axis.title.x = element_blank(),\n          plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n          ) +\n  scale_x_continuous(breaks = seq(150,950,100),\n                     labels = seq(150,950,100)) +\n  scale_y_continuous(breaks = -1:1,\n                     labels = abs(-1:1)) +\n    labs(x = \"\", y = NULL, title = \"Left-tailed distribution for both genders observed where\\nless time is spent on reading homework.\",\n         subtitle = \"Time spent on homework: {current_frame} minutes\",\n         fill = \"Gender\") +\n        coord_flip(clip=\"off\")+\n  annotate(\n    geom = \"text\", \n    x = 780, \n    y = -0.003,\n    label = \"Male\",\n    color = \"#4472af\")+\n      \n    annotate(\n    geom = \"text\", \n    x = 780, \n    y = 0.003,\n    label = \"Female\",\n    color = \"#e0218a\")\n\n\npyr_reading +\n  transition_manual(factor(Time_HW_Reading, c(\"&lt;31\", \"31-60\", \"61-120\", \"&gt;120\"))) +\n  ease_aes(\"linear\")\n\n\n\n\n\n\n\n\n\nShow the code\npyr_science &lt;- \n  ggplot(data = stu_SG_more,\n            aes(x = Avg_Sci, group=Time_HW_Science)) +\n  # Science + Male\n  geom_density(data = subset(stu_SG_more, Gender==\"Male\"),\n               aes(y=-..density..),\n               fill=\"#73b2c4\",\n               color=\"#73b2c4\",\n               alpha=0.5)+\n  # Science + Female\n  geom_density(data = subset(stu_SG_more, Gender==\"Female\"),\n               aes(y=..density..),\n               fill=\"#f27279\",\n               colour=\"#f27279\",\n               alpha=0.5)+\n    guides(fill = guide_legend(reverse = TRUE)) +\n    theme_minimal() +\n    theme(legend.position = \"bottom\",\n          plot.title = element_markdown(size = 12, face = \"bold\"),\n          plot.subtitle = element_text(size = rel(0.8)),\n          plot.caption = element_text(size = rel(0.8)),\n          axis.text.y = element_text(size = rel(0.9)),\n          axis.text.x = element_blank(),\n          axis.title.x = element_blank(),\n          plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n          ) +\n  scale_x_continuous(breaks = seq(150,950,100),\n                     labels = seq(150,950,100)) +\n  scale_y_continuous(breaks = -1:1,\n                     labels = abs(-1:1)) +\n    labs(x = \"\", y = NULL, title = \"Higher Science scores across all durations by &lt;span style='color: #73b2c4;'&gt;Males&lt;/span&gt;.\",\n         subtitle = \"Time spent on homework: {current_frame} minutes\",\n         fill = \"Gender\") +\n        coord_flip(clip=\"off\")+\n  annotate(\n    geom = \"text\", \n    x = 780, \n    y = -0.003,\n    label = \"Male\",\n    color = \"#4472af\")+\n      \n    annotate(\n    geom = \"text\", \n    x = 780, \n    y = 0.003,\n    label = \"Female\",\n    color = \"#e0218a\")\n\n\npyr_science +\n  transition_manual(factor(Time_HW_Science, c(\"&lt;31\", \"31-60\", \"61-120\", \"&gt;120\"))) +\n  ease_aes(\"linear\")\n\n\n\n\n\n\n\n\n\nInsights\n\nDensity ridges are utilized to compare gender differences in relation to the amount of time spent on homework for each subject. This method emphasizes the ‘peaks’ in the distribution, offering valuable insights into how the distribution’s shape and variation between male and female students change with differing homework durations.\nThe plot reveals distinct trends in math scores based on homework duration for both genders. For male students, there is an upward trend in the peak scores as time spent on math homework increases, but this trend shows a decline when exceeding 120 minutes. In contrast, female students’ median scores tend to plateau after 31-60 minutes of math homework. Overall, the data indicates that male students generally achieve higher math scores than their female counterparts, regardless of the amount of time invested in math homework.\nReading scores display similarity across various homework durations. Interestingly, at lower homework times, the distribution tends to skew left.\nIn science, higher scores are consistently observed for males, regardless of the time spent on science homework."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-scores-against-student-teacher-ratio-and-school-type",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-scores-against-student-teacher-ratio-and-school-type",
    "title": "Take-home Exercise 1: Investigating Student Performance with Data Visualisations",
    "section": "6.3 Comparing scores against student-teacher ratio and school type",
    "text": "6.3 Comparing scores against student-teacher ratio and school type\nThe scatterplot with marginal density overlay facilitates the comparison of two numerical variables: subject scores and the log-transformed student-teacher ratio, across different school types (private-independent and public). The x-axis represents the math scores, and y-axis represents the log-transformed student-teacher ratio. Each point on the scatterplot represents a student response, with the colour coding distinguishing between private and public school students. Along the right side and top of the scatterplot, density plots represent the distributions of the student-teacher ratio and subject scores, respectively.\nThe plot’s design adjusts the transparency of the density plot and scatter points using alpha = 0.3 to allow for an unobstructed view of overlaps. This ensures a clear visualization of each group’s distribution while preserving the visibility of underlying patterns. Additionally, mean lines are included to benchmark the average values, aiding in the assessment of how individual data points relate to the overall group averages.\n\nMathReadingScience\n\n\n\n\nShow the code\nstu_SG_more &lt;- stu_SG_more %&gt;% \n  mutate(logstr = log(StuTeacher_ratio))\n\npmain &lt;- ggplot(stu_SG_more, \n                aes(x = Avg_Math, y = logstr, color = SchType)) +\n  geom_point(alpha=0.3) +\n  scale_color_manual(values = c(\"#7F948F\",\"#E1C8C4\"))+\ngeom_vline(aes(xintercept=mean_math),\n               color=\"#595DE5\", linewidth=0.8, linetype=\"dashed\") +\n  annotate(\n      \"text\", \n      x = 520, \n      y = 4.2,\n      label = paste(\"Mean Score =\\n\", mean_math),\n      color = \"#595DE5\",\n      size = 2.8\n    ) +\n  geom_hline(aes(yintercept=round(mean(stu_SG_more$logstr, na.rm=T),3)),\n               color=\"red\", linewidth=0.8, linetype=\"dashed\") +  \n  annotate(\n      \"text\", \n      x = 800, \n      y = 3.1,\n      label = paste(\"Mean Ratio =\\n\", round(mean(stu_SG_more$logstr, na.rm=T),3)),\n      color = \"red\",\n      size = 2.8\n    ) +\n      labs(x = \"Math\",\n       y = \"log(Student-\\nTeacher Ratio)\",\n       title = \"Math Scores and Student-Teacher Ratios by School Type\") +\n      theme(\n            axis.title.y = element_text(hjust=1, angle=0),\n            plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n  \n\n# Marginal densities along x axis\nxdens &lt;- axis_canvas(pmain, axis = \"x\") +\n  geom_density(data = stu_SG_more, aes(x = Avg_Math, fill = SchType),\n               alpha = 0.5, size = 0.2) +\n  scale_fill_manual(values = c(\"#7F948F\",\"#E1C8C4\"))\n\n# Marginal densities along y axis\nydens &lt;- axis_canvas(pmain, axis = \"y\", coord_flip = TRUE) +\n  geom_density(data = stu_SG_more, aes(x = logstr, fill = SchType),\n               alpha = 0.5, size = 0.2) +\n  coord_flip() +\n  scale_fill_manual(values = c(\"#7F948F\",\"#E1C8C4\"))\n\np1 &lt;- insert_xaxis_grob(pmain, xdens, grid::unit(.2, \"null\"), position = \"top\")\np2 &lt;- insert_yaxis_grob(p1, ydens, grid::unit(.2, \"null\"), position = \"right\")\nggdraw(p2)\n\n\n\n\n\n\n\n\n\nShow the code\npmainr &lt;- ggplot(stu_SG_more, \n                aes(x = Avg_Reading, y = logstr, color = SchType)) +\n  geom_point(alpha=0.3) +\n  scale_color_manual(values = c(\"#7F948F\",\"#E1C8C4\"))+\ngeom_vline(aes(xintercept=mean_reading),\n               color=\"#595DE5\", linewidth=0.8, linetype=\"dashed\") +\n  annotate(\n      \"text\", \n      x = mean_reading -80, \n      y = 4,\n      label = paste(\"Mean Score =\\n\", mean_reading),\n      color = \"#595DE5\",\n      size = 2.8\n    ) +\n  geom_hline(aes(yintercept=round(mean(stu_SG_more$logstr, na.rm=T),3)),\n               color=\"red\", linewidth=0.8, linetype=\"dashed\") +  \n  annotate(\n      \"text\", \n      x = 770, \n      y = 3,\n      label = paste(\"Mean Ratio =\\n\", round(mean(stu_SG_more$logstr, na.rm=T),3)),\n      color = \"red\",\n      size = 2.8\n    ) +\n      labs(x = \"Reading\",\n       y = \"log(Student-\\nTeacher Ratio)\",\n       title = \"Reading Scores and Student-Teacher Ratios by School Type\") +\n      theme(\n            axis.title.y = element_text(hjust=1, angle=0),\n            plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")) +\n    annotate(\n    geom = \"curve\", x = 690, y = 4, xend = 630, yend = 3.3, \n    curvature = .3, arrow = arrow(length = unit(2, \"mm\"))\n  ) +\n  annotate(geom = \"text\", x = 700, y = 4, label = \"higher concentration of\\nprivate school students\", hjust = \"left\", size= 2)  \n    \n  \n\n# Marginal densities along x axis\nxdensr &lt;- axis_canvas(pmain, axis = \"x\") +\n  geom_density(data = stu_SG_more, aes(x = Avg_Reading, fill = SchType),\n               alpha = 0.5, size = 0.2) +\n  scale_fill_manual(values = c(\"#7F948F\",\"#E1C8C4\"))\n\n# Marginal densities along y axis\n# Need to set coord_flip = TRUE, if you plan to use coord_flip()\nydensr &lt;- axis_canvas(pmain, axis = \"y\", coord_flip = TRUE) +\n  geom_density(data = stu_SG_more, aes(x = logstr, fill = SchType),\n               alpha = 0.5, size = 0.2) +\n  coord_flip() +\n  scale_fill_manual(values = c(\"#7F948F\",\"#E1C8C4\"))\n\np1r &lt;- insert_xaxis_grob(pmainr, xdensr, grid::unit(.2, \"null\"), position = \"top\")\np2r &lt;- insert_yaxis_grob(p1r, ydensr, grid::unit(.2, \"null\"), position = \"right\")\nggdraw(p2r)\n\n\n\n\n\n\n\n\n\nShow the code\npmains &lt;- ggplot(stu_SG_more, \n                aes(x = Avg_Sci, y = logstr, color = SchType)) +\n  geom_point(alpha=0.3) +\n  scale_color_manual(values = c(\"#7F948F\",\"#E1C8C4\"))+\ngeom_vline(aes(xintercept=mean_sci),\n               color=\"#595DE5\", linewidth=0.8, linetype=\"dashed\") +\n  annotate(\n      \"text\", \n      x = mean_sci -80, \n      y = 4,\n      label = paste(\"Mean Score =\\n\", mean_sci),\n      color = \"#595DE5\",\n      size = 2.8\n    ) +\n  geom_hline(aes(yintercept=round(mean(stu_SG_more$logstr, na.rm=T),3)),\n               color=\"red\", linewidth=0.8, linetype=\"dashed\") +  \n  annotate(\n      \"text\", \n      x = 770, \n      y = 3,\n      label = paste(\"Mean Ratio =\\n\", round(mean(stu_SG_more$logstr, na.rm=T),3)),\n      color = \"red\",\n      size = 2.8\n    ) +\n      labs(x = \"Science\",\n       y = \"log(Student-\\nTeacher Ratio)\",\n       title = \"Science Scores and Student-Teacher Ratios by School Type\") +\n      theme(\n            axis.title.y = element_text(hjust=1, angle=0),\n            plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")) +\n    annotate(\n    geom = \"curve\", x = 690, y = 4, xend = 630, yend = 3.3, \n    curvature = .3, arrow = arrow(length = unit(2, \"mm\"))\n  ) +\n  annotate(geom = \"text\", x = 700, y = 4, label = \"higher concentration of\\nprivate school students\", hjust = \"left\", size= 2)  \n  \n  \n\n# Marginal densities along x axis\nxdenss &lt;- axis_canvas(pmain, axis = \"x\") +\n  geom_density(data = stu_SG_more, aes(x = Avg_Sci, fill = SchType),\n               alpha = 0.5, size = 0.2) +\n  scale_fill_manual(values = c(\"#7F948F\",\"#E1C8C4\"))\n\n# Marginal densities along y axis\n# Need to set coord_flip = TRUE, if you plan to use coord_flip()\nydenss &lt;- axis_canvas(pmain, axis = \"y\", coord_flip = TRUE) +\n  geom_density(data = stu_SG_more, aes(x = logstr, fill = SchType),\n               alpha = 0.5, size = 0.2) +\n  coord_flip() +\n  scale_fill_manual(values = c(\"#7F948F\",\"#E1C8C4\"))\n\np1s &lt;- insert_xaxis_grob(pmains, xdenss, grid::unit(.2, \"null\"), position = \"top\")\np2s &lt;- insert_yaxis_grob(p1s, ydenss, grid::unit(.2, \"null\"), position = \"right\")\nggdraw(p2s)\n\n\n\n\n\n\n\n\n\nInsights\n\nThe unimodal distribution indicated by a single peak in the public schools’ student-teacher ratio suggests a uniformity within this group. In contrast, the multimodal density for private schools suggests the presence of distinct groups with different student-teacher ratios.\nScore distributions across the three subjects are broader among public school students, indicating greater variability in their scores.\nPrivate-Independent school students tend to have higher median Reading scores compared to public school students, while public school students seem to perform better in Math and Science.\nFor Reading and Science, a noticeable cluster of private school students (depicted in green) is present in the top rightmost quadrant. These students scored above the mean for these subjects and are associated with a higher student-teacher ratio.\nThere is no clear upward or downward trend visible in the scatterplot, suggesting that there may not be a strong correlation between the student-teacher ratio and math scores. However, a statistical analysis would be necessary to determine the existence and strength of any correlation."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-scores-with-parents-education-level-occupational-status",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-scores-with-parents-education-level-occupational-status",
    "title": "Take-home Exercise 1:",
    "section": "6.4 Comparing scores with parents education level & occupational status",
    "text": "6.4 Comparing scores with parents education level & occupational status\n\n6.4.1 Education Levels\n\n\nShow the code\n# Pivot parents education data longer\nparentsedu_long &lt;- \n  stu_SG_more %&gt;% \n  pivot_longer(cols = starts_with(\"Edu_\"),\n               names_to = \"parentsedu\",\n               names_prefix=\"Edu_\",\n               values_to=\"level\") \n\nmeans_parentsedu &lt;- \n  parentsedu_long %&gt;% \n  select(parentsedu, level, Avg_Math, Avg_Reading, Avg_Sci) %&gt;% \n  group_by(parentsedu, level) %&gt;% \n  summarise(mean_math = mean(Avg_Math),\n            mean_reading = mean(Avg_Reading),\n            mean_sci = mean(Avg_Sci),\n            .groups = 'drop')\n\n\n\n\nShow the code\np_parentsedu_m &lt;-\nggplot(parentsedu_long, \n       aes(x = Avg_Math, y = level,\n           fill = parentsedu,\n           color=parentsedu)) +\n  geom_density_ridges(\n    calc_ecdf = TRUE, \n  # Reduce space between between education levels \n    scale = 0.8,\n    alpha= 0.5,\n  rel_min_height = 0.01,\n  position = position_nudge(y=0.11)\n  ) +\n  # point for father's mean\n  geom_point(data = subset(means_parentsedu, parentsedu==\"Father\"),\n             aes(x = mean_math, \n                 y = level), \n             shape = 21, size = 3, colour = \"#73b2c4\", fill = \"#73b2c4\") +\n  # point for mother's \n  geom_point(data = subset(means_parentsedu, parentsedu==\"Mother\"),\n             aes(x = mean_math, \n                 y = level), shape = 23, size = 3, colour = \"#f27279\", fill = \"#f27279\", stroke = .5) +\n  scale_color_manual(name=\"Parent\",\n                        values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  labs(\n    x = \"Math\", \n  ) +\n  scale_y_discrete(expand = c(0, 0.1))+\n  guides(color=\"none\") +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.y = element_text(size = rel(0.9)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )  \n\np_parentsedu_r &lt;-\nggplot(parentsedu_long, \n       aes(x = Avg_Reading, y = level,\n           fill = parentsedu,\n           color=parentsedu)) +\n  geom_density_ridges(\n    calc_ecdf = TRUE, \n  # Reduce space between between education levels \n    scale = 0.8,\n    alpha= 0.5,\n  rel_min_height = 0.01,\n  position = position_nudge(y=0.11)\n  ) +\n  # point for father's mean\n  geom_point(data = subset(means_parentsedu, parentsedu==\"Father\"),\n             aes(x = mean_reading, \n                 y = level), \n             shape = 21, size = 3, colour = \"#73b2c4\", fill = \"#73b2c4\") +\n  # point for mother's \n  geom_point(data = subset(means_parentsedu, parentsedu==\"Mother\"),\n             aes(x = mean_reading, \n                 y = level), shape = 23, size = 3, colour = \"#f27279\", fill = \"#f27279\", stroke = .5) +\n  scale_color_manual(name=\"Parent\",\n                        values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  labs(\n    x = \"Reading\", \n  ) +\n  guides(color=\"none\") +\n  scale_y_discrete(expand = c(0, 0.1))+\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") ) +\n  annotate(\n    geom = \"curve\", x = 80, y = 2.0, xend = 280, yend = 2.35, \n    curvature = -.3, arrow = arrow(length = unit(2, \"mm\"))\n  ) +\n  annotate(geom = \"text\", x = 0.1, y = 1.6, label = \"Lower Reading scores\\nwhere their fathers'\\neducation level is\\nlow.\", hjust = \"left\", size= 2)  \n  \np_parentsedu_s &lt;-\nggplot(parentsedu_long, \n       aes(x = Avg_Sci, y = level,\n           fill = parentsedu,\n           color=parentsedu)) +\n  geom_density_ridges(\n    calc_ecdf = TRUE, \n  # Reduce space between between education levels \n    scale = 0.8,\n    alpha= 0.5,\n  rel_min_height = 0.01,\n  position = position_nudge(y=0.11)\n  ) +\n  # point for father's mean\n  geom_point(data = subset(means_parentsedu, parentsedu==\"Father\"),\n             aes(x = mean_sci, \n                 y = level), \n             shape = 21, size = 3, colour = \"#73b2c4\", fill = \"#73b2c4\") +\n  # point for mother's \n  geom_point(data = subset(means_parentsedu, parentsedu==\"Mother\"),\n             aes(x = mean_sci, \n                 y = level), shape = 23, size = 3, colour = \"#f27279\", fill = \"#f27279\", stroke = .5) +\n  scale_color_manual(name=\"Parent\",\n                        values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  labs(\n    x = \"Science\", \n  ) +\n  guides(color=\"none\") +\n  scale_y_discrete(expand = c(0, 0.1))+\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )   +\n  annotate(\n    geom = \"curve\", x = 100, y = 5.6\n    , xend = 440, yend = 5.65, \n    curvature = -.3, arrow = arrow(length = unit(2, \"mm\"))\n  ) +\n  annotate(geom = \"text\", x = 0.08, y = 5.4, label = \"Density plots almost\\noverlap completely.\", hjust = \"left\", size= 2)  \n\n(p_parentsedu_m + p_parentsedu_r + p_parentsedu_s) +\n  plot_layout(guides = \"collect\") +\n  plot_annotation(title = \"Higher scores scores with higher parental education levels,\\nsimilar distributions across father and mother education.\",\n                  theme=theme(plot.title = element_text(hjust = 0),\n                              plot.subtitle = element_markdown(hjust = 0),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))+\n  plot_layout(widths=c(1,1,1))\n\n\n\n\n\n\n\n6.4.2 Occupational Status\n\n# Pivot parents occupational status data longer\njobstatus_long &lt;- \n  stu_SG_more %&gt;% \n  pivot_longer(cols = starts_with(\"Occupation_Status_\"),\n               names_to = \"parent\",\n               names_prefix=\"Occupation_Status_\",\n               values_to=\"jobstatus\") \n\nmeans_parentsjobstat &lt;- \n  jobstatus_long %&gt;% \n  select(parent, jobstatus, Avg_Math, Avg_Reading, Avg_Sci) %&gt;% \n  group_by(parent, jobstatus) %&gt;% \n  summarise(mean_math = mean(Avg_Math),\n            mean_reading = mean(Avg_Reading),\n            mean_sci = mean(Avg_Sci),\n            .groups = 'drop')\n\n\n\nShow the code\np_parentsjs_m &lt;-\nggplot(jobstatus_long, \n       aes(x = Avg_Math, y = jobstatus,\n           fill = parent,\n           color=parent)) +\n  geom_density_ridges(\n    calc_ecdf = TRUE, \n  # Reduce space between between education levels \n    scale = 0.8,\n    alpha= 0.5,\n  rel_min_height = 0.01,\n  position = position_nudge(y=0.11)\n  ) +\n  # point for father's mean\n  geom_point(data = subset(means_parentsjobstat, parent==\"Father\"),\n             aes(x = mean_math, \n                 y = jobstatus), \n             shape = 21, size = 3, colour = \"#73b2c4\", fill = \"#73b2c4\") +\n  # point for mother's \n  geom_point(data = subset(means_parentsjobstat, parent==\"Mother\"),\n             aes(x = mean_math, \n                 y = jobstatus), shape = 23, size = 3, colour = \"#f27279\", fill = \"#f27279\", stroke = .5) +\n  scale_color_manual(name=\"Parent\",\n                        values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  labs(\n    x = \"Math\", \n  ) +\n  scale_y_discrete(expand = c(0, 0.1))+\n  guides(color=\"none\") +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.y = element_text(size = rel(0.9)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") ) \n    \n\np_parentsjs_r &lt;-\nggplot(jobstatus_long, \n       aes(x = Avg_Reading, y = jobstatus,\n           fill = parent,\n           color=parent)) +\n  geom_density_ridges(\n    calc_ecdf = TRUE, \n  # Reduce space between between education levels \n    scale = 0.8,\n    alpha= 0.5,\n  rel_min_height = 0.01,\n  position = position_nudge(y=0.11)\n  ) +\n  # point for father's mean\n  geom_point(data = subset(means_parentsjobstat, parent==\"Father\"),\n             aes(x = mean_reading, \n                 y = jobstatus), \n             shape = 21, size = 3, colour = \"#73b2c4\", fill = \"#73b2c4\") +\n  # point for mother's \n  geom_point(data = subset(means_parentsjobstat, parent==\"Mother\"),\n             aes(x = mean_reading, \n                 y = jobstatus), shape = 23, size = 3, colour = \"#f27279\", fill = \"#f27279\", stroke = .5) +\n  scale_color_manual(name=\"Parent\",\n                        values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  labs(\n    x = \"Reading\", \n  ) +\n  scale_y_discrete(expand = c(0, 0.1))+\n  guides(color=\"none\") +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") ) +\n  annotate(geom = \"text\", x = 0.08, y = 1.4, label = \"Density plots almost\\noverlap completely.\", hjust = \"left\", size= 2)  \n  \np_parentsjs_s &lt;-\nggplot(jobstatus_long, \n       aes(x = Avg_Sci, y = jobstatus,\n           fill = parent,\n           color=parent)) +\n  geom_density_ridges(\n    calc_ecdf = TRUE, \n  # Reduce space between between education levels \n    scale = 0.8,\n    alpha= 0.5,\n  rel_min_height = 0.01,\n  position = position_nudge(y=0.11)\n  ) +\n  # point for father's mean\n  geom_point(data = subset(means_parentsjobstat, parent==\"Father\"),\n             aes(x = mean_sci, \n                 y = jobstatus), \n             shape = 21, size = 3, colour = \"#73b2c4\", fill = \"#73b2c4\") +\n  # point for mother's \n  geom_point(data = subset(means_parentsjobstat, parent==\"Mother\"),\n             aes(x = mean_sci, \n                 y = jobstatus), shape = 23, size = 3, colour = \"#f27279\", fill = \"#f27279\", stroke = .5) +\n  scale_color_manual(name=\"Parent\",\n                        values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  labs(\n    x = \"Science\", \n  ) +\n  scale_y_discrete(expand = c(0, 0.1))+\n  guides(color=\"none\") +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") ) +\n  annotate(\n    geom = \"curve\", x = 280, y = 2.75\n    , xend = 470, yend = 2.80, \n    curvature = -.3, arrow = arrow(length = unit(2, \"mm\"))\n  ) +\n  annotate(geom = \"text\", x = 0.08, y = 2.6, label = \"Scores more\\nright-skewed for\\nstudents with\\nunemployed\\nfathers.\", hjust = \"left\", size= 2)  \n  \n\n(p_parentsjs_m + p_parentsjs_r + p_parentsjs_s) +\n  plot_layout(guides = \"collect\") +\n  plot_annotation(title = \"Higher scores when employed parents.\",\n  subtitle=\"Students with unemployed &lt;span style='color: #73b2c4;'&gt;fathers&lt;/span&gt; had better scores than those with unemployed &lt;span style='color: #f27279;'&gt;mothers&lt;/span&gt;.\",\n                  theme=theme(plot.title = element_markdown(hjust = 0),\n                              plot.subtitle = element_markdown(hjust = 0),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))+\n  plot_layout(widths=c(1,1,1))\n\n\n\n\n\n\nEditor’s Notes - Plots of raw data helps with “sanity checking” and identify things like missing data or outliers, or cast doubt over the appropriateness of particular models. - Plots of density to help you assess the overall shape of your data. - Plots of aggregate or inferential statistics for things you couldn’t reasonably be expected to visually estimate from the other plots, or estimate with enough precision for the tasks at hand.\n\nNotice how position_nudge() is used to make sure that the points, lines, and boxplots are side-by-side and not overlapping with each other."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-access-to-ict",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-access-to-ict",
    "title": "Take-home Exercise 1:",
    "section": "6.5 Comparing access to ICT",
    "text": "6.5 Comparing access to ICT\n\n\nShow the code\n# Math\nrcp_com_m &lt;- \n  ggplot(stu_SG_more, aes(x = Have_Comp, \n                          y = Avg_Math, \n                          fill = Have_Comp)) +\n  \n  stat_halfeye(aes(fill = Have_Comp,\n                         justification = ifelse(Have_Comp == \"No\", 1.2, 0),\n                          side = ifelse(Have_Comp == \"No\", \"left\", \"right\")),\n                   position = position_nudge(x = .1, y = 0), \n                   adjust = 1.2, \n                   .width=0,\n                   trim = FALSE, \n                   alpha = .5, \n                   point_colour = NA,\n                   orientation = )+\n  \n  geom_point(aes(x = Have_Comp, \n                 y = Avg_Math, \n                 colour = Have_Comp),\n             position = position_jitter(width = .05), \n             size = .25, \n             shape = 20)+\n  \n  geom_boxplot(aes(x = Have_Comp, \n                   y = Avg_Math, \n                   fill = Have_Comp),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .1, \n               colour = \"black\")+\n  scale_color_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  labs(\n    x = \"Computer\", \n  ) +\n  theme_minimal() +  \n  ylim(100, 920)+\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(size = rel(0.8)),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )   \n\nrcp_sw_m &lt;- \n  ggplot(stu_SG_more, aes(x = Have_EduSW, \n                          y = Avg_Math, \n                          fill = Have_EduSW)) +\n  \n  stat_halfeye(aes(fill = Have_EduSW,\n                         justification = ifelse(Have_EduSW == \"No\", 1.2, 0),\n                          side = ifelse(Have_EduSW == \"No\", \"left\", \"right\")),\n                   position = position_nudge(x = .1, y = 0), \n                   adjust = 1.2, \n                   .width=0,\n                   trim = FALSE, \n                   alpha = .5, \n                   point_colour = NA,\n                   orientation = )+\n  \n  geom_point(aes(x = Have_EduSW, \n                 y = Avg_Math, \n                 colour = Have_EduSW),\n             position = position_jitter(width = .05), \n             size = .25, \n             shape = 20)+\n  \n  geom_boxplot(aes(x = Have_EduSW, \n                   y = Avg_Math, \n                   fill = Have_EduSW),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .1, \n               colour = \"black\")+\n  scale_color_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  labs(\n    x = \"Educational Software\", \n  ) +\n  ylim(100, 920)+\n    theme_minimal() +  \n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )   \n\nrcp_int_m &lt;- \n  ggplot(stu_SG_more, aes(x = Have_Internet, \n                          y = Avg_Math, \n                          fill = Have_Internet)) +\n  \n  stat_halfeye(aes(fill = Have_Internet,\n                         justification = ifelse(Have_Internet == \"No\", 1.2, 0),\n                          side = ifelse(Have_Internet == \"No\", \"left\", \"right\")),\n                   position = position_nudge(x = .1, y = 0), \n                   adjust = 1.2, \n                   .width=0,\n                   trim = FALSE, \n                   alpha = .5, \n                   point_colour = NA,\n                   orientation = )+\n  \n  geom_point(aes(x = Have_Internet, \n                 y = Avg_Math, \n                 colour = Have_Internet),\n             position = position_jitter(width = .05), \n             size = .25, \n             shape = 20)+\n  \n  geom_boxplot(aes(x = Have_Internet, \n                   y = Avg_Math, \n                   fill = Have_Internet),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .1, \n               colour = \"black\")+\n  scale_color_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  labs(\n    x = \"Internet\", \n  ) +\n  ylim(100, 920)+\n    theme_minimal() +  \n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )   \n\nrcp_m &lt;-\nrcp_com_m + rcp_sw_m + rcp_int_m +\n  plot_layout(widths=c(1,1,1)) +\n  plot_annotation(title=\"Math\", \n                  theme=theme(plot.title = element_text(hjust = 0),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))\n\nrcp_m\n\n\n\n\n\n\n\nShow the code\n# Reading\nrcp_com_r &lt;- \n  ggplot(stu_SG_more, aes(x = Have_Comp, \n                          y = Avg_Reading, \n                          fill = Have_Comp)) +\n  \n  stat_halfeye(aes(fill = Have_Comp,\n                         justification = ifelse(Have_Comp == \"No\", 1.2, 0),\n                          side = ifelse(Have_Comp == \"No\", \"left\", \"right\")),\n                   position = position_nudge(x = .1, y = 0), \n                   adjust = 1.2, \n                   .width=0,\n                   trim = FALSE, \n                   alpha = .5, \n                   point_colour = NA,\n                   orientation = )+\n  \n  geom_point(aes(x = Have_Comp, \n                 y = Avg_Reading, \n                 colour = Have_Comp),\n             position = position_jitter(width = .05), \n             size = .25, \n             shape = 20)+\n  \n  geom_boxplot(aes(x = Have_Comp, \n                   y = Avg_Reading, \n                   fill = Have_Comp),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .1, \n               colour = \"black\")+\n  scale_color_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  labs(\n    x = \"Computer\", \n  ) +\n  ylim(100, 920)+\n    theme_minimal() +  \n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(size = rel(0.8)),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )   \n  \n\nrcp_sw_r &lt;- \n  ggplot(stu_SG_more, aes(x = Have_EduSW, \n                          y = Avg_Reading, \n                          fill = Have_EduSW)) +\n  \n  stat_halfeye(aes(fill = Have_EduSW,\n                         justification = ifelse(Have_EduSW == \"No\", 1.2, 0),\n                          side = ifelse(Have_EduSW == \"No\", \"left\", \"right\")),\n                   position = position_nudge(x = .1, y = 0), \n                   adjust = 1.2, \n                   .width=0,\n                   trim = FALSE, \n                   alpha = .5, \n                   point_colour = NA,\n                   orientation = )+\n  \n  geom_point(aes(x = Have_EduSW, \n                 y = Avg_Reading, \n                 colour = Have_EduSW),\n             position = position_jitter(width = .05), \n             size = .25, \n             shape = 20)+\n  \n  geom_boxplot(aes(x = Have_EduSW, \n                   y = Avg_Reading, \n                   fill = Have_EduSW),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .1, \n               colour = \"black\")+\n  scale_color_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  labs(\n    x = \"Educational Software\", \n  ) +\n  ylim(100, 920)+\n    theme_minimal() +  \n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )   \n  \n\nrcp_int_r &lt;- \n  ggplot(stu_SG_more, aes(x = Have_Internet, \n                          y = Avg_Reading, \n                          fill = Have_Internet)) +\n  \n  stat_halfeye(aes(fill = Have_Internet,\n                         justification = ifelse(Have_Internet == \"No\", 1.2, 0),\n                          side = ifelse(Have_Internet == \"No\", \"left\", \"right\")),\n                   position = position_nudge(x = .1, y = 0), \n                   adjust = 1.2, \n                   .width=0,\n                   trim = FALSE, \n                   alpha = .5, \n                   point_colour = NA,\n                   orientation = )+\n  \n  geom_point(aes(x = Have_Internet, \n                 y = Avg_Reading, \n                 colour = Have_Internet),\n             position = position_jitter(width = .05), \n             size = .25, \n             shape = 20)+\n  \n  geom_boxplot(aes(x = Have_Internet, \n                   y = Avg_Reading, \n                   fill = Have_Internet),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .1, \n               colour = \"black\")+\n  scale_color_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  labs(\n    x = \"Internet\", \n  ) +\n  ylim(100, 920)+\n    theme_minimal() +  \n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )   +\n  annotate(\n    geom = \"curve\", x = 0.3, y = 230, xend = 0.7, yend = 300, \n    curvature = -.3, arrow = arrow(length = unit(2, \"mm\"))\n  ) +\n  annotate(geom = \"text\", x =0.02, y = 185, label = \"Highly\\nleft-skewed\", hjust = \"left\", size= 3)  \n    \n\n\nrcp_r &lt;-\nrcp_com_r + rcp_sw_r + rcp_int_r +\n  plot_layout(widths=c(1,1,1)) +\n  plot_annotation(title=\"Reading\", \n                  theme=theme(plot.title = element_text(hjust = 0),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))\n\nrcp_r\n\n\n\n\n\n\n\nShow the code\n# Reading\nrcp_com_s &lt;- \n  ggplot(stu_SG_more, aes(x = Have_Comp, \n                          y = Avg_Sci, \n                          fill = Have_Comp)) +\n  \n  stat_halfeye(aes(fill = Have_Comp,\n                         justification = ifelse(Have_Comp == \"No\", 1.2, 0),\n                          side = ifelse(Have_Comp == \"No\", \"left\", \"right\")),\n                   position = position_nudge(x = .1, y = 0), \n                   adjust = 1.2, \n                   .width=0,\n                   trim = FALSE, \n                   alpha = .5, \n                   point_colour = NA,\n                   orientation = )+\n  \n  geom_point(aes(x = Have_Comp, \n                 y = Avg_Sci, \n                 colour = Have_Comp),\n             position = position_jitter(width = .05), \n             size = .25, \n             shape = 20)+\n  \n  geom_boxplot(aes(x = Have_Comp, \n                   y = Avg_Sci, \n                   fill = Have_Comp),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .1, \n               colour = \"black\")+\n  scale_color_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  labs(\n    x = \"Computer\", \n  ) +\n  ylim(100, 920)+\n    theme_minimal() +  \n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(size = rel(0.8)),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )   \n  \n\nrcp_sw_s &lt;- \n  ggplot(stu_SG_more, aes(x = Have_EduSW, \n                          y = Avg_Sci, \n                          fill = Have_EduSW)) +\n  \n  stat_halfeye(aes(fill = Have_EduSW,\n                         justification = ifelse(Have_EduSW == \"No\", 1.2, 0),\n                          side = ifelse(Have_EduSW == \"No\", \"left\", \"right\")),\n                   position = position_nudge(x = .1, y = 0), \n                   adjust = 1.2, \n                   .width=0,\n                   trim = FALSE, \n                   alpha = .5, \n                   point_colour = NA,\n                   orientation = )+\n  \n  geom_point(aes(x = Have_EduSW, \n                 y = Avg_Sci, \n                 colour = Have_EduSW),\n             position = position_jitter(width = .05), \n             size = .25, \n             shape = 20)+\n  \n  geom_boxplot(aes(x = Have_EduSW, \n                   y = Avg_Sci, \n                   fill = Have_EduSW),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .1, \n               colour = \"black\")+\n  scale_color_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  labs(\n    x = \"Educational Software\", \n  ) +\n  ylim(100, 920)+\n    theme_minimal() +  \n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )   \n  \n\nrcp_int_s &lt;- \n  ggplot(stu_SG_more, aes(x = Have_Internet, \n                          y = Avg_Sci, \n                          fill = Have_Internet)) +\n  \n  stat_halfeye(aes(fill = Have_Internet,\n                         justification = ifelse(Have_Internet == \"No\", 1.2, 0),\n                          side = ifelse(Have_Internet == \"No\", \"left\", \"right\")),\n                   position = position_nudge(x = .1, y = 0), \n                   adjust = 1.2, \n                   .width=0,\n                   trim = FALSE, \n                   alpha = .5, \n                   point_colour = NA,\n                   orientation = )+\n  \n  geom_point(aes(x = Have_Internet, \n                 y = Avg_Sci, \n                 colour = Have_Internet),\n             position = position_jitter(width = .05), \n             size = .25, \n             shape = 20)+\n  \n  geom_boxplot(aes(x = Have_Internet, \n                   y = Avg_Sci, \n                   fill = Have_Internet),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .1, \n               colour = \"black\")+\n  scale_color_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  labs(\n    x = \"Internet\", \n  ) +\n  ylim(100, 920)+\n    theme_minimal() +  \n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )   \n\n\nrcp_s &lt;-\nrcp_com_s + rcp_sw_s + rcp_int_s +\n  plot_layout(widths=c(1,1,1)) +\n  plot_annotation(title=\"Science\", \n                  theme=theme(plot.title = element_text(hjust = 0),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))\n\nrcp_s\n\n\n\n\n\n\nObservations"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#immigration",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#immigration",
    "title": "Take-home Exercise 1:",
    "section": "6.6 Immigration",
    "text": "6.6 Immigration\n\n\nShow the code\nimmig_m &lt;-\nggplot(stu_SG_more, aes(x = Immigration_Status, \n                        y = Avg_Math, \n                        color = Immigration_Status)) +\n    coord_flip() +\n  geom_jitter(size = 2, \n              alpha = 0.25, \n              width = 0.2) +\n  stat_summary(color=\"#595DE5\",\n               fun = \"median\", \n               geom = \"point\", \n               size = 3, \n               alpha = 0.8)  +\n  scale_y_continuous(\n    breaks = scales::pretty_breaks(n = 5)\n  ) +  \n  geom_hline(aes(yintercept = mean_math), \n             linewidth=0.6,\n             linetype=\"dashed\",\n             color = \"red\")+\n  annotate(\n      \"text\", \n      x = 3.5, \n      y = 690,\n      label = paste(\"Mean =\\n\", round(mean_math, 3)),\n      color = \"red\",\n      size = 3\n    ) +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n          plot.title = element_markdown(size = 12, face = \"bold\"),\n          plot.subtitle = element_text(size = rel(0.8)),\n          plot.caption = element_text(size = rel(0.8)),\n          axis.text.y = element_text(size = rel(0.9)),\n          axis.text.x = element_text(size = rel(0.9)),\n          axis.title.x = element_text(size = rel(0.8)),\n          axis.title.y = element_text(size = rel(0.8)),\n          axis.ticks.y = element_blank(),\n          panel.grid = element_blank(),\n          axis.line.x=element_line(),\n          plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n          ) +\n  guides(color = \"none\", fill = \"none\") + \n  scale_color_manual(values=c(\"#f27279\", \"#f7af7a\", \"#73b2c4\")) +\n  labs(x = NULL , y = \"Math\", title = \"\")\n\nimmig_r &lt;-\nggplot(stu_SG_more, aes(x = Immigration_Status, \n                        y = Avg_Reading, \n                        color = Immigration_Status)) +\n    coord_flip() +\n  geom_jitter(size = 2, \n              alpha = 0.25, \n              width = 0.2) +\n  stat_summary(color=\"#595DE5\",\n               fun = \"median\", \n               geom = \"point\", \n               size = 3, \n               alpha = 0.8)  +\n  scale_y_continuous(\n    breaks = scales::pretty_breaks(n = 5)\n  ) +  \n  geom_hline(aes(yintercept = mean_reading), \n             linewidth=0.6,\n             linetype=\"dashed\",\n             color = \"red\")+\n  annotate(\n      \"text\", \n      x = 3.5, \n      y = 690,\n      label = paste(\"Mean =\\n\", round(mean_reading, 3)),\n      color = \"red\",\n      size = 3\n    ) +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n          plot.title = element_markdown(size = 12, face = \"bold\"),\n          plot.subtitle = element_text(size = rel(0.8)),\n          plot.caption = element_text(size = rel(0.8)),\n          axis.text.y = element_blank(),\n          axis.text.x = element_text(size = rel(0.9)),\n          axis.title.x = element_text(size = rel(0.8)),\n          axis.title.y = element_text(size = rel(0.8)),\n          axis.ticks.y = element_blank(),\n          panel.grid = element_blank(),\n          axis.line.x=element_line(),\n          plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n          ) +\n  guides(color = \"none\", fill = \"none\") + \n  scale_color_manual(values=c(\"#f27279\", \"#f7af7a\", \"#73b2c4\")) +\n  labs(x = NULL , y = \"Reading\", title = \"\")\n\nimmig_s &lt;-\nggplot(stu_SG_more, aes(x = Immigration_Status, \n                        y = Avg_Sci, \n                        color = Immigration_Status)) +\n    coord_flip() +\n  geom_jitter(size = 2, \n              alpha = 0.25, \n              width = 0.2) +\n  stat_summary(color=\"#595DE5\",\n               fun = \"median\", \n               geom = \"point\", \n               size = 3, \n               alpha = 0.8)  +\n  scale_y_continuous(\n    breaks = scales::pretty_breaks(n = 5)\n  ) +  \n  geom_hline(aes(yintercept = mean_sci), \n             linewidth=0.6,\n             linetype=\"dashed\",\n             color = \"red\")+\n  annotate(\n      \"text\", \n      x = 3.5, \n      y = 690,\n      label = paste(\"Mean =\\n\", round(mean_sci, 3)),\n      color = \"red\",\n      size = 3\n    ) +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n          plot.title = element_markdown(size = 12, face = \"bold\"),\n          plot.subtitle = element_text(size = rel(0.8)),\n          plot.caption = element_text(size = rel(0.8)),\n          axis.text.y = element_blank(),\n          axis.text.x = element_text(size = rel(0.9)),\n          axis.title.x = element_text(size = rel(0.8)),\n          axis.title.y = element_text(size = rel(0.8)),\n          axis.ticks.y = element_blank(),\n          panel.grid = element_blank(),\n          axis.line.x=element_line(),\n          plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n          ) +\n  guides(color = \"none\", fill = \"none\") + \n  scale_color_manual(values=c(\"#f27279\", \"#f7af7a\", \"#73b2c4\")) +\n  labs(x = NULL , y = \"Science\", title = \"\")\n\n(immig_m | immig_r | immig_s) +\n    plot_annotation(title=\"Higher scores from &lt;span style='color: #f7af7a;'&gt;Second-gen immigrants&lt;/span&gt; across all subjects.\", \n                  theme=theme(plot.title = element_markdown(hjust = 0),\n                              plot.subtitle = element_markdown(hjust = 0),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#subject-performancescores",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#subject-performancescores",
    "title": "Take-home Exercise 1:",
    "section": "5.1 Subject Performance/Scores",
    "text": "5.1 Subject Performance/Scores\nNote that the axis limits are consistent across the three subjects to facilitate comparison. This ensures that when a user navigates between various tabs, the scales remain identical. This uniformity in scale is crucial as it allows for more accurate and straightforward comparison. Users can easily compare data across different subjects without the need to adjust mentally for variation in scale.\n\nMathReadingScience\n\n\n\n\nShow the code\n# Calculating the mean, median, min and max\nmean_math &lt;- round(mean(stu_SG_more$Avg_Math),0)\nmedian_math &lt;- round(median(stu_SG_more$Avg_Math),0)\nmin_math &lt;- round(min(stu_SG_more$Avg_Math),0)\nmax_math &lt;- round(max(stu_SG_more$Avg_Math),0)\nleftwhisk_math &lt;- round(quantile(stu_SG_more$Avg_Math, probs = .25)-1.5*IQR(stu_SG_more$Avg_Math),0)\n\n# Histogram\nhist_math &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(x = Avg_Math)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#c7c8cc\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    \n    # Set same limits for both plots to ensure justification\n    limits = c(150,950), \n  ) + \n  geom_vline(\n    aes(xintercept = median_math),\n    colour=\"#595DE5\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 660, \n    y = 870,\n    label = paste0(\"Median = \", median_math),\n    color=\"#595DE5\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean_math),\n    colour=\"#e0218a\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 535, \n    y = 870,\n    label = paste0(\"Mean = \", mean_math),\n    color=\"#e0218a\"\n  ) +  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n# Boxplot\nbox_math &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(y = Avg_Math, x=\"\")\n  ) + \n  geom_boxplot(\n    fill=\"#c7c8cc\",\n    outlier.colour=\"#d18a7d\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = '#e0218a',\n               size=4) +\n  coord_flip() + \n  \n    #Annotate with amounts to show range\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = min_math,\n    label = paste0(min_math),\n    color = \"#d18a7d\"\n  ) + \n   annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = leftwhisk_math,\n    label = paste0(leftwhisk_math),\n    color = \"#34414E\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = max_math,\n    label = paste0(max_math),\n    color = \"#34414E\"\n  ) + \n  \n  labs(\n    title = \"Symmetrical Distribution of Average Math Scores\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(150,950), \n  ) +\n  \n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\nhbox_math &lt;- (box_math / hist_math) + \n        plot_layout(heights = c(1, 3.5)) #&lt; Scale layout to keep boxplot height shorter\n\nhbox_math & theme(plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\nShow the code\n# Calculating the mean, median, min and max\nmean_reading &lt;- round(mean(stu_SG_more$Avg_Reading),0)\nmedian_reading &lt;- round(median(stu_SG_more$Avg_Reading),0)\nmin_reading &lt;- round(min(stu_SG_more$Avg_Reading),0)\nmax_reading &lt;- round(max(stu_SG_more$Avg_Reading),0)\nleftwhisk_reading &lt;- round(quantile(stu_SG_more$Avg_Reading, probs = .25)-1.5*IQR(stu_SG_more$Avg_Reading),0)\n\n# Histogram\nhist_reading &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(x = Avg_Reading)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#c7c8cc\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    \n    # Set same limits for both plots to ensure justification\n    limits = c(150,950), \n  ) + \n  geom_vline(\n    aes(xintercept = median_reading),\n    colour=\"#595DE5\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = median_reading+80, \n    y = 920,\n    label = paste0(\"Median = \", median_reading),\n    color=\"#595DE5\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean_reading),\n    colour=\"#e0218a\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = mean_reading-50, \n    y = 920,\n    label = paste0(\"Mean = \", mean_reading),\n    color=\"#e0218a\"\n  ) +  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n# Boxplot\nbox_reading &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(y = Avg_Reading, x=\"\")\n  ) + \n  geom_boxplot(\n    fill=\"#c7c8cc\",\n    outlier.colour=\"#d18a7d\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = '#e0218a',\n               size=4) +\n  coord_flip() + \n  \n    #Annotate with amounts to show range\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = min_reading,\n    label = paste0(min_reading),\n    color = \"#d18a7d\"\n  ) + \n   annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = leftwhisk_reading,\n    label = paste0(leftwhisk_reading),\n    color = \"#34414E\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = max_reading,\n    label = paste0(max_reading),\n    color = \"#34414E\"\n  ) + \n  \n  labs(\n    title = \"Symmetrical Distribution of Average Reading Scores\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(150,950), \n  ) +\n  \n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\nhbox_reading &lt;- (box_reading / hist_reading) + \n        plot_layout(heights = c(1, 3.5)) #&lt; Scale layout to keep boxplot height shorter\n\nhbox_reading & theme(plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\nShow the code\n# Calculating the mean, median, min and max\nmean_sci &lt;- round(mean(stu_SG_more$Avg_Sci),0)\nmedian_sci &lt;- round(median(stu_SG_more$Avg_Sci),0)\nmin_sci &lt;- round(min(stu_SG_more$Avg_Sci),0)\nmax_sci &lt;- round(max(stu_SG_more$Avg_Sci),0)\nleftwhisk_sci &lt;- round(quantile(stu_SG_more$Avg_Sci, probs = .25)-1.5*IQR(stu_SG_more$Avg_Sci),0)\n\n# Histogram\nhist_sci &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(x = Avg_Sci)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#c7c8cc\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    \n    # Set same limits for both plots to ensure justification\n    limits = c(150,950), \n  ) + \n  geom_vline(\n    aes(xintercept = median_sci),\n    colour=\"#595DE5\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = median_sci+70, \n    y = 940,\n    label = paste0(\"Median = \", median_sci),\n    color=\"#595DE5\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean_sci),\n    colour=\"#e0218a\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = mean_sci-50, \n    y = 940,\n    label = paste0(\"Mean = \", mean_sci),\n    color=\"#e0218a\"\n  ) +  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n# Boxplot\nbox_sci &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(y = Avg_Sci, x=\"\")\n  ) + \n  geom_boxplot(\n    fill=\"#c7c8cc\",\n    outlier.colour=\"#d18a7d\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = '#e0218a',\n               size=4) +\n  coord_flip() + \n  \n  #Annotate with amounts to show range\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = min_sci,\n    label = paste0(min_sci),\n    color = \"#d18a7d\"\n  ) + \n   annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = leftwhisk_sci,\n    label = paste0(leftwhisk_sci),\n    color = \"#34414E\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = max_sci,\n    label = paste0(max_sci),\n    color = \"#34414E\"\n  ) + \n  \n  labs(\n    title = \"Symmetrical Distribution of Average Science Scores\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(150,950), \n  ) +\n  \n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\nhbox_sci &lt;- (box_sci / hist_sci) + \n        plot_layout(heights = c(1, 3.5)) #&lt; Scale layout to keep boxplot height shorter\n\nhbox_sci & theme(plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\nObservations\n\nMath has the highest mean and median scores amongst the 3 subjects.\nDistribution of math, reading and science scores based on the average plausible values seem to be quite symmetrically distributed. Mean and median for each subject are close together with most values spreading around the mean line.\nWe note the presence of outliers on the left end of the whisker from the boxplots. This is particularly prominent for Reading scores."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#target-variables-subject-performance",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#target-variables-subject-performance",
    "title": "Take-home Exercise 1: Investigating Student Performance with Data Visualisations",
    "section": "5.1 Target Variables: Subject Performance",
    "text": "5.1 Target Variables: Subject Performance\nWhen exploring new data, one of the first steps is to look at the distributions of the target variables. In this case, our targets are the scores for Science, Reading, and Math. A histogram wih a boxplot can show how the scores are distribution among the students.\nNote that the axis limits are consistent across the three subjects to facilitate comparison. This ensures that when a user navigates between various tabs, the scales remain identical. This uniformity in scale is crucial as it allows for more accurate and straightforward comparison. Users can easily compare data across different subjects without the need to adjust mentally for variation in scale.\n\nMathReadingScience\n\n\n\n\nShow the code\n# Sets theme for the rest of the plots\npacman::p_load(urbnthemes)\nset_urbn_defaults(style = \"print\")\n\n# Calculating the mean, median, min and max\nmean_math &lt;- round(mean(stu_SG_more$Avg_Math),0)\nmedian_math &lt;- round(median(stu_SG_more$Avg_Math),0)\nmin_math &lt;- round(min(stu_SG_more$Avg_Math),0)\nmax_math &lt;- round(max(stu_SG_more$Avg_Math),0)\nleftwhisk_math &lt;- round(quantile(stu_SG_more$Avg_Math, probs = .25)-1.5*IQR(stu_SG_more$Avg_Math),0)\n\n# Histogram\nhist_math &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(x = Avg_Math)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#c7c8cc\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    \n    # Set same limits for both plots for consistency\n    limits = c(150,950), \n  ) + \n  geom_vline(\n    aes(xintercept = median_math),\n    colour=\"#595DE5\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 660, \n    y = 870,\n    label = paste0(\"Median = \", median_math),\n    color=\"#595DE5\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean_math),\n    colour=\"#e0218a\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 535, \n    y = 870,\n    label = paste0(\"Mean = \", mean_math),\n    color=\"#e0218a\"\n  ) +  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n# Boxplot\nbox_math &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(y = Avg_Math, x=\"\")\n  ) + \n  geom_boxplot(\n    fill=\"#c7c8cc\",\n    outlier.colour=\"#d18a7d\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = '#e0218a',\n               size=4) +\n  coord_flip() + \n  \n    #Annotate with amounts to show range\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = min_math,\n    label = paste0(min_math),\n    color = \"#d18a7d\"\n  ) + \n   annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = leftwhisk_math,\n    label = paste0(leftwhisk_math),\n    color = \"#34414E\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = max_math,\n    label = paste0(max_math),\n    color = \"#34414E\"\n  ) + \n  \n  labs(\n    title = \"Symmetrical Distribution of Average Math Scores\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(150,950), \n  ) +\n  \n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\nhbox_math &lt;- (box_math / hist_math) + \n        plot_layout(heights = c(1, 3.5)) #&lt; Scale layout to keep boxplot height shorter\n\nhbox_math & theme(plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\nShow the code\n# Calculating the mean, median, min and max\nmean_reading &lt;- round(mean(stu_SG_more$Avg_Reading),0)\nmedian_reading &lt;- round(median(stu_SG_more$Avg_Reading),0)\nmin_reading &lt;- round(min(stu_SG_more$Avg_Reading),0)\nmax_reading &lt;- round(max(stu_SG_more$Avg_Reading),0)\nleftwhisk_reading &lt;- round(quantile(stu_SG_more$Avg_Reading, probs = .25)-1.5*IQR(stu_SG_more$Avg_Reading),0)\n\n# Histogram\nhist_reading &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(x = Avg_Reading)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#c7c8cc\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    \n    # Set same limits for both plots for consistency\n    limits = c(150,950), \n  ) + \n  geom_vline(\n    aes(xintercept = median_reading),\n    colour=\"#595DE5\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = median_reading+80, \n    y = 920,\n    label = paste0(\"Median = \", median_reading),\n    color=\"#595DE5\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean_reading),\n    colour=\"#e0218a\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = mean_reading-50, \n    y = 920,\n    label = paste0(\"Mean = \", mean_reading),\n    color=\"#e0218a\"\n  ) +  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n# Boxplot\nbox_reading &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(y = Avg_Reading, x=\"\")\n  ) + \n  geom_boxplot(\n    fill=\"#c7c8cc\",\n    outlier.colour=\"#d18a7d\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = '#e0218a',\n               size=4) +\n  coord_flip() + \n  \n    #Annotate with amounts to show range\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = min_reading,\n    label = paste0(min_reading),\n    color = \"#d18a7d\"\n  ) + \n   annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = leftwhisk_reading,\n    label = paste0(leftwhisk_reading),\n    color = \"#34414E\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = max_reading,\n    label = paste0(max_reading),\n    color = \"#34414E\"\n  ) + \n  \n  labs(\n    title = \"Symmetrical Distribution of Average Reading Scores\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(150,950), \n  ) +\n  \n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\nhbox_reading &lt;- (box_reading / hist_reading) + \n        plot_layout(heights = c(1, 3.5)) #&lt; Scale layout to keep boxplot height shorter\n\nhbox_reading & theme(plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\nShow the code\n# Calculating the mean, median, min and max\nmean_sci &lt;- round(mean(stu_SG_more$Avg_Sci),0)\nmedian_sci &lt;- round(median(stu_SG_more$Avg_Sci),0)\nmin_sci &lt;- round(min(stu_SG_more$Avg_Sci),0)\nmax_sci &lt;- round(max(stu_SG_more$Avg_Sci),0)\nleftwhisk_sci &lt;- round(quantile(stu_SG_more$Avg_Sci, probs = .25)-1.5*IQR(stu_SG_more$Avg_Sci),0)\n\n# Histogram\nhist_sci &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(x = Avg_Sci)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#c7c8cc\"\n  ) +\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n    \n    # Set same limits for both plots for consistency\n    limits = c(150,950), \n  ) + \n  geom_vline(\n    aes(xintercept = median_sci),\n    colour=\"#595DE5\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = median_sci+70, \n    y = 940,\n    label = paste0(\"Median = \", median_sci),\n    color=\"#595DE5\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean_sci),\n    colour=\"#e0218a\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = mean_sci-50, \n    y = 940,\n    label = paste0(\"Mean = \", mean_sci),\n    color=\"#e0218a\"\n  ) +  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n# Boxplot\nbox_sci &lt;- \n  ggplot(\n    stu_SG_more, \n    aes(y = Avg_Sci, x=\"\")\n  ) + \n  geom_boxplot(\n    fill=\"#c7c8cc\",\n    outlier.colour=\"#d18a7d\", \n    outlier.shape=16,\n    outlier.size=1, \n    notch=FALSE\n  ) + \n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = '#e0218a',\n               size=4) +\n  coord_flip() + \n  \n  #Annotate with amounts to show range\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = min_sci,\n    label = paste0(min_sci),\n    color = \"#d18a7d\"\n  ) + \n   annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = leftwhisk_sci,\n    label = paste0(leftwhisk_sci),\n    color = \"#34414E\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0.5, \n    y = max_sci,\n    label = paste0(max_sci),\n    color = \"#34414E\"\n  ) + \n  \n  labs(\n    title = \"Symmetrical Distribution of Average Science Scores\",\n     y = \"\", \n    x = \"\"\n  ) + \n   scale_y_continuous(\n    limits = c(150,950), \n  ) +\n  \n  stat_boxplot(\n    geom=\"errorbar\", \n    width=0.5\n  ) + \n  theme_minimal() +\n  theme(\n    axis.text = element_blank(), \n    axis.ticks = element_blank(),\n    panel.grid.major = element_blank(),\n     plot.background = element_rect(\n       fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\nhbox_sci &lt;- (box_sci / hist_sci) + \n        plot_layout(heights = c(1, 3.5)) #&lt; Scale layout to keep boxplot height shorter\n\nhbox_sci & theme(plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-scores-with-socioeconomic-status",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-scores-with-socioeconomic-status",
    "title": "Take-home Exercise 1: Investigating Student Performance with Data Visualisations",
    "section": "6.4 Comparing scores with socioeconomic status",
    "text": "6.4 Comparing scores with socioeconomic status\nThe next two visualizations utilize stacked density plots (again!) to explore and compare the influence of each parent’s education level and occupational status. Beneath each density plot, a geom_point layer is added, which provides a clear indication of the disparity between the two groups’ mean scores. This point representation serves as a precise reference for comparing the central tendencies of the distributions, highlighting whether one parent’s educational or occupational background tends to be associated with higher or lower mean scores.\n\n6.4.1 Education Levels\n\n\nShow the code\n# Pivot parents education data longer\nparentsedu_long &lt;- \n  stu_SG_more %&gt;% \n  pivot_longer(cols = starts_with(\"Edu_\"),\n               names_to = \"parentsedu\",\n               names_prefix=\"Edu_\",\n               values_to=\"level\") \n\n# Calculate Mean score by parent and educational level and save in new dataframe\nmeans_parentsedu &lt;- \n  parentsedu_long %&gt;% \n  select(parentsedu, level, Avg_Math, Avg_Reading, Avg_Sci) %&gt;% \n  group_by(parentsedu, level) %&gt;% \n  summarise(mean_math = mean(Avg_Math),\n            mean_reading = mean(Avg_Reading),\n            mean_sci = mean(Avg_Sci),\n            .groups = 'drop')\n\n\np_parentsedu_m &lt;-\nggplot(parentsedu_long, \n       aes(x = Avg_Math, y = level,\n           fill = parentsedu,\n           color=parentsedu)) +\n  geom_density_ridges(\n    calc_ecdf = TRUE, \n    scale = 0.8,\n    alpha= 0.3,\n  rel_min_height = 0.01,\n  position = position_nudge(y=0.11)\n  ) +\n  # point for father's mean\n  geom_point(data = subset(means_parentsedu, parentsedu==\"Father\"),\n             aes(x = mean_math, \n                 y = level),\n             alpha=0.4,\n             shape = 21, size = 3, colour = \"#73b2c4\", fill = \"#73b2c4\") +\n  # point for mother's \n  geom_point(data = subset(means_parentsedu, parentsedu==\"Mother\"),\n             aes(x = mean_math, \n                 y = level), \n             alpha=0.4, \n             shape = 23, size = 3, colour = \"#f27279\", fill = \"#f27279\", stroke = .5) +\n  scale_color_manual(name=\"Parent\",\n                        values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  labs(\n    x = \"Math\", \n  ) +\n  scale_y_discrete(expand = c(0, 0.1))+\n  guides(color=\"none\") +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.y = element_text(size = rel(0.9)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )  \n\np_parentsedu_r &lt;-\nggplot(parentsedu_long, \n       aes(x = Avg_Reading, y = level,\n           fill = parentsedu,\n           color=parentsedu)) +\n  geom_density_ridges(\n    calc_ecdf = TRUE, \n    scale = 0.8,\n    alpha= 0.3,\n  rel_min_height = 0.01,\n  position = position_nudge(y=0.11)\n  ) +\n  # point for father's mean\n  geom_point(data = subset(means_parentsedu, parentsedu==\"Father\"),\n             aes(x = mean_reading, \n                 y = level), \n             alpha=0.4,\n             shape = 21, size = 3, colour = \"#73b2c4\", fill = \"#73b2c4\") +\n  # point for mother's \n  geom_point(data = subset(means_parentsedu, parentsedu==\"Mother\"),\n             aes(x = mean_reading, \n                 y = level), \n             alpha=0.4,\n             shape = 23, size = 3, colour = \"#f27279\", fill = \"#f27279\", stroke = .5) +\n  scale_color_manual(name=\"Parent\",\n                        values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  labs(\n    x = \"Reading\", \n  ) +\n  guides(color=\"none\") +\n  scale_y_discrete(expand = c(0, 0.1))+\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") ) +\n  annotate(\n    geom = \"curve\", x = 80, y = 2.0, xend = 280, yend = 2.35, \n    curvature = -.3, arrow = arrow(length = unit(2, \"mm\"))\n  ) +\n  annotate(geom = \"text\", x = 0.1, y = 1.6, label = \"Lower Reading scores\\nwhere their fathers'\\neducation level is\\nlow.\", hjust = \"left\", size= 2)  \n  \np_parentsedu_s &lt;-\nggplot(parentsedu_long, \n       aes(x = Avg_Sci, y = level,\n           fill = parentsedu,\n           color=parentsedu)) +\n  geom_density_ridges(\n    calc_ecdf = TRUE, \n    scale = 0.8,\n    alpha= 0.3,\n  rel_min_height = 0.01,\n  position = position_nudge(y=0.11)\n  ) +\n  # point for father's mean\n  geom_point(data = subset(means_parentsedu, parentsedu==\"Father\"),\n             aes(x = mean_sci, \n                 y = level), \n             alpha=0.4,\n             shape = 21, size = 3, colour = \"#73b2c4\", fill = \"#73b2c4\") +\n  # point for mother's \n  geom_point(data = subset(means_parentsedu, parentsedu==\"Mother\"),\n             aes(x = mean_sci, \n                 y = level), \n             alpha=0.4,\n             shape = 23, size = 3, colour = \"#f27279\", fill = \"#f27279\", stroke = .5) +\n  scale_color_manual(name=\"Parent\",\n                        values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  labs(\n    x = \"Science\", \n  ) +\n  guides(color=\"none\") +\n  scale_y_discrete(expand = c(0, 0.1))+\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )   +\n  annotate(\n    geom = \"curve\", x = 100, y = 5.6\n    , xend = 440, yend = 5.65, \n    curvature = -.3, arrow = arrow(length = unit(2, \"mm\"))\n  ) +\n  annotate(geom = \"text\", x = 0.08, y = 5.4, label = \"Density plots almost\\noverlap completely.\", hjust = \"left\", size= 2)  \n\n(p_parentsedu_m + p_parentsedu_r + p_parentsedu_s) +\n  plot_layout(guides = \"collect\") +\n  plot_annotation(title = \"Higher scores scores with higher parental education levels, similar distributions&lt;br&gt;across &lt;span style='color: #73b2c4;'&gt;fathers'&lt;/span&gt; and &lt;span style='color: #f27279;'&gt;mothers&lt;/span&gt; education.\",\n                  theme=theme(plot.title = element_markdown(hjust = 0),\n                              plot.subtitle = element_markdown(hjust = 0),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))+\n  plot_layout(widths=c(1,1,1))\n\n\n\n\n\n\nInsights\n\nGenerally, subject scores improve with increased parental educational attainment. When parents reach higher education levels, the score distributions converge, as evidenced by the nearly overlapping density plots for either parent’s educational achievement.\nHowever, at lower levels of parental education, disparities become more evident. The density plot associated with the father’s education level (indicated in blue) skews to the right, distinctively peering through the overlay. This is corroborated by the leftward shift of the blue points below the curve, signifying that the average scores are lower than those corresponding to the same educational level of the mother. This pattern suggests that a father’s lower educational attainment might have a more pronounced inverse impact on student outcomes.\n\n\n\n\n6.4.2 Occupational Status\n\n\nShow the code\n# Pivot parents occupational status data longer\njobstatus_long &lt;- \n  stu_SG_more %&gt;% \n  pivot_longer(cols = starts_with(\"Occupation_Status_\"),\n               names_to = \"parent\",\n               names_prefix=\"Occupation_Status_\",\n               values_to=\"jobstatus\") \n\n# Calculate Mean score by parent and job status and save in new dataframe\nmeans_parentsjobstat &lt;- \n  jobstatus_long %&gt;% \n  select(parent, jobstatus, Avg_Math, Avg_Reading, Avg_Sci) %&gt;% \n  group_by(parent, jobstatus) %&gt;% \n  summarise(mean_math = mean(Avg_Math),\n            mean_reading = mean(Avg_Reading),\n            mean_sci = mean(Avg_Sci),\n            .groups = 'drop')\n\np_parentsjs_m &lt;-\nggplot(jobstatus_long, \n       aes(x = Avg_Math, y = jobstatus,\n           fill = parent,\n           color=parent)) +\n  geom_density_ridges(\n    calc_ecdf = TRUE, \n  # Reduce space between between education levels \n    scale = 0.8,\n    alpha= 0.3,\n  rel_min_height = 0.01,\n  position = position_nudge(y=0.11)\n  ) +\n  # point for father's mean\n  geom_point(data = subset(means_parentsjobstat, parent==\"Father\"),\n             aes(x = mean_math, \n                 y = jobstatus), \n              alpha=0.4,\n             shape = 21, size = 3, colour = \"#73b2c4\", fill = \"#73b2c4\") +\n  # point for mother's \n  geom_point(data = subset(means_parentsjobstat, parent==\"Mother\"),\n             aes(x = mean_math, \n                 y = jobstatus), \n              alpha=0.4, \n             shape = 23, size = 3, colour = \"#f27279\", fill = \"#f27279\", stroke = .5) +\n  scale_color_manual(name=\"Parent\",\n                        values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  labs(\n    x = \"Math\", \n  ) +\n  scale_y_discrete(expand = c(0, 0.1))+\n  guides(color=\"none\") +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.y = element_text(size = rel(0.9)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") ) \n    \n\np_parentsjs_r &lt;-\nggplot(jobstatus_long, \n       aes(x = Avg_Reading, y = jobstatus,\n           fill = parent,\n           color=parent)) +\n  geom_density_ridges(\n    calc_ecdf = TRUE, \n  # Reduce space between between education levels \n    scale = 0.8,\n    alpha= 0.3,\n  rel_min_height = 0.01,\n  position = position_nudge(y=0.11)\n  ) +\n  # point for father's mean\n  geom_point(data = subset(means_parentsjobstat, parent==\"Father\"),\n             aes(x = mean_reading, \n                 y = jobstatus), \n              alpha=0.4,\n             shape = 21, size = 3, colour = \"#73b2c4\", fill = \"#73b2c4\") +\n  # point for mother's \n  geom_point(data = subset(means_parentsjobstat, parent==\"Mother\"),\n             aes(x = mean_reading, \n                 y = jobstatus), \n              alpha=0.4, \n             shape = 23, size = 3, colour = \"#f27279\", fill = \"#f27279\", stroke = .5) +\n  scale_color_manual(name=\"Parent\",\n                        values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  labs(\n    x = \"Reading\", \n  ) +\n  scale_y_discrete(expand = c(0, 0.1))+\n  guides(color=\"none\") +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") ) +\n  annotate(geom = \"text\", x = 0.08, y = 1.4, label = \"Density plots almost\\noverlap completely.\", hjust = \"left\", size= 2)  \n  \np_parentsjs_s &lt;-\nggplot(jobstatus_long, \n       aes(x = Avg_Sci, y = jobstatus,\n           fill = parent,\n           color=parent)) +\n  geom_density_ridges(\n    calc_ecdf = TRUE, \n  # Reduce space between between education levels \n    scale = 0.8,\n    alpha= 0.3,\n  rel_min_height = 0.01,\n  position = position_nudge(y=0.11)\n  ) +\n  # point for father's mean\n  geom_point(data = subset(means_parentsjobstat, parent==\"Father\"),\n             aes(x = mean_sci, \n                 y = jobstatus), \n              alpha=0.4,\n             shape = 21, size = 3, colour = \"#73b2c4\", fill = \"#73b2c4\") +\n  # point for mother's \n  geom_point(data = subset(means_parentsjobstat, parent==\"Mother\"),\n             aes(x = mean_sci, \n                 y = jobstatus), \n              alpha=0.4,\n             shape = 23, size = 3, colour = \"#f27279\", fill = \"#f27279\", stroke = .5) +\n  scale_color_manual(name=\"Parent\",\n                        values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"Father\" = \"#73b2c4\", \n                               \"Mother\" = \"#f27279\")) +\n  labs(\n    x = \"Science\", \n  ) +\n  scale_y_discrete(expand = c(0, 0.1))+\n  guides(color=\"none\") +\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position = \"bottom\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") ) +\n  annotate(\n    geom = \"curve\", x = 280, y = 2.75\n    , xend = 470, yend = 2.80, \n    curvature = -.3, arrow = arrow(length = unit(2, \"mm\"))\n  ) +\n  annotate(geom = \"text\", x = 0.08, y = 2.6, label = \"Scores more\\nleft-skewed for\\nstudents with\\nunemployed\\nfathers.\", hjust = \"left\", size= 2)  \n  \n\n(p_parentsjs_m + p_parentsjs_r + p_parentsjs_s) +\n  plot_layout(guides = \"collect\") +\n  plot_annotation(title = \"Higher scores with employed parents.\",\n  subtitle=\"Students with unemployed &lt;span style='color: #73b2c4;'&gt;fathers&lt;/span&gt; had better scores than those with unemployed &lt;span style='color: #f27279;'&gt;mothers&lt;/span&gt;.\",\n                  theme=theme(plot.title = element_markdown(hjust = 0),\n                              plot.subtitle = element_markdown(hjust = 0),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))+\n  plot_layout(widths=c(1,1,1))\n\n\n\n\n\n\nInsights\n\nMean scores are observed to be higher for students whose parents are employed as opposed to those with unemployed parents. In instances where both parents are employed, the corresponding density plots converge almost completely, suggesting that the employment status of either parent has a minimal effect on subject scores. This indicates a potentially equivalent influence of each parent’s employment on academic outcomes.\nWhen focusing on the impact of unemployment, we notice a marked difference, especially in the case of the father’s unemployment. The density plots tend to shift towards the right, implying an improvement in scores. This skew is further substantiated by the position of the blue geom points, which represent the average scores associated with father’s unemployment. These points are now situated to the right of the pink points, which indicate the average scores when mothers are unemployed. This pattern might suggest that a father’s unemployment could have a more significant positive correlation with student scores compared to a mother’s unemployment.\n\n\n\n\n6.4.3 Nativity / Immigration Status\nJittered strip chart, using geom_jitter, is used in the visualisation of individual data points, allowing for a clearer observation of the variation and range differences between groups. The geom_jitter function adds a small amount of random variation to the position of each point, which helps to prevent overplotting where points would otherwise overlap completely.\nIn the accompanying code, the parameter alpha = 0.2 is adjusted to control the transparency of the dots. An alpha value closer to 0 increases the transparency of the dots, making them more see-through, while a value closer to 1 would render them fully opaque. By setting the alpha to a lower value, we can clearly see the areas with a higher concentration of overlapping dots, which will naturally appear darker.\nFurthermore, stat_summary() is used to aggregate and display the median value for each group within the data. By specifying a contrasting color for these summary points, they are made to stand out against the jittered points, ensuring that these key statistical indicators draw immediate attention. This can be compared against the plotted mean line which shows the average score of each subject.\n\n\nShow the code\nimmig_m &lt;-\nggplot(stu_SG_more, aes(x = Immigration_Status, \n                        y = Avg_Math, \n                        color = Immigration_Status)) +\n    coord_flip() +\n  geom_jitter(size = 2, \n              alpha = 0.2, \n              width = 0.2) +\n  stat_summary(color=\"#595DE5\",\n               fun = \"median\", \n               geom = \"point\", \n               size = 3, \n               alpha = 0.8)  +\n  scale_y_continuous(\n    breaks = scales::pretty_breaks(n = 5)\n  ) +  \n  geom_hline(aes(yintercept = mean_math), \n             linewidth=0.6,\n             linetype=\"dashed\",\n             color = \"red\")+\n  annotate(\n      \"text\", \n      x = 3.5, \n      y = 690,\n      label = paste(\"Mean =\\n\", round(mean_math, 3)),\n      color = \"red\",\n      size = 3\n    ) +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n          plot.title = element_markdown(size = 12, face = \"bold\"),\n          plot.subtitle = element_text(size = rel(0.8)),\n          plot.caption = element_text(size = rel(0.8)),\n          axis.text.y = element_text(size = rel(0.9)),\n          axis.text.x = element_text(size = rel(0.9)),\n          axis.title.x = element_text(size = rel(0.8)),\n          axis.title.y = element_text(size = rel(0.8)),\n          axis.ticks.y = element_blank(),\n          panel.grid = element_blank(),\n          axis.line.x=element_line(),\n          plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n          ) +\n  guides(color = \"none\", fill = \"none\") + \n  scale_color_manual(values=c(\"#f27279\", \"#f7af7a\", \"#73b2c4\")) +\n  labs(x = NULL , y = \"Math\", title = \"\")\n\nimmig_r &lt;-\nggplot(stu_SG_more, aes(x = Immigration_Status, \n                        y = Avg_Reading, \n                        color = Immigration_Status)) +\n    coord_flip() +\n  geom_jitter(size = 2, \n              alpha = 0.2, \n              width = 0.2) +\n  stat_summary(color=\"#595DE5\",\n               fun = \"median\", \n               geom = \"point\", \n               size = 3, \n               alpha = 0.8)  +\n  scale_y_continuous(\n    breaks = scales::pretty_breaks(n = 5)\n  ) +  \n  geom_hline(aes(yintercept = mean_reading), \n             linewidth=0.6,\n             linetype=\"dashed\",\n             color = \"red\")+\n  annotate(\n      \"text\", \n      x = 3.5, \n      y = 690,\n      label = paste(\"Mean =\\n\", round(mean_reading, 3)),\n      color = \"red\",\n      size = 3\n    ) +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n          plot.title = element_markdown(size = 12, face = \"bold\"),\n          plot.subtitle = element_text(size = rel(0.8)),\n          plot.caption = element_text(size = rel(0.8)),\n          axis.text.y = element_blank(),\n          axis.text.x = element_text(size = rel(0.9)),\n          axis.title.x = element_text(size = rel(0.8)),\n          axis.title.y = element_text(size = rel(0.8)),\n          axis.ticks.y = element_blank(),\n          panel.grid = element_blank(),\n          axis.line.x=element_line(),\n          plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n          ) +\n  guides(color = \"none\", fill = \"none\") + \n  scale_color_manual(values=c(\"#f27279\", \"#f7af7a\", \"#73b2c4\")) +\n  labs(x = NULL , y = \"Reading\", title = \"\")\n\nimmig_s &lt;-\nggplot(stu_SG_more, aes(x = Immigration_Status, \n                        y = Avg_Sci, \n                        color = Immigration_Status)) +\n    coord_flip() +\n  geom_jitter(size = 2, \n              alpha = 0.2, \n              width = 0.2) +\n  stat_summary(color=\"#595DE5\",\n               fun = \"median\", \n               geom = \"point\", \n               size = 3, \n               alpha = 0.8)  +\n  scale_y_continuous(\n    breaks = scales::pretty_breaks(n = 5)\n  ) +  \n  geom_hline(aes(yintercept = mean_sci), \n             linewidth=0.6,\n             linetype=\"dashed\",\n             color = \"red\")+\n  annotate(\n      \"text\", \n      x = 3.5, \n      y = 690,\n      label = paste(\"Mean =\\n\", round(mean_sci, 3)),\n      color = \"red\",\n      size = 3\n    ) +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n          plot.title = element_markdown(size = 12, face = \"bold\"),\n          plot.subtitle = element_text(size = rel(0.8)),\n          plot.caption = element_text(size = rel(0.8)),\n          axis.text.y = element_blank(),\n          axis.text.x = element_text(size = rel(0.9)),\n          axis.title.x = element_text(size = rel(0.8)),\n          axis.title.y = element_text(size = rel(0.8)),\n          axis.ticks.y = element_blank(),\n          panel.grid = element_blank(),\n          axis.line.x=element_line(),\n          plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n          ) +\n  guides(color = \"none\", fill = \"none\") + \n  scale_color_manual(values=c(\"#f27279\", \"#f7af7a\", \"#73b2c4\")) +\n  labs(x = NULL , y = \"Science\", title = \"\")\n\n(immig_m | immig_r | immig_s) +\n    plot_annotation(title=\"Higher scores from &lt;span style='color: #f7af7a;'&gt;Second-gen immigrants&lt;/span&gt; across all subjects.\", \n                  theme=theme(plot.title = element_markdown(hjust = 0),\n                              plot.subtitle = element_markdown(hjust = 0),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))\n\n\n\n\n\n\nInsights\n\nPlots of raw data helps with “sanity checking” and identify things like missing data or outliers, while plots of summary statistics helps visual estimation against other groups. This dual approach ensures a comprehensive understanding of the data set, allowing for both detailed individual data point analysis and aggregate group comparisons.\nThe results derived from the jittered plots indicate that second-generation immigrants generally outperform their peers in all subjects. This observation suggests that there might be underlying factors or conditions conducive to the academic success of this demographic group.\nThe natives exhibit the widest range of scores, contributing to a lower median. This wider spread signifies greater variability in performance among native students."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-home-access-to-educational-resources",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#comparing-home-access-to-educational-resources",
    "title": "Take-home Exercise 1: Investigating Student Performance with Data Visualisations",
    "section": "6.5 Comparing home access to educational resources",
    "text": "6.5 Comparing home access to educational resources\nThe raincloud plot combines an illustration of data distribution (the ‘cloud’), with jittered raw data (the ‘rain’). This can be further supplemented by adding boxplots or other standard measures of central tendency and error. Thus, raincloud plots offer the reader maximum utility and flexibility, ensuring that nothing is ‘hidden away’ and that the reader has all informaiton needed to assess the data, its distribution, and the appropriateness of any statistical tests in a visually appealing format.\nIn the code chunk below, we use stat_halfeye to create a halved distribution, geom_boxplot for the boxplot, and geom_point for the jitters. An ifelse() condition is added to the stat_halfeye aesthetic to flip the density plot horizontally when the result is ‘No’. This allows closer side-by-side comparison of the boxplots for each pair of answer to the survey question.\n\n\nShow the code\n# Math\nrcp_com_m &lt;- \n  ggplot(stu_SG_more, aes(x = Have_Comp, \n                          y = Avg_Math, \n                          fill = Have_Comp)) +\n  \n  stat_halfeye(aes(fill = Have_Comp,\n                         justification = ifelse(Have_Comp == \"No\", 1.2, 0),\n                          side = ifelse(Have_Comp == \"No\", \"left\", \"right\")),\n                   position = position_nudge(x = .1, y = 0), \n                   adjust = 1.2, \n                   .width=0,\n                   trim = FALSE, \n                   alpha = .5, \n                   point_colour = NA,\n                   orientation = )+\n  \n  geom_point(aes(x = Have_Comp, \n                 y = Avg_Math, \n                 colour = Have_Comp),\n             position = position_jitter(width = .05), \n             size = .25, \n             shape = 20)+\n  \n  geom_boxplot(aes(x = Have_Comp, \n                   y = Avg_Math, \n                   fill = Have_Comp),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .1, \n               colour = \"black\")+\n  scale_color_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  labs(\n    x = \"Computer\", \n  ) +\n  theme_minimal() +  \n  ylim(100, 920)+\n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(size = rel(0.8)),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )   +\n  geom_hline(aes(yintercept=mean_math),\n               color=\"#595DE5\", linewidth=0.7, linetype=\"dashed\") +\n  annotate(\n      \"text\", \n      x = 1.5, \n      y = mean_math +80,\n      label = paste(\"Mean\\nScore =\\n\", mean_math),\n      color = \"#595DE5\",\n      size = 2.5\n    )\n\n\nrcp_sw_m &lt;- \n  ggplot(stu_SG_more, aes(x = Have_EduSW, \n                          y = Avg_Math, \n                          fill = Have_EduSW)) +\n  \n  stat_halfeye(aes(fill = Have_EduSW,\n                         justification = ifelse(Have_EduSW == \"No\", 1.2, 0),\n                          side = ifelse(Have_EduSW == \"No\", \"left\", \"right\")),\n                   position = position_nudge(x = .1, y = 0), \n                   adjust = 1.2, \n                   .width=0,\n                   trim = FALSE, \n                   alpha = .5, \n                   point_colour = NA,\n                   orientation = )+\n  \n  geom_point(aes(x = Have_EduSW, \n                 y = Avg_Math, \n                 colour = Have_EduSW),\n             position = position_jitter(width = .05), \n             size = .25, \n             shape = 20)+\n  \n  geom_boxplot(aes(x = Have_EduSW, \n                   y = Avg_Math, \n                   fill = Have_EduSW),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .1, \n               colour = \"black\")+\n  scale_color_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  labs(\n    x = \"Educational Software\", \n  ) +\n  ylim(100, 920)+\n    theme_minimal() +  \n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )   +\n  geom_hline(aes(yintercept=mean_math),\n               color=\"#595DE5\", linewidth=0.7, linetype=\"dashed\")\n\nrcp_int_m &lt;- \n  ggplot(stu_SG_more, aes(x = Have_Internet, \n                          y = Avg_Math, \n                          fill = Have_Internet)) +\n  \n  stat_halfeye(aes(fill = Have_Internet,\n                         justification = ifelse(Have_Internet == \"No\", 1.2, 0),\n                          side = ifelse(Have_Internet == \"No\", \"left\", \"right\")),\n                   position = position_nudge(x = .1, y = 0), \n                   adjust = 1.2, \n                   .width=0,\n                   trim = FALSE, \n                   alpha = .5, \n                   point_colour = NA,\n                   orientation = )+\n  \n  geom_point(aes(x = Have_Internet, \n                 y = Avg_Math, \n                 colour = Have_Internet),\n             position = position_jitter(width = .05), \n             size = .25, \n             shape = 20)+\n  \n  geom_boxplot(aes(x = Have_Internet, \n                   y = Avg_Math, \n                   fill = Have_Internet),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .1, \n               colour = \"black\")+\n  scale_color_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  labs(\n    x = \"Internet\", \n  ) +\n  ylim(100, 920)+\n    theme_minimal() +  \n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )  +\n  geom_hline(aes(yintercept=mean_math),\n               color=\"#595DE5\", linewidth=0.7, linetype=\"dashed\")  \n\nrcp_m &lt;-\nrcp_com_m + rcp_sw_m + rcp_int_m +\n  plot_layout(widths=c(1,1,1)) +\n  plot_annotation(title=\"Math\", \n                  theme=theme(plot.title = element_text(hjust = 0),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))\n\nrcp_m\n\n\n\n\n\n\n\nShow the code\n# Reading\nrcp_com_r &lt;- \n  ggplot(stu_SG_more, aes(x = Have_Comp, \n                          y = Avg_Reading, \n                          fill = Have_Comp)) +\n  \n  stat_halfeye(aes(fill = Have_Comp,\n                         justification = ifelse(Have_Comp == \"No\", 1.2, 0),\n                          side = ifelse(Have_Comp == \"No\", \"left\", \"right\")),\n                   position = position_nudge(x = .1, y = 0), \n                   adjust = 1.2, \n                   .width=0,\n                   trim = FALSE, \n                   alpha = .5, \n                   point_colour = NA,\n                   orientation = )+\n  \n  geom_point(aes(x = Have_Comp, \n                 y = Avg_Reading, \n                 colour = Have_Comp),\n             position = position_jitter(width = .05), \n             size = .25, \n             shape = 20)+\n  \n  geom_boxplot(aes(x = Have_Comp, \n                   y = Avg_Reading, \n                   fill = Have_Comp),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .1, \n               colour = \"black\")+\n  scale_color_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  labs(\n    x = \"Computer\", \n  ) +\n  ylim(100, 920)+\n    theme_minimal() +  \n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(size = rel(0.8)),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )   +\n  geom_hline(aes(yintercept=mean_reading),\n               color=\"#595DE5\", linewidth=0.7, linetype=\"dashed\") +\n  annotate(\n      \"text\", \n      x = 1.5, \n      y = mean_math +80,\n      label = paste(\"Mean\\nScore =\\n\", mean_reading),\n      color = \"#595DE5\",\n      size = 2.5\n    )  \n  \n\nrcp_sw_r &lt;- \n  ggplot(stu_SG_more, aes(x = Have_EduSW, \n                          y = Avg_Reading, \n                          fill = Have_EduSW)) +\n  \n  stat_halfeye(aes(fill = Have_EduSW,\n                         justification = ifelse(Have_EduSW == \"No\", 1.2, 0),\n                          side = ifelse(Have_EduSW == \"No\", \"left\", \"right\")),\n                   position = position_nudge(x = .1, y = 0), \n                   adjust = 1.2, \n                   .width=0,\n                   trim = FALSE, \n                   alpha = .5, \n                   point_colour = NA,\n                   orientation = )+\n  \n  geom_point(aes(x = Have_EduSW, \n                 y = Avg_Reading, \n                 colour = Have_EduSW),\n             position = position_jitter(width = .05), \n             size = .25, \n             shape = 20)+\n  \n  geom_boxplot(aes(x = Have_EduSW, \n                   y = Avg_Reading, \n                   fill = Have_EduSW),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .1, \n               colour = \"black\")+\n  scale_color_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  labs(\n    x = \"Educational Software\", \n  ) +\n  ylim(100, 920)+\n    theme_minimal() +  \n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )  +\n  geom_hline(aes(yintercept=mean_reading),\n               color=\"#595DE5\", linewidth=0.7, linetype=\"dashed\")  \n  \n\nrcp_int_r &lt;- \n  ggplot(stu_SG_more, aes(x = Have_Internet, \n                          y = Avg_Reading, \n                          fill = Have_Internet)) +\n  \n  stat_halfeye(aes(fill = Have_Internet,\n                         justification = ifelse(Have_Internet == \"No\", 1.2, 0),\n                          side = ifelse(Have_Internet == \"No\", \"left\", \"right\")),\n                   position = position_nudge(x = .1, y = 0), \n                   adjust = 1.2, \n                   .width=0,\n                   trim = FALSE, \n                   alpha = .5, \n                   point_colour = NA,\n                   orientation = )+\n  \n  geom_point(aes(x = Have_Internet, \n                 y = Avg_Reading, \n                 colour = Have_Internet),\n             position = position_jitter(width = .05), \n             size = .25, \n             shape = 20)+\n  \n  geom_boxplot(aes(x = Have_Internet, \n                   y = Avg_Reading, \n                   fill = Have_Internet),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .1, \n               colour = \"black\")+\n  scale_color_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  labs(\n    x = \"Internet\", \n  ) +\n  ylim(100, 920)+\n    theme_minimal() +  \n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )   +\n  annotate(\n    geom = \"curve\", x = 0.3, y = 230, xend = 0.7, yend = 300, \n    curvature = -.3, arrow = arrow(length = unit(2, \"mm\"))\n  ) +\n  annotate(geom = \"text\", x =0.02, y = 185, label = \"Highly\\nleft-skewed\", hjust = \"left\", size= 3)  +\n  geom_hline(aes(yintercept=mean_reading),\n               color=\"#595DE5\", linewidth=0.7, linetype=\"dashed\")  \n    \n\n\nrcp_r &lt;-\nrcp_com_r + rcp_sw_r + rcp_int_r +\n  plot_layout(widths=c(1,1,1)) +\n  plot_annotation(title=\"Reading\", \n                  theme=theme(plot.title = element_text(hjust = 0),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))\n\nrcp_r\n\n\n\n\n\n\n\nShow the code\n# Reading\nrcp_com_s &lt;- \n  ggplot(stu_SG_more, aes(x = Have_Comp, \n                          y = Avg_Sci, \n                          fill = Have_Comp)) +\n  \n  stat_halfeye(aes(fill = Have_Comp,\n                         justification = ifelse(Have_Comp == \"No\", 1.2, 0),\n                          side = ifelse(Have_Comp == \"No\", \"left\", \"right\")),\n                   position = position_nudge(x = .1, y = 0), \n                   adjust = 1.2, \n                   .width=0,\n                   trim = FALSE, \n                   alpha = .5, \n                   point_colour = NA,\n                   orientation = )+\n  \n  geom_point(aes(x = Have_Comp, \n                 y = Avg_Sci, \n                 colour = Have_Comp),\n             position = position_jitter(width = .05), \n             size = .28, \n             shape = 20)+\n  \n  geom_boxplot(aes(x = Have_Comp, \n                   y = Avg_Sci, \n                   fill = Have_Comp),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .1, \n               colour = \"black\")+\n  scale_color_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  labs(\n    x = \"Computer\", \n  ) +\n  ylim(100, 920)+\n    theme_minimal() +  \n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(size = rel(0.8)),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") ) +\n  geom_hline(aes(yintercept=mean_sci),\n               color=\"#595DE5\", linewidth=0.7, linetype=\"dashed\") +\n  annotate(\n      \"text\", \n      x = 1.5, \n      y = mean_math +80,\n      label = paste(\"Mean\\nScore =\\n\", mean_sci),\n      color = \"#595DE5\",\n      size = 2.5\n    )  \n  \n\nrcp_sw_s &lt;- \n  ggplot(stu_SG_more, aes(x = Have_EduSW, \n                          y = Avg_Sci, \n                          fill = Have_EduSW)) +\n  \n  stat_halfeye(aes(fill = Have_EduSW,\n                         justification = ifelse(Have_EduSW == \"No\", 1.2, 0),\n                          side = ifelse(Have_EduSW == \"No\", \"left\", \"right\")),\n                   position = position_nudge(x = .1, y = 0), \n                   adjust = 1.2, \n                   .width=0,\n                   trim = FALSE, \n                   alpha = .5, \n                   point_colour = NA,\n                   orientation = )+\n  \n  geom_point(aes(x = Have_EduSW, \n                 y = Avg_Sci, \n                 colour = Have_EduSW),\n             position = position_jitter(width = .05), \n             size = .28, \n             shape = 20)+\n  \n  geom_boxplot(aes(x = Have_EduSW, \n                   y = Avg_Sci, \n                   fill = Have_EduSW),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .1, \n               colour = \"black\")+\n  scale_color_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  labs(\n    x = \"Educational Software\", \n  ) +\n  ylim(100, 920)+\n    theme_minimal() +  \n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") )  + \n  geom_hline(aes(yintercept=mean_sci),\n               color=\"#595DE5\", linewidth=0.7, linetype=\"dashed\")   \n\nrcp_int_s &lt;- \n  ggplot(stu_SG_more, aes(x = Have_Internet, \n                          y = Avg_Sci, \n                          fill = Have_Internet)) +\n  \n  stat_halfeye(aes(fill = Have_Internet,\n                         justification = ifelse(Have_Internet == \"No\", 1.2, 0),\n                          side = ifelse(Have_Internet == \"No\", \"left\", \"right\")),\n                   position = position_nudge(x = .1, y = 0), \n                   adjust = 1.2, \n                   .width=0,\n                   trim = FALSE, \n                   alpha = .5, \n                   point_colour = NA,\n                   orientation = )+\n  \n  geom_point(aes(x = Have_Internet, \n                 y = Avg_Sci, \n                 colour = Have_Internet),\n             position = position_jitter(width = .05), \n             size = .28, \n             shape = 20)+\n  \n  geom_boxplot(aes(x = Have_Internet, \n                   y = Avg_Sci, \n                   fill = Have_Internet),\n               outlier.shape = NA, \n               alpha = .5, \n               width = .1, \n               colour = \"black\")+\n  scale_color_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  scale_fill_manual(values = c(\"No\" = \"#73b2c4\", \n                               \"Yes\" = \"#f27279\")) +\n  labs(\n    x = \"Internet\", \n  ) +\n  ylim(100, 920)+\n    theme_minimal() +  \n  theme(\n    legend.direction = \"horizontal\",\n    legend.position=\"none\",\n    plot.title = element_text(size =12, face = \"bold\"),\n    plot.subtitle = element_text(size = rel(0.8)),\n    plot.caption = element_text(size = rel(0.8)),\n    axis.text.x = element_text(size = rel(0.9)),\n    axis.title.x = element_text(size = rel(0.9)),\n    axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n    plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\") ) +  \n  geom_hline(aes(yintercept=mean_sci),\n               color=\"#595DE5\", linewidth=0.7, linetype=\"dashed\") \n\nrcp_s &lt;-\nrcp_com_s + rcp_sw_s + rcp_int_s +\n  plot_layout(widths=c(1,1,1)) +\n  plot_annotation(title=\"Science\", \n                  theme=theme(plot.title = element_text(hjust = 0),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))\n\nrcp_s\n\n\n\n\n\n\nInsights\n\nAcross all 3 subjects, students with limited home access to key study resources, such as computers, educational software, and internet, tend to have lower scores. This pattern is particularly pronounced in cases of internet inaccessibility, leading to noticeably left-skewed score distributions, especially in Reading. The lack of internet access appears to significantly hinder students’ ability to access information and educational materials, which is reflected in their academic performance.\nInterestingly, access to educational software seems to have a relatively minor impact on overall scores compared to other resources. This observation suggests that while educational software can be a useful tool, its absence does not disadvantage students as severely as the lack of more fundamental resources like internet access. This insight could guide educational policies and resource allocation, emphasizing the critical importance of internet access for student learning and achievement.\nThese observations highlight the crucial role of basic educational resources in student performance and the varying degrees of impact different resources can have. This understanding is vital for developing targeted strategies to bridge educational gaps and enhance learning outcomes.\nHowever, recall our sample size for students without access to educational tools are low (see Section 5.3), which might reduce the accuracy of our finding."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#time-spent-on-homework-1",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#time-spent-on-homework-1",
    "title": "Take-home Exercise 1: Investigating Student Performance with Data Visualisations",
    "section": "5.2 Time Spent on Homework",
    "text": "5.2 Time Spent on Homework\nBar charts can be used to represent frequencies of different categories, appropriate for categorical variables that use a nominal or ordinal scale of measurement. Adding direct labels can increase accessibility of a bar graph and reduce the “chart junk” since grid lines, axis labels, and even axis titles become obsolete. Ordering bar charts for categorical values with no internal order can help the reader focus on the largest and smallest groups. In the plot below, arranging according to increasing time frame would make sense as the variable follows the ordinal scale.\n\n\nShow the code\np2_hwt_reading &lt;- ggplot(data = stu_SG_filtered, \n       aes(x = Time_HW_Reading)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 2600) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \\n\", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.2,\n      size=3) +  \n    labs(x = \"\",\n         y = \"\",\n         title=\"Reading\") + \n    theme(\n      panel.grid.major = element_blank(), \n      plot.title = element_text(size=9, face=\"bold\"),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),\n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\np2_hwt_math &lt;- ggplot(data = stu_SG_filtered, \n       aes(x = Time_HW_Math)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 2600) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \\n\", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.2,\n      size=3) +  \n    labs(x = \"\",\n         y = \"\",\n         title=\"Math\") + \n    theme(\n      panel.grid.major = element_blank(), \n      plot.title = element_text(size=9, face=\"bold\"),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),\n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\np2_hwt_sci &lt;- ggplot(data = stu_SG_filtered, \n       aes(x = Time_HW_Science)) +\n    geom_bar(fill=\"#c7c8cc\")+\n    ylim(0, 2600) + \n    geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \\n\", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-0.2,\n      size=3) +  \n    labs(x = \"\",\n         y = \"\",\n         title=\"Science\") + \n    theme(\n      panel.grid.major = element_blank(), \n      plot.title = element_text(size=9, face=\"bold\"),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      axis.ticks.y = element_blank(),\n      #axis.ticks.x = element_blank(),      \n      plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n    ) \n\n\np2_hwt_math + p2_hwt_reading + p2_hwt_sci +\n  plot_layout(widths=c(1,1,1)) +\n  plot_annotation(title=\"Time Spent on Homework in mins\", \n                  theme=theme(plot.title = element_text(hjust = 0),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))\n\n\n\n\n\n\nObservations\n\nBoth Science and Math seem to be more spread out to cover more timeframes.\nThe bar chart is clustered around the lower end of time spent on homework for Reading.\nThis is interesting because median and mean Reading scores are the lowest among the 3 subjects."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#plotting-ridgeline-graph-ggridges-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#plotting-ridgeline-graph-ggridges-method",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "3.1 Plotting ridgeline graph: ggridges method",
    "text": "3.1 Plotting ridgeline graph: ggridges method\nThere are several ways to plot ridgeline plot with R. In this section, we will learn how to plot ridgeline plot by using ggridges package.\nggridges package provides two main geom to plot gridgeline plots, they are: geom_ridgeline() and geom_density_ridges(). The former takes height values directly to draw the ridgelines, and the latter first estimates data densities and then draws those using ridgelines.\nThe ridgeline plot below is plotted by using geom_density_ridges().\n\n3.1.1 geom_density_ridges\n\n\nShow the code\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()+\n  theme(\n    #panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")  \n    )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#varying-fill-colors-along-the-x-axis",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#varying-fill-colors-along-the-x-axis",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "3.2 Varying fill colors along the x axis",
    "text": "3.2 Varying fill colors along the x axis\nSometimes we would like to have the area under a ridgeline not filled with a single solid color but rather with colors that vary in some form along the x axis. This effect can be achieved by using either geom_ridgeline_gradient() or geom_density_ridges_gradient(). Both geoms work just like geom_ridgeline() and geom_density_ridges(), except that they allow for varying fill colors. However, they do not allow for alpha transparency in the fill. For technical reasons, we can have changing fill colors or transparency but not both.\n\n\nShow the code\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01,\n    color='#8da3ca',\n    linewidth=1.05) +\n  scale_color_continuous_sequential('Purple-Blue')+\n  scale_fill_continuous_sequential('Purple-Blue', name='displ')+\n  scale_x_continuous(\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()+\n  labs(x = \"English Score\",\n       y = \"\",\n       title=\"Colour transition from light to dark as scores improve.\") +   \n  theme(\n    legend.position = \"none\",\n    #panel.grid.major = element_blank(),\n    axis.title.y = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")  \n    )  \n\n\n\n\n\n\n3.3 Mapping the probabilities directly onto colour\nBeside providing additional geom objects to support the need to plot ridgeline plot, ggridges package also provides a stat function called stat_density_ridges() that replaces stat_density() of ggplot2.\nFigure below is plotted by mapping the probabilities calculated by using stat(ecdf) which represent the empirical cumulative density function for the distribution of English score.\n\n\nShow the code\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()+\n  labs(x = \"English\",\n       y = \"\",\n       title=\"Uneven distribution across classes.\") +   \n  theme(\n    #legend.position = \"none\",\n    #panel.grid.major = element_blank(),\n    axis.title.y = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")  \n    )    \n\n\n\n\n\n\n\n3.4 Ridgeline plots with quantile lines\n\n\nShow the code\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()+\n  labs(x = \"English\",\n       y = \"\",\n       title=\"Uneven distribution across classes.\") +   \n  theme(\n    legend.position = \"none\",\n    #panel.grid.major = element_blank(),\n    axis.title.y = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")  \n    )    \n\n\n\n\n\nInstead of using number to define the quantiles, we can also specify quantiles by cut points such as 2.5% and 97.5% tails to colour the ridgeline plot as shown in the figure below.\n\n\nShow the code\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()+\n  labs(x = \"English\",\n       y = \"\",\n       title=\"Uneven distribution across classes.\") +   \n  theme(\n    legend.position = \"none\",\n    #panel.grid.major = element_blank(),\n    axis.title.y = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")  \n    )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#plotting-a-half-eye-graph",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#plotting-a-half-eye-graph",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "4.1 Plotting a Half Eye graph",
    "text": "4.1 Plotting a Half Eye graph\nFirst, we will plot a Half-Eye graph by using stat_halfeye() of ggdist package.\nThis produces a Half Eye visualization, which is contains a half-density and a slab-interval.\nWe remove the slab interval by setting .width = 0 and point_colour = NA.\n\n\nShow the code\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)+\n  labs(x = \"\",\n       y = \"English\\nScore\",\n       title=\"Uneven distribution across classes.\") +   \n  theme(\n    legend.position = \"none\",\n    #panel.grid.major = element_blank(),\n    axis.title.y = element_text(hjust=1, angle=0),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")  \n    )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#adding-the-boxplot-with-geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#adding-the-boxplot-with-geom_boxplot",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "4.2 Adding the boxplot with geom_boxplot()",
    "text": "4.2 Adding the boxplot with geom_boxplot()\nNext, we will add the second geometry layer using geom_boxplot() of ggplot2. This produces a narrow boxplot. We reduce the width and adjust the opacity.\n\n\nShow the code\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  labs(x = \"\",\n       y = \"English\\nScore\",\n       title=\"Uneven distribution across classes.\") +   \n  theme(\n    legend.position = \"none\",\n    #panel.grid.major = element_blank(),\n    axis.title.y = element_text(hjust=1, angle=0),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")  \n    )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#adding-the-dot-plots-with-stat_dots",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#adding-the-dot-plots-with-stat_dots",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "4.3 Adding the Dot Plots with stat_dots()",
    "text": "4.3 Adding the Dot Plots with stat_dots()\nNext, we will add the third geometry layer using stat_dots() of ggdist package. This produces a half-dotplot, which is similar to a histogram that indicates the number of samples (number of dots) in each bin. We select side = “left” to indicate we want it on the left-hand side.\n\n\nShow the code\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2) +\n  labs(x = \"\",\n       y = \"English\\nScore\",\n       title=\"Uneven distribution across classes.\") +   \n  theme(\n    legend.position = \"none\",\n    #panel.grid.major = element_blank(),\n    axis.title.y = element_text(hjust=1, angle=0),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")  \n    )    \n\n\n\n\n\n\n4.4 Finishing touch\nLastly, coord_flip() of ggplot2 package will be used to flip the raincloud chart horizontally to give it the raincloud appearance.\n\n\nShow the code\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  labs(x = \"\",\n       y = \"English Score\",\n       title=\"Uneven distribution across classes.\") +   \n  theme(\n    legend.position = \"none\",\n    #panel.grid.major = element_blank(),\n    axis.title.y = element_text(hjust=1, angle=0),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")  \n    )  +\n\n  coord_flip()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#shaped-jitters",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#shaped-jitters",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "5.1 |-shaped jitters",
    "text": "5.1 |-shaped jitters\n\n\nShow the code\nggplot(exam, \n       aes(x = ENGLISH, \n           y = RACE, \n           color=RACE, \n           #fill=RACE\n           )) +\n  theme_ridges()+\n  geom_density_ridges(jittered_points=TRUE,\n                      position='raincloud',\n                      alpha = 0.7,\n                      scale=0.9,\n                      point_shape = '|',\n                      point_size = 3,\n                      ) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  scale_color_nord('victory_bonds')+\n  scale_fill_nord('victory_bonds')+\n  labs(x = \"English Score\",\n       y = \"\",\n       title=\"Uneven distribution across classes.\") +   \n  theme(\n    legend.position = \"none\",\n    #panel.grid.major = element_blank(),\n    axis.title.x = element_text(hjust=1, angle=0),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")  \n    )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#with",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#with",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "5.2 With",
    "text": "5.2 With\n\n\nShow the code\nggplot(exam, \n       aes(x = ENGLISH, \n           y = RACE,\n       color= RACE,\n       fill= RACE)) +\n  theme_ridges()+\n  geom_density_ridges(jittered_points=TRUE,\n                      aes(point_color=RACE),\n                      alpha = 0.7,\n                      point_size = 1.5,\n                      ) +\n  scale_fill_discrete_qualitative('Set 3')+\n  scale_color_discrete_qualitative('Dark 3')+\n\n\n  labs(x = \"English Score\",\n       y = \"\",\n       title=\"Uneven distribution across classes.\") +   \n  theme(\n    legend.position = \"none\",\n    #panel.grid.major = element_blank(),\n    axis.title.x = element_text(hjust=1, angle=0),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")  \n    )"
  }
]
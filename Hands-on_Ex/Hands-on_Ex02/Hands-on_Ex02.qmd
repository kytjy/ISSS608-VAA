---
title: "Hands-on Exercise 2: Beyond ggplot2 Fundamentals"
date: "08 Jan 2024"
date-modified: "last-modified"
editor: visual
toc-depth: 4
execute:
  freeze: auto
  echo: true #if false, displays charts without codes
  eval: true #if false, displays codes without charts
  warning: false #dont display if there are any warnings
format: 
  html:
    code-fold: false
    code-overflow: scroll
    code-summary: "Show the code"
    code-line-numbers: true
    code-block-bg: "#ECEBEB"
---

![](Images/placeholder.PNG){fig-align="center"}

# 1 Overview

In this chapter, we will be learning about ggplot2 extensions for creating more elegant and effective statistical graphics. The goals of this exercise is to:

-   control the placement of annotation on a graph by using functions provided in ggrepel package,
-   create professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages, and
-   plot composite figure by combining ggplot2 graphs by using patchwork package.

# 2 Getting Started

::: panel-tabset
## Installing and loading libraries

In this exercise, beside tidyverse, four R packages will be used. They are:

-   ggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.
-   ggthemes: an R package provides some extra themes, geoms, and scales for 'ggplot2'.
-   hrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.
-   patchwork: an R package for preparing composite figure created using ggplot2.

Code chunk below will be used to check if these packages have been installed and also will load them onto your working R environment.

```{r}
pacman::p_load(ggrepel, patchwork, 
               ggthemes, hrbrthemes,
               tidyverse) 
```

## Importing Data

-   The code chunk below imports **exam_data.csv** into R environment by using [`read_csv()`](https://readr.tidyverse.org/reference/read_delim.html) function of [**readr**](https://readr.tidyverse.org/) package.
-   **readr** is one of the tidyverse package.

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

## Understanding the Data

```{r}
glimpse(exam_data)
```

-   Year end examination grades of a cohort of primary 3 students from a local school.
-   There are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.
    -   Categorical attributes are: ID, CLASS, GENDER and RACE.
    -   Continuous attributes are: MATHS, ENGLISH and SCIENCE.

:::

# 3 Beyond ggplot2 Annotation: ggrepel

One of the challenge in plotting statistical graph is annotation, especially with large number of data points.


```{r}
ggplot(data=exam_data,
       aes(y=ENGLISH, x=MATHS)) + 
  geom_point() +
  geom_smooth(method=lm, size = 0.5) +
  coord_cartesian(xlim=c(0,100),
                       ylim=c(0,100)) +
  geom_label(aes(label=ID),
             hjust=0.5,
             vjust=-0.5) +
  ggtitle('English score vesus Math Score for Primary 3')
```

[**ggrepel**](https://ggrepel.slowkow.com/) is an extension of **ggplot2** package which provides `geoms` for **ggplot2** to repel overlapping text as in our example above.

We simply replace `geom_text()` by [`geom_text_repel()`](https://ggrepel.slowkow.com/reference/geom_text_repel.html) and `geom_label()` by [`geom_label_repel`](https://ggrepel.slowkow.com/reference/geom_text_repel.html).


```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=1) +  
  geom_label_repel(aes(label = ID), 
                   fontface = "bold", 
                   max.overlaps = 15) +  #Labels increase as max overlaps increase
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

# 4 Beyond ggplot2 Themes

**ggplot2** comes with eight [built-in themes](https://ggplot2.tidyverse.org/reference/ggtheme.html): `theme_gray()`, `theme_bw()`, `theme_classic()`, `theme_dark()`, `theme_light()`, `theme_linedraw()`, `theme_minimal()`, and `theme_void()`.

```{r}
ggplot(data=exam_data, 
       aes(x=MATHS)) +
  geom_histogram(bins=20, 
                 color= 'white',
                 fill='grey') +
  theme_gray() +
  theme(panel.background=element_rect(fill='grey96')) +
  ggtitle('Distribution of Math scores')
```


## 4.1 Working with ggtheme package

[**ggthemes**](https://cran.r-project.org/web/packages/ggthemes/) provides ['ggplot2' themes](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/) that replicate the look of plots by Edward Tufte, Stephen Few, [Fivethirtyeight](https://fivethirtyeight.com/), [The Economist](https://www.economist.com/graphic-detail), 'Stata', 'Excel', and [The Wall Street Journal](https://www.pinterest.com/wsjgraphics/wsj-graphics/), among others.

:::panel-tabset

## theme_economist

```{r}
ggplot(data=exam_data, 
       aes(x=MATHS)) +
  geom_histogram(bins=20,
                 boundary=100,
                 color='grey25',
                 fill='grey90',size=0.8) +
  theme_economist() +
  labs(y= 'No. of \nPupils') +
  theme(axis.title.y=element_text(angle = 0,
                                  vjust=0.9)) +
  ggtitle('Distribution of Math scores')
```
## theme_hc()

```{r}
ggplot(data=exam_data, 
       aes(x=MATHS)) +
  geom_histogram(bins=20,
                 boundary=100,
                 color='grey25',
                 fill='grey90',size=0.8) +
  theme_solarized() +
  labs(y= 'No. of \nPupils') +
  theme(axis.title.y=element_text(angle = 0,
                                  vjust=0.9)) +
  ggtitle('Distribution of Math scores')
```

:::

It also provides some extra geoms and scales for 'ggplot2'. Refer to [this vignette](https://mran.microsoft.com/snapshot/2016-12-28/web/packages/ggthemes/vignettes/ggthemes.html) and [ggthemes](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/) to learn more.

## 4.2 Working with hrbthemes package

[**hrbrthemes**](https://cinc.rud.is/web/packages/hrbrthemes/) package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used. The second goal centers around productivity for a production workflow. In fact, this “production workflow” is the context for where the elements of hrbrthemes should be used.

:::panel-tabset

## Original

```{r}
ggplot(data=exam_data, 
       aes(x=MATHS)) +
  geom_histogram(bins=20,
                 boundary=100,
                 color='grey25',
                 fill='grey90') +
  theme_ipsum() +
  labs(y= 'No. of \nPupils') +
  theme(axis.title.y=element_text(angle = 0,
                                  vjust=0.9)) +
  ggtitle('Distribution of Math scores')
```

## With Elements

```{r}
ggplot(data=exam_data, 
       aes(x=MATHS)) +
  geom_histogram(binwidth=5,
                 boundary=100,
                 color='grey25',
                 fill='grey90') +
  theme_ipsum(axis_title_size = 15,
              base_size=12,
              grid= 'Y') +
 labs(y= 'No. of \nPupils') +
 theme(axis.title.y=element_text(angle = 0,
                                  vjust=0.9)) +
  ggtitle('Distribution of Math scores')
```

-   `axis_title_size` argument is used to increase the font size of the axis title to 15,
-   `base_size` argument is used to increase the default axis label to 12, and
-   `grid` argument is used to remove the x-axis grid lines.
:::

# 5 Beyond Single Graph



# 6 Reference
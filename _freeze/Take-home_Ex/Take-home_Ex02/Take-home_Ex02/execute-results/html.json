{
  "hash": "af5bf3f9097eacbd7faf956723e7664b",
  "result": {
    "markdown": "---\ntitle: \"Take-home Exercise 2: DataVis Makeover For Take-home Exercise 1\"\ndate: \"28 Jan 2024\"\ndate-modified: \"last-modified\"\neditor: visual\ntoc-depth: 4\nexecute:\n  freeze: true #never re-render during project render\n  echo: true #if false, displays charts without codes\n  eval: true #if false, displays codes without charts\n  warning: false #dont display if there are any warnings\nformat: \n  html:\n    code-fold: false\n    code-overflow: scroll\n    code-summary: \"Show the code\"\n    code-line-numbers: false\n---\n\n\n![](images/placeholder.PNG){fig-align=\"center\"}\n\n# 1 Overview\n\nIn the [previous Take-home Exercise](https://akalestale.netlify.app/take-home_ex/take-home_ex01/take-home_ex01), we utilised Exploratory Data Analysis methods and ggplot functions to uncover the distribution of performance among Singaporean students in mathematics, reading, and science. We also explored the relationships between these performance metrics and factors such as schools, gender, and socioeconomic status, leveraging data from the PISA Student Questionnaire Survey.\n\nIn this post, the objective is to enhance the original visualisations created by a fellow classmate based on Ben Jones' data visualisation [four quadrants of clarity and aesthetic](https://dataremixed.com/2012/05/data-visualization-clarity-or-aesthetics/).\n\n![](images/quads.PNG){fig-align=\"center\"}\n\n# 2 Getting Started\n\n## 2.1 Loading Packages\n\n| **Library**                                                                                                   | **Description**                                                                                                                                     |\n|--------------------------|----------------------------------------------|\n| [**tidyverse**](https://www.tidyverse.org/)                                                                   | A collection of core packages designed for data science, used extensively for data preparation and wrangling.                                       |\n| [**haven**](https://haven.tidyverse.org/)                                                                     | To enable R to read and write various data formats such as SAS and SPSS.                                                                            |\n| [**patchwork**](https://patchwork.data-imaginist.com/)                                                        | For preparing composite figure created using ggplot2.                                                                                               |\n| [**scales**](https://scales.r-lib.org/)                                                                       | For data labels and annotations for ggplot2                                                                                                         |\n| [**ggridges**](https://cran.r-project.org/web/packages/ggridges/vignettes/introduction.html)                  | For ridgeline plots that create the impression of a mountain range. They can be useful for visualising changes in distributions over time or space. |\n| [**ggdist**](https://mjskay.github.io/ggdist/)                                                                | For visualisations of distributions and uncertainty.                                                                                                |\n| [**ggtext**](https://wilkelab.org/ggtext/)                                                                    | Supports improved text rendering for ggplot2.                                                                                                       |\n| [**ggpubr**](https://github.com/kassambara/ggpubr)                                                            | For publication-ready plots.                                                                                                                        |\n| [**intsvy**](https://daniel-caro.com/r-intsvy)                                                                | Provides analysis tools for international assessment data. OP used this package to derive means and probabilities of subject scores.                |\n| [**waffle**](https://github.com/hrbrmstr/waffle) and [**hrbrthemes**](https://github.com/hrbrmstr/hrbrthemes) | For plotting and tweaking waffle charts to communicate parts of a while for categorical attributes.                                                 |\n\n: {tbl-colwidths=\"\\[20,80\\]\"}\n\nThe following code chunk uses `p_load()` of [**pacman**](https://rpubs.com/akshaypatankar/594834) package to check if tidyverse packages are installed in the computer. If they are, the libraries will be called into R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, haven, patchwork, \n               scales, ggridges, ggdist, \n               ggtext, ggpubr, intsvy,\n               waffle, hrbrthemes)\n```\n:::\n\n\n## 2.2 PISA Data\n\n::: panel-tabset\n## Importing dataset\n\nFirst, the *2022 Student Questionnaire* dataset is downloaded from [OECD's PISA 2022 Database](https://www.oecd.org/pisa/data/2022database/) and imported using the [`read_sas()`](https://haven.tidyverse.org/reference/read_sas.html) function of the [**haven**](https://haven.tidyverse.org/) package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstu <- read_sas(data_file = \"data/cy08msp_stu_qqq.sas7bdat\")\n```\n:::\n\n\nThe dataset is in a tibble dataframe, containing 613,744 observations (rows) across 1,279 variables (columns). Each observation corresponds to an entry from a student who participated in the 2022 PISA survey for students, and the variables correspond to information from students on various aspects of their home, family, and school background.\n\nNote that the first variable *CNT* refers to the country of response. This is used to filter for Singapore (where *CNT = SGP*) responses for our analysis. [`filter()`](https://dplyr.tidyverse.org/reference/filter.html) of the [**dplyr**](https://dplyr.tidyverse.org/) package allows us to perform this extraction of participating country.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstu_SG <- stu %>%\n  filter(CNT == \"SGP\")\n```\n:::\n\n\nThe resulting data contains 6,606 rows/observations across 1,279 columns/variables.\n\nThe *.rds* file format is usually smaller than its SAS file counterpart and will therefore take up less storage space. The *.rds* file will also preserve data types and classes such as factors and dates eliminating the need to redefine data types after loading the file. For fast and space efficient data storage, files can be exported as RDS and re-imported into R using [`write_rds()`](https://readr.tidyverse.org/reference/read_rds.html) and [`read_rds()`](https://readr.tidyverse.org/reference/read_rds.html) respectively.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(stu_SG, \"data/stu_SG.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstu_SG <- read_rds(\"data/stu_SG.rds\")\n```\n:::\n\n\n## Data Wrangling\n\nGiven that the primary focus of this exercise is to provide feedback the visualisations rather than data pre-processing or the choice of variables, I will be following through the same steps taken by the OP to wrangle the data.\n\nThe author uses [`pisa.mean.pv()`](https://img1.wsimg.com/blobby/go/105aeb78-8212-40bb-855d-a52ee90a5f89/downloads/pisa22.pdf?ver=1705429874371) function of the [**instvy**](https://daniel-caro.com/r-intsvy) package to obtain the mean plausible values out of the 10 plausible values provided in the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMath_mean_SG <- pisa.mean.pv(pvlabel = paste0(\"PV\",1:10,\"MATH\"), by=\"CNT\", data=stu_SG)\n\nRead_mean_SG <- pisa.mean.pv(pvlabel = paste0(\"PV\",1:10,\"READ\"), by=\"CNT\", data=stu_SG)\n\nSCIE_mean_SG <- pisa.mean.pv(pvlabel = paste0(\"PV\",1:10,\"SCIE\"), by=\"CNT\", data=stu_SG)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMath_mean_SG\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  CNT Freq   Mean s.e.    SD  s.e\n1 SGP 6606 574.66 1.23 102.8 0.91\n```\n:::\n\n```{.r .cell-code}\nRead_mean_SG\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  CNT Freq   Mean s.e.     SD  s.e\n1 SGP 6606 542.55 1.87 105.89 1.15\n```\n:::\n\n```{.r .cell-code}\nSCIE_mean_SG\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  CNT Freq   Mean s.e.    SD s.e\n1 SGP 6606 561.43 1.33 99.09 1.1\n```\n:::\n:::\n\n\nThe function generates descriptive statistics for each subject, including the mean, frequency, standard error, and standard deviation.\n\nWith that, we can proceed to analyse some of the visualisations shared!\n:::\n\n# 3 DataVis Makeover\n\nIn the next few sections, I will step through some of the [best practices shared](https://isss608-ay2023-24jan.netlify.app/lesson/lesson02/lesson02-designing%20graphs%20to%20enlighten#/title-slide) to make storytelling with data more accessible.\n\n## 3.1 Distribution of Subject Scores\n\nThe histograms plotted aim to show the distribution of scores across the 3 subjects, and a overlapping density plot to compare distributions across subjects.\n\n::: panel-tabset\n## Original\n\n![](images/MO1.PNG){fig-align=\"center\" width=\"550\"}\n\nThere are several thoughtful features about the original plot.\n\n**Clarity**\n\n-   **Composite plot:** The composite plot offers a comprehensive view of the distributions of all the target variables simultaneously.\n\n-   **Visualise distributions:** Histogram is appropriate for showcasing distribution in data.\n\n-   **Appropriate labels:** The graph is generally clear, with labels on both axes accompanied by a graph title.\n\n-   **Mean line:** The inclusion of mean line serves as a valuable point of comparison across all the 3 plots, aiding in the assessment of subject scores.\n\n**Aesthetics**\n\n-   **Colour scheme:** The consistent colour scheme for each subject throughout the post makes it easier to relate the colour to the subject from plot to plot.\n\n## Areas for Improvement\n\n![](images/MO1_1.PNG){fig-align=\"center\" width=\"550\"}\n\nHowever, there is some room for improvement. Each point raised below corresponds to the annotated labels in the image above.\n\n**Clarity**\n\n1.  **Graph title:** A more concise and informative title that effectively conveys the plot's key message would enhance clarity.\n2.  **x-axis tick marks and scale:** Addressing the inconsistent x-axis ranges across the three histograms would enhance comparability. Currently, the tick marks on the x-axis are 250 units apart for the Reading and Science plots, while they are only 200 units apart for the Math plot. This discrepancy makes it challenging to accurately gauge differences. Adopting a consistent scale for the x-axis would facilitate a more precise and straightforward comparison.\n3.  **Density plot:** The overlapped density plots of all 3 subjects seem quite redundant, especially if the x-axis range can be fixed.\n4.  **Mean line:** The mean in the annotation is derived from the mean scores across Plausible Values 1 to 10, calculated using the `pisa_mean_pv()` function from the **intsvy** package. However, it's important to note that the histogram is plotted using PV1 values, leading to potential misinterpretations and inaccuracies.\n\n**Aesthetic**\n\n5.  **Annotation placement:** The annotation for the mean line covers parts of the histogram. Adjusting the position could improve overall aesthetics.\n6.  **Orientation of y-axis title:** Rotating the y-axis title horizontally would improve reader-friendliness and visual appeal.\n:::\n\n### Revamp\n\nThe code chunk below is first used to calculate the mean PV of each subject using PV1.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate mean values for 3 subjects\nmean_m <- round(mean(stu_SG$PV1MATH),0)\nmean_r <- round(mean(stu_SG$PV1READ),0)\nmean_s <- round(mean(stu_SG$PV1SCIE),0)\n```\n:::\n\n\nThe remake features similar histograms with trio of colours to represent each of the subject.\n\n-   Using `element_markdown()` of the **ggtext** package within `theme()` enables colour-coding of the graph title. This is used in conjunction with `span style='color:'` to specify the colour hexcode of choice.\n-   `limits()` is explicitly declared inside `scale_x_continuous()` to ensure the range of x-axis used is consistent throughout.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# Histogram for Math scores\nhist_m <- \n  ggplot(\n    stu_SG, \n    aes(x = PV1MATH)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#629182\",\n    alpha=0.4,\n  ) +\n  \n  # Sets same breaks on the x-axis\n  scale_x_continuous(\n    breaks = scales::pretty_breaks(n = 5),\n  \n    # Set same limits for both plots for consistency\n    limits = c(150,950), \n  ) +\n  \n  # Insert mean line\n  geom_vline(\n    aes(xintercept = mean_m),\n    colour=\"#3E5058\", \n    linewidth = 0.5, \n    linetype = \"dashed\"\n  ) +\n  \n  # Include annotation for mean line\n  annotate(\n    geom = \"text\", \n    x = mean_m-50, \n    y = 870,\n    label = paste0(\"Mean: \", mean_m),\n    color=\"#3E5058\",\n    size = 3,\n  ) + \n  \n  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    axis.text.x = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\n# Histogram for Reading scores\nhist_r <- \n  ggplot(\n    stu_SG, \n    aes(x = PV1READ)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#EF6174\",\n    alpha=0.4,\n  ) +\n  \n  scale_x_continuous(\n    # Sets same breaks on the x-axis\n    breaks = scales::pretty_breaks(n = 5),\n  \n    # Set same limits for both plots for consistency\n    limits = c(150,950), \n  ) +\n  \n  # Insert mean line\n  geom_vline(\n    aes(xintercept = mean_r),\n    colour=\"#3E5058\", \n    linewidth = 0.5, \n    linetype = \"dashed\"\n  ) +\n  \n  # Include annotation for mean line\n  annotate(\n    geom = \"text\", \n    x = mean_r-50, \n    y = 870,\n    label = paste0(\"Mean: \", mean_r),\n    color=\"#3E5058\",\n    size = 3,\n  ) +  \n  labs(x = NULL, y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    axis.text.x = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\nhist_s <- \n  ggplot(\n    stu_SG, \n    aes(x = PV1SCIE)\n  ) +\n  geom_histogram(\n    bins = 25,\n    color = \"#f5f5f5\",\n    fill=\"#FEBc44\",\n    alpha= 0.4,\n  ) +\n\n  scale_x_continuous(\n    # Sets same breaks on the x-axis\n    breaks = scales::pretty_breaks(n = 5),\n  \n    # Set same limits for both plots for consistency\n    limits = c(150,950), \n  ) +\n  \n  # Insert mean line\n  geom_vline(\n    aes(xintercept = mean_s),\n    colour=\"#3E5058\", \n    linewidth = 0.5, \n    linetype = \"dashed\"\n  ) +\n  # Include annotation for mean line\n  annotate(\n    geom = \"text\", \n    x = mean_s-50, \n    y = 870,\n    label = paste0(\"Mean: \", mean_s),\n    color=\"#3E5058\",\n    size = 3,\n  ) +  \n  labs(x = \"Scores\", y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_blank(),\n    axis.line.x = element_line(),\n    panel.grid.major = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\")\n  )\n\np1 <- (hist_m / hist_r)\np1 / hist_s  + \n  plot_layout(heights = c(1,1,1)) +\n  plot_annotation(title=\"Mean scores in <span style='color: #629182;'>Math</span> > <span style='color: #EF6174;'>Reading</span> and <span style='color: #FEBc44;'>Science</span>.\", \n                  subtitle = \"Normal distribution across all subjects.\",\n                  theme=theme(plot.title = element_markdown(hjust = 0, face=\"bold\"),\n                  plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                  panel.border = element_blank()))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n**Clarity**\n\n1.  **Graph title:** The title encapsulates the primary observation derived from the graph. The use of colour-coded words for each subject eliminares the need for a legend and fosters subject identification.\n2.  **x-axis tick marks and scale:** The histograms are consolidated into a single column with a share x-axis. It features aligned bin numbers across each subject to improve clarity and comparability.\n3.  **Mean Line:** The mean is calculated using PV1 values for each subject to ensure a more precise benchmarking process that contributes to the graph's accuracy.\n\n**Aesthetic**\n\n4.  **Annotation placement:** The move of the mean line's annotation to the top enhances the overall view of the plot and avoids obstruction.\n\n## 3.2 Relationship between Scores and School ID\n\nThe author opted for a bubble plot, an extension of the scatter plot, to examine the relationship between subject scores and School ID.\n\n::: panel-tabset\n## Original\n\n![](images/MO2.PNG){fig-align=\"center\" width=\"550\"}\n\nStarting off with the good:\n\n**Clarity**\n\n-   The graph layout is clear and user-friendly. The tabset format allows easy navigation across different subjects' plot.\n\n-   The interactive plot with a tooltips makes it convenient to identify School ID, average score, and frequency.\n\n**Aesthetic**\n\n-   The font and colours used are easy to read. It is easy to grasp the idea of the plot without distractions.\n\n## Areas for Improvement\n\n![](images/MO2_1.PNG){fig-align=\"center\" width=\"550\"}\n\nNext, the not so good and some improvements I would make:\n\n**Clarity**\n\n1.  **Use of a bubble plot:** The bubble plot may not be the most effective way to visualise scores (continuous variable) against School ID (categorical variable). Scatter plots are typically more suited for charting 2 continuous variables.\n2.  **Colour scale:** The colour transition lacks obvious distinction, most of the points appear to be of similar density. A more contrasting colour scale would improve visual differentiation.\n3.  **Colour and location of annotations:** Annotations close to the axis may be challenging to locate and can be easily overlooked, especially when they blend in with the colour of the bubbles.\n\n**Aesthetic**\n\n4.  **Orientation of y-axis title:** Rotating the y-axis title horizontally would be more reader-friendly.\n5.  **Length of legend name:** Shortening the legend's title or allowing it to extend across a second line would create more space for the actual plot.\n:::\n\n### Revamp\n\nThis remake is inspired by [Tobias Stalder's submission for TidyTuesday](https://twitter.com/toeb18/status/1480174139377917953).\n\nFirstly, `as.character()` is used to convert the *SchID* variable from numeric to categorical data type.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert School ID to character data type\n\nstu_SG <- stu_SG %>%\n  mutate(CNTSCHID = as.character(CNTSCHID))\n```\n:::\n\n\nUsing `n_distinct` we can identify that there are 164 unique school IDs in our dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_distinct(stu_SG$CNTSCHID)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 164\n```\n:::\n:::\n\n\nRather than cramming all 164 points of data into a plot, visualising the top 5 and bottom 5 results by subject performance should convey the message sufficiently (I have also tried plotting the top 10 and bottom 10 but did not find any additional information to be particularly insightful).\n\nThe below code serves the following purpose:\n\n-   `group_by()`: is first used to group all the rows with the same School ID together.\n-   `summarize()`, `count = n()` and `mean()`: This summarises the grouped data, calculating the count of observations within each school and the overall mean scores for each subject across all schools.\n-   `dense_rank(avg_sci) <= 5 and dense_rank(desc(avg_sci)) <= 5` are then used filter the top 5 and bottom 5 schools based on the average subject scores.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nstu_SG_schools <- \n  stu_SG %>% \n  group_by(CNTSCHID) %>% \n  mutate(avg_math = mean(c_across(PV1MATH), na.rm=TRUE),\n         avg_read = mean(c_across(PV1READ), na.rm=TRUE),\n         avg_sci = mean(c_across(PV1SCIE), na.rm=TRUE)) %>% \n  summarize(Count = n(),\n            avg_math = mean(avg_math, na.rm = TRUE),\n            avg_read = mean(avg_read, na.rm = TRUE),\n            avg_sci = mean(avg_sci, na.rm = TRUE))  \n\nstu_SG_schools_m <-\n  stu_SG_schools %>% \n  filter(dense_rank(avg_math) <= 5 | dense_rank(desc(avg_math)) <= 5)\n\nstu_SG_schools_r <-\n  stu_SG_schools %>% \n  filter(dense_rank(avg_read) <= 5 | dense_rank(desc(avg_read)) <= 5)\n\nstu_SG_schools_s <-\n  stu_SG_schools %>% \n  filter(dense_rank(avg_sci) <= 5 | dense_rank(desc(avg_sci)) <= 5)\n```\n:::\n\n\nSince the original plot aimed to compare average subject scores of each school, the remade version proposes the use of a bar plot to visualise ranking of the school subject averages.\n\nThe remade version showcases a lollipop plot, akin to a barplot, where the traditional bar is transformed into a combination of a line using `geom_segment()` and a dot with `geom_point()`. This visualisation illustrates the relationship between a numeric variable (average subject scores per school) and a categorical variable (school).\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nlolly_m <-\n  ggplot(stu_SG_schools_m, \n       aes(x = avg_math, \n           y = reorder(CNTSCHID, avg_math))) +\n  \n  geom_segment(aes(x=0, \n                 xend=avg_math, \n                 y=CNTSCHID, \n                 yend=CNTSCHID),\n             color= if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#989d9e\")\n                            ),\n             alpha = 0.5,\n             linewidth= 4.2)+\n  \n  geom_point(color= if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#989d9e\")),\n             alpha = 0.8,\n             size = 3.5)+            \n  \n  geom_text(data = stu_SG_schools_m,\n             aes(label = paste(CNTSCHID), \n                 x = 130, \n                 y = CNTSCHID),\n             color = if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#2e272A\")\n                            ),\n             size = 3,\n            fontface= if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200003\", \"70200056\", \"70200115\", \"70200149\"), \n                             \"bold\",\n                             \"plain\")) +\n  \n  # Data callout\n  geom_text(aes(label=round(avg_math,0)\n                ),\n            color=if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#2e272A\")\n                            ),\n            size=3,\n            nudge_x= 30,   # move it to the right of the point\n            hjust= 0, # left justify\n            fontface= if_else(stu_SG_schools_m$CNTSCHID %in% c(\"70200003\", \"70200056\", \"70200115\", \"70200149\"), \n                             \"bold\", \n                             \"plain\")) +\n  \n  # Insert mean line\n  geom_vline(\n    aes(xintercept = mean_m),\n    colour=\"#7161f0\", \n    linewidth = 0.5, \n    linetype = \"dashed\"\n  ) +\n  \n  # Include annotation for mean line\n  annotate(\n    geom = \"text\", \n    x = mean_m + 145, \n    y = 3.5,\n    label = paste0(\"Mean:\\n\", mean_m),\n    color=\"#7161f0\",\n    size = 3.2,\n  ) +  \n  scale_x_continuous(\n\n    # Set same limits for plots for consistency\n    limits = c(0,800), \n  ) +  \n  theme_minimal()+\n  labs(\n    x = \"Math\",\n    y = NULL\n  ) +\n  theme(\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.text.x = element_blank(),\n    axis.title = element_text(face =\"bold\"),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n    panel.grid = element_blank()\n  )  \n\nlolly_r <-\n  ggplot(stu_SG_schools_r, \n       aes(x = avg_read, \n           y = reorder(CNTSCHID, avg_read))) +\n  \n  geom_segment(aes(x=0, \n                 xend=avg_read, \n                 y=CNTSCHID, \n                 yend=CNTSCHID),\n             color= if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#989d9e\")\n                            ),\n             alpha = 0.5,\n             linewidth= 4.2)+\n  \n  geom_point(color= if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#989d9e\")),\n             alpha = 0.8,\n             size = 3.5)+            \n  \n  geom_text(data = stu_SG_schools_r,\n             aes(label = paste(CNTSCHID), \n                 x = 130, \n                 y = CNTSCHID),\n             color = if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#2e272A\")\n                            ),\n             size = 3,\n            fontface= if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200003\", \"70200056\", \"70200115\", \"70200149\"), \n                             \"bold\",\n                             \"plain\")) +\n  \n  # Data callout\n  geom_text(aes(label=round(avg_read,0)\n                ),\n            color=if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#2e272A\")\n                            ),\n            size=3,\n            nudge_x= 30,   # move it to the right of the point\n            hjust= 0, # left justify\n            fontface= if_else(stu_SG_schools_r$CNTSCHID %in% c(\"70200003\", \"70200056\", \"70200115\", \"70200149\"), \n                             \"bold\", \n                             \"plain\")) +\n  \n  # Insert mean line\n  geom_vline(\n    aes(xintercept = mean_r),\n    colour=\"#7161f0\", \n    linewidth = 0.5, \n    linetype = \"dashed\"\n  ) +\n  \n  # Include annotation for mean line\n  annotate(\n    geom = \"text\", \n    x = mean_r + 145, \n    y = 3.5,\n    label = paste0(\"Mean:\\n\", mean_r),\n    color=\"#7161f0\",\n    size = 3.2,\n  ) +  \n  scale_x_continuous(\n\n    # Set same limits for plots for consistency\n    limits = c(0,800), \n  ) +  \n  theme_minimal()+\n  labs(\n    x = \"Reading\",\n    y = NULL\n  ) +\n  theme(\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.text.x = element_blank(),\n    axis.title = element_text(face =\"bold\"),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n    panel.grid = element_blank()\n  ) \n\nlolly_s <-\n  ggplot(stu_SG_schools_s, \n       aes(x = avg_sci, \n           y = reorder(CNTSCHID, avg_sci))) +\n  \n  geom_segment(aes(x=0, \n                 xend=avg_sci, \n                 y=CNTSCHID, \n                 yend=CNTSCHID),\n             color= if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#989d9e\")\n                            ),\n             alpha = 0.5,\n             linewidth= 4.2)+\n  \n  geom_point(color= if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#989d9e\")),\n             alpha = 0.8,\n             size = 3.5)+            \n  \n  geom_text(data = stu_SG_schools_s,\n             aes(label = paste(CNTSCHID), \n                 x = 130, \n                 y = CNTSCHID),\n             color = if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#2e272A\")\n                            ),\n             size = 3,\n            fontface= if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200003\", \"70200056\", \"70200115\", \"70200149\"), \n                             \"bold\",\n                             \"plain\")) +\n  \n  # Data callout\n  geom_text(aes(label=round(avg_sci,0)\n                ),\n            color=if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200003\"), \"#69aebf\", \n                            if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200056\", \"70200115\", \"70200149\"), \"#dc7068\",\"#2e272A\")\n                            ),\n            size=3,\n            nudge_x= 30,   # move it to the right of the point\n            hjust= 0, # left justify\n            fontface= if_else(stu_SG_schools_s$CNTSCHID %in% c(\"70200003\", \"70200056\", \"70200115\", \"70200149\"), \n                             \"bold\", \n                             \"plain\")) +\n  \n  # Insert mean line\n  geom_vline(\n    aes(xintercept = mean_s),\n    colour=\"#7161f0\", \n    linewidth = 0.5, \n    linetype = \"dashed\"\n  ) +\n  \n  # Include annotation for mean line\n  annotate(\n    geom = \"text\", \n    x = mean_s + 145, \n    y = 3.5,\n    label = paste0(\"Mean:\\n\", mean_s),\n    color=\"#7161f0\",\n    size = 3.2,\n  ) +  \n  scale_x_continuous(\n\n    # Set same limits for plots for consistency\n    limits = c(0,800), \n  ) +  \n  theme_minimal()+\n  labs(\n    x = \"Science\",\n    y = NULL\n  ) +\n  theme(\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.text.x = element_blank(),\n    axis.title = element_text(face =\"bold\"),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n    panel.grid = element_blank()\n  ) \n\nlolly_m + lolly_r + lolly_s +\n  plot_layout(widths=c(1.2,1,1)) +\n  plot_annotation(title=\"Uneven distribution of scores across schools\",\n                  subtitle=\"School <span style='color: #69aebf;'>70200003</span> has one of the highest mean scores across all subjects,<br> while schools <span style='color: #dc7068;'>70200056, 70200115, 70200149</span> remained at the bottom consistently.\",\n                  theme=theme(plot.title = element_markdown(hjust = 0, face=\"bold\"),\n                              plot.subtitle = element_markdown(hjust = 0),\n                              plot.background = element_rect(fill=\"#f5f5f5\", colour = \"#f5f5f5\"),\n                              panel.border = element_blank()))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n**Clarity**\n\n1.  **Use of a lollipop plot:** The lollipop plot is a straightforward yet effective visualisation of the top and bottom average scores by school. The schools are sorted in descending order based on their average scores for each subject to enhance interpretability.\n2.  **Colour:** The use of colours, with blue highlighting consistently high-performing schools and pink delineating consistently low-performing schools across subjects, serves to direct the reader's attention towards salient findings.\n3.  **Mean line:** The inclusion of a mean line, along with annotations, facilitates easy comparison of school performance against the average score for each subject across all schools.\n4.  **Chart labelling**: Each point in the graph is annotated, enhancing overall clarity and providing additional context to the visual representation.\n\n**Aesthetic**\n\n5.  **Removal of y-axis**: The y-axis labels (School IDs) are labelled within the bar for more efficient use of space since 3 plots are combined.\n\n## 3.3 Relationship between Gender and Scores\n\nDensity plots are used to illustrate the disparity in distribution across genders for the 3 subjects.\n\n::: panel-tabset\n## Original\n\n![](images/MO3.PNG){fig-align=\"center\" width=\"550\"}\n\n**Clarity**\n\n-   Density plot with quantile lines effectively highlights the variance in median scores between genders.\n\n-   The graph is aptly labeled, with clear titles and axes.\n\n**Aesthetics**\n\n## Areas for Improvement\n\n![](images/MO3_1.PNG){fig-align=\"center\" width=\"550\"}\n\n**Clarity**\n\n1.  **Quartile lines:** Some of the quartile lines do not seem to be used, and can be removed to avoid cluttering the charts.\n2.  **Range of x-axis:** The differing ranges of the x-axis hinder a direct comparison across the three subjects. Using a consistent scale could enhance the identification of discrepancies.\n\n**Aesthetics**\n\n1.  **Colours:** The colours of the density plot serves little purpose.\n2.  **Repetition of x-axis:** Consistency in the x-axis ranges across all subjects can help remove redundant axes, potentially optimising space for the plots.\n:::\n\n### Revamp\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ndp_long <- \n  stu_SG %>% \n  select(ST004D01T, PV1MATH, PV1READ, PV1SCIE) %>% \n  pivot_longer(cols = starts_with(\"PV1\"),\n               names_to = \"subject\",\n               names_prefix=\"PV1\",\n               values_to=\"Score\") %>% \n  mutate(Gender=(recode(ST004D01T, '1'=\"Female\", \n                        '2'=\"Male\"))) %>% \n  select(-ST004D01T) %>% \n  mutate(subject=(recode(subject, \n                            'MATH'=\"Math\",\n                            'READ'=\"Reading\",\n                            'SCIE'='Science')))\n\nggplot(dp_long, \n       aes(x = Score, \n           y = Gender, \n           fill = Gender, \n           color = Gender)) +\n  geom_density_ridges(\n    alpha = 0.5,\n    quantile_lines = TRUE,\n    quantiles = 2,\n    scale = 1.5,\n    #bandwidth= 0.1,\n    rel_min_height = 0.01\n  ) +\n  theme_ridges() +\n  scale_fill_manual(values =\n                      c(\"#f27279\",\n                        \"#73b2c4\")) +\n  scale_color_manual(values =\n                      c(\"#f27279\",\n                        \"#73b2c4\")) +  \n  facet_wrap(~ subject, ncol=1)+\n  scale_x_continuous(\n    name = \"Scores\",\n    expand = c(0, 0)\n  ) +  \n  scale_y_discrete(expand = expansion(add= c(0.05, 1.8)))+\n\n  geom_text(\n   data = data.frame(x = 620, y = 1.5, subject = \"Math\", Gender = \"Female\", label = \"Median\"),\n   aes(x = x,\n       y = y,\n       label = label),\n    color = \"red\",\n    size = 3,\n   fontface = \"italic\"\n    ) +      \n  \n  labs(x = \"<b>Scores</b>\",\n       y = \"\",\n       title=\"Gaps in academic achievement between genders.\",\n       subtitle=\"<b><span style='color: #73b2c4;'>Male</span></b> students have higher median scores in Math and Science than <b><span style='color: #f27279;'>female</b></span> students.\") +\n  guides(fill=FALSE) +\n  theme(\n    legend.position = \"none\",\n    #panel.grid.major = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(size = 9, color = \"#a6a6a6\"),\n    \n    axis.text.x = element_text(size = 9, color = \"#a6a6a6\"),\n    axis.title.x = element_markdown(size = 10, color = \"#a6a6a6\", hjust= 0.5),\n    axis.line.x = element_line(color = \"#a6a6a6\"), \n    axis.ticks.x = element_line(color = \"#a6a6a6\"),\n    panel.grid = element_blank(),\n    plot.title = element_markdown(hjust=0),\n    plot.subtitle = element_markdown(hjust = 0),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n    strip.background = element_rect(color=\"#ecebeb\"),\n    strip.switch.pad.grid = unit(2, \"in\"),\n    strip.text = element_text(size = 9.5, \n                              color =\"#202120\",\n                              margin = unit(rep(4, 4), \"pt\"))\n    )  \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nThe revamped version retains the use of density plots to compare the distributions of subject scores between genders, with vertical lines showing the median.\n\n**Clarity**\n\n1.  **Use of colours:** In this version, colours are used to differentiate between the 2 genders. This colour scheme extends to the plot title, establishing a clear connection between the key finding in the title and the plots.\n2.  **Median line:** The `quantile_lines` argument is introduced to `geom_density_ridges()`, allowing control over the number of lines to represent quantiles. Setting the quantiles argument to 2 divides each density plot in half, effectively highlighting the median. Additionally, an annotation is included to provide context for the line's significance.\n3.  **Consistent x-axis:** Through the use of `facet_wrap()`, the graph is divided into individual sections for the three subjects. Importantly, the x-axis maintains a consistent range/scale throughout, aiding in distinguishing differences across subjects. For instance, the width of the density plots highlights that the range of scores for Science for both genders is notably smaller compared to the other two subjects.\n\n**Aesthetics**\n\n4.  **Muted labels:** The axes are in muted grey tones to ensure that the reader's focus remains on the graph itself without being distracted by the axes labels.\n\n## 3.4 Relationship between Scores and Socioeconomic Status of Students\n\nThe original approach to assess the association between subject scores and socioeconomic status involves the use of a scatterplot, accompanied by an R-squared value to quantify the correlation's strength. The socio-economic status used *ESCS* is measured by the PISA index of economic, social, and cultural status.\n\n::: panel-tabset\n## Original\n\n![](images/MO4.PNG){fig-align=\"center\" width=\"550\"}\n\n**Clarity**\n\n-   The title effectively captures the essence of the plot, providing a clear summary of its main message or findings.\n\n-   The consistent use of colours for each subject facilitates easy association between colour and subject, which is particularly helpful when comparing different plots throughout the submission post.\n\n**Aesthetics**\n\n-   The graph maintains a clean and straightforward appearance, avoiding distracting colours or excessive details that could overwhelm the viewer. OP has done well to eliminate some of the chart junk such as the y-axis since the correlation coeffcient is rather indicative of the strength of the relationship.\n-   The inclusion of the correlation coefficient adds a layer of statistical evidence to illustrate the strength of the relationship depicted in the plot.\n\n## Areas for Improvement\n\n![](images/MO4_1.PNG){fig-align=\"center\" width=\"550\"}\n\n**Clarity**\n\n1.  **x-axis:** Recoding the ESCS scores could enhance understanding, since little context is provided with regards to how the scores can be interpreted. Shifting the axis to start from where the 0 value is located might make it more intuitive, as it's not immediately evident that ESCS scores have both positive and negative sides. Additionally, the repetition of the x-axis across three plots could be avoided to streamline the visualisation.\n\n**Aesthetics**\n\n2.  **y-axis title:** Rotating the y-axis title horizontally would improve readability of the plot.\n3.  **Graph title:** A bolded graph title would stand out more and emphasise on the finding.\n:::\n\n### Revamp\n\nThe source of inspiration came from [this blog](https://jmablog.com/post/astronaut-mission-length-longest-v-average/).\n\nThe code chunk below assigns a quartile classification to the variable *ESCS* to create 4 roughly equal-sized groups, recodes the variables to more intuitive categories, and finally orders the variables as socio-economic levels increase.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstu_SG <- stu_SG %>%\n  mutate(ESCS = ntile(ESCS, 4), .after = ESCS) %>%\n  \n  mutate(ESCS = recode(ESCS,\n                       `1` = \"Highly Disadvantaged\",\n                       `2` = \"Disadvantaged\",\n                       `3` = \"Advantaged\",\n                       `4` = \"Highly Advantaged\")) %>%\n  \n  mutate(ESCS = factor(ESCS, \n                levels = c(\"Highly Disadvantaged\", \"Disadvantaged\", \n                        \"Advantaged\", \"Highly Advantaged\"),\n                ordered = TRUE)) \n```\n:::\n\n\nThe following code chunk prepares the dataset for plotting using `pivot_longer()` to reshape the data by converting multiple columns into 2 columns. The processed data is then grouped by ECSC category and subject. For each group, it calculates the mean score using the `summarise()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nbar_escs <-\n  stu_SG %>% \n  drop_na(ESCS) %>% \n  select(ESCS, PV1MATH, PV1READ, PV1SCIE) %>% \n  pivot_longer(cols = starts_with(\"PV1\"),\n               names_to = \"subject\",\n               names_prefix=\"PV1\",\n               values_to=\"score\") %>% \n  mutate(subject = recode(subject,\n                       `MATH` = \"Math\",\n                       `READ` = \"Reading\",\n                       `SCIE` = \"Science\")) \n  \nmean_escs <- \n  bar_escs %>% \n  group_by(ESCS, subject) %>% \n  summarise(mean = mean(score, na.rm=TRUE)) %>% \n  ungroup() %>% \n  mutate(total_avg = if_else(subject==\"Math\", mean_m, \n                            if_else(subject==\"Reading\", mean_r,\n                                    mean_s)))\n```\n:::\n\n\nThe remade strip plot shows the range, density, and central tendencies of each socio-economic level faceted by subject. By adding a low alpha value `geom_point()`, the strip plot is able to highlight the density and range of scores. The purple points refer to the mean of each subject at a socio-economic level. Lastly, a mean line indicating the overall subject-level average is added for comparison.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nggplot(bar_escs,\n             aes(x = ESCS, y = score)) +\n  coord_flip(clip = \"off\") +\n  geom_point(size = 3, \n             alpha = 0.1,\n             color=\"#3E5058\") +\n  geom_hline(data = mean_escs,\n             aes(yintercept = total_avg),\n             color = \"#c71e1d\",\n             size=1) +  \n  facet_wrap(~ subject, nrow = 3) +\n\n  geom_segment(\n    data = mean_escs,\n    aes(x = ESCS,\n        xend = ESCS,\n        y = total_avg,\n        yend = mean),\n    color = \"#8c8ed6\",\n    size = 0.8,\n  ) +\n  stat_summary(\n    fun=mean,\n    geom=\"point\",\n    size = 5,\n    color=\"#8c8ed6\",\n  ) +\n  geom_text(\n    aes(x = -0.2, y = 580, label = \"Subject Mean\"),\n            color = \"red\", size = 3,\n    data = data.frame(subject = \"Science\")) +    \n  scale_y_continuous(limits = c(0, 1000), expand = c(0.02,0.02)) +\n  labs(x = \"English Scores\",\n       y = \"\",\n       title=\"Disparities in academic achievement among different<br>socio-economic groups.\",\n       subtitle=\"Mean values highlighted in <span style='color: #8c8ed6;'>purple</span>.\") +   \n  theme(\n    legend.position = \"none\",\n    #panel.grid.major = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(),\n    axis.text.x = element_text(),\n    panel.grid = element_blank(),\n    axis.ticks.y = element_blank(),    \n    plot.title = element_markdown(hjust=0),\n    plot.subtitle = element_markdown(hjust = 0),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n    strip.background = element_rect(color=\"#ecebeb\"),\n    strip.text = element_text(color =\"#202120\"))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n**Clarity**\n\n1.  **x-axis:** The remade strip plot highlights the variance in range of subject scores by using a shared x-axis.\n2.  **ESCS-level mean:** The subject mean of each ESCS level is indicated by adding a summary statistic via `stat_summary()` with a different point size and colour to distinguish it from the points of `geom_point()`. Since the mean is a more important point of reference here, it is highlighted with a bigger size, zero transparency, and in bright purple colour.\n3.  **Mean line and annotation**: To relate all these points to a baseline, a red mean line is added to indicate the subject-level average score. We further highlight that the baseline is the subject-level average scores by adding a line from the average of each ESCS level to the subject average. The result is a combination of a strip and lollipop plot. The annotation for Subject Mean also helps explain the baseline level via `geom_text()`.\n\n**Aesthetics**\n\n4.  The overall format, design, and colour scheme have been refined to deliver a polished and professional appearance while maintaining clarity and avoiding information overload.\n\n## 3.5 Breakdown of Scores per Subject\n\nThe original visualisation features grouped bar chart to visualise proportion of proficiency levels.\n\n::: panel-tabset\n## Original\n\n![](images/MO5.PNG){fig-align=\"center\" width=\"550\"}\n\n**Clarity**\n\n-   The axes are appropriately labeled, contributing to the overall clarity of the visualisation.\n\n-   The proportions displayed on each bar are clearly marked, eliminating any potential ambiguity in interpretation.\n\n**Aesthetics:**\n\n-   Tiled x-axis label is a thoughtful feature to enhance readability and prevent overlap of long axis labels, thereby improving the aesthetic appeal of the plot.\n\n## Areas for Improvement\n\n![](images/MO5_1.PNG){fig-align=\"center\" width=\"550\"}\n\n**Clarity**\n\n1.  **Graph title:** The title appears somewhat confusing and potentially misleading. I think the OP intention was to convey the higher proportion of students performing poorly in Reading compared to other subjects.\n2.  **Grouped barchart**: The use of a grouped bar chart to represent proportions may not be the most suitable choice, especially when comparing bins of continuous scores. Typically, a histogram is used to visualise the distribution and relative frequencies of continuous data, providing a clearer representation of the data distribution. Additionally, with a grouped bar chart, there's a risk of overlapping information, especially when presenting data for multiple subjects simultaneously.\n3.  **y-axis title:** Rotating the y-axis title horizontally could enhance readability and user convenience.\n\n**Aesthetics**\n\n4.  **x-axis labels:** These can be recoded to represent more meaningful categories, reflecting the varying levels of proficiency.\n:::\n\n### Revamp\n\nFirst, I wanted to understand the functionality of [`pisa.ben.pv()`](https://search.r-project.org/CRAN/refmans/intsvy/html/pisa.ben.pv.html) used by the OP.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmath_breakdown <- pisa.ben.pv(pvlabel= paste0(\"PV\",1:10,\"MATH\"), by=\"CNT\", atlevel=TRUE, data=stu_SG)\n\nread_breakdown <- pisa.ben.pv(pvlabel= paste0(\"PV\",1:10,\"READ\"), by=\"CNT\", atlevel=TRUE, data=stu_SG)\n\nscie_breakdown <- pisa.ben.pv(pvlabel= paste0(\"PV\",1:10,\"SCIE\"), by=\"CNT\", atlevel=TRUE, data=stu_SG)\n```\n:::\n\n\nInspecting the outputs:\n\n::: panel-tabset\n## Math\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmath_breakdown\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  CNT       Benchmarks Percentage Std. err.\n1 SGP        <= 357.77       2.17      0.22\n2 SGP (357.77, 420.07]       5.85      0.38\n3 SGP (420.07, 482.38]      11.25      0.59\n4 SGP (482.38, 544.68]      17.59      0.61\n5 SGP (544.68, 606.99]      22.62      0.69\n6 SGP  (606.99, 669.3]      21.96      0.69\n7 SGP          > 669.3      18.56      0.52\n```\n:::\n:::\n\n\n## Reading\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_breakdown\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  CNT       Benchmarks Percentage Std. err.\n1 SGP        <= 357.77       5.19      0.37\n2 SGP (357.77, 420.07]       8.06      0.51\n3 SGP (420.07, 482.38]      14.15      0.63\n4 SGP (482.38, 544.68]      20.15      0.80\n5 SGP (544.68, 606.99]      23.40      0.76\n6 SGP  (606.99, 669.3]      18.61      0.62\n7 SGP          > 669.3      10.44      0.45\n```\n:::\n:::\n\n\n## Science\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscie_breakdown\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  CNT       Benchmarks Percentage Std. err.\n1 SGP        <= 357.77       2.87      0.30\n2 SGP (357.77, 420.07]       6.36      0.49\n3 SGP (420.07, 482.38]      12.07      0.52\n4 SGP (482.38, 544.68]      19.05      0.59\n5 SGP (544.68, 606.99]      25.13      0.66\n6 SGP  (606.99, 669.3]      21.14      0.65\n7 SGP          > 669.3      13.38      0.43\n```\n:::\n:::\n\n:::\n\nThe objective of the function was to compute the percentage of students at each proficiency level as defined by PISA. However, for the purpose of visualising binned results, recoding the variables into more meaningful and intuitive categories might help with understanding.\n\nIn the code chunk below, the 2 lowest categories *\\<= 357.77* and *(357.77, 420.07\\]* are recoded as \"low\" to represent low proficiency levels, while *\\> 669.3* and *(606.99, 669.3\\]* are recoded as \"high\" to represent high proficiency levels. The remaining 3 bins are grouped as \"average\". This recoding helps simplify the interpretation of proficiency levels for visualisation purposes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creating a new combined table\nmath_breakdown$Subject <- 'Math'\nread_breakdown$Subject <- 'Reading'\nscie_breakdown$Subject <- 'Science'\n\ncombined_breakdown <- bind_rows(math_breakdown, read_breakdown, scie_breakdown)\n\n# Recoding proficiency levels\ncombined_breakdown <-\n  combined_breakdown %>% \n  mutate(proficiency=(recode(Benchmarks, \n                            '<= 357.77'=\"Low\",\n                            '(357.77, 420.07]'=\"Low\",\n                            '(420.07, 482.38]'='Average',\n                            '(482.38, 544.68]'='Average',\n                            '(544.68, 606.99]'='Average',\n                            '(606.99, 669.3]'='High',\n                            '> 669.3'='High')))\n\n# Ordering factors\ncombined_breakdown$proficiency <- factor(combined_breakdown$proficiency, levels = c(\"Low\", \"Average\", \"High\"))\n```\n:::\n\n\nThe revamped version proposes using waffle charts to visualise proportions using `geom_waffle()`. Each square grid represents a portion of the total data, making them idea for illustrating categorical data.\n\n-   `nrow()` within the `geom_waffle()` are used to specific the number of rows in the waffle chart. `nrow=10` indicates that the chart will have 10 rows of squares.\n-   `scale_fill_manual()`allows manual specification for the fill colours of the waffle chart.\n-   `facet_wrap()` allows visualisation of subsets of the data in separate panels within the same plot.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# Generate the waffle chart\n\nwaf2 <- \n  combined_breakdown %>%\n  ggplot(aes(fill = proficiency, \n             values = Percentage)) +\n  expand_limits(x=c(0,0), \n                y=c(0,0)) +\n  coord_equal() +\n  labs(fill = NULL, \n       colour = NULL)+\n  theme_ipsum(grid=\"\")\n\nwaf2 +\n  geom_waffle(\n    n_rows = 10, \n    size = 0.33, \n    colour = \"#f5f5f5\", \n    flip = TRUE,\n    make_proportional = TRUE\n  ) +\n  scale_fill_manual(\n    values = c(\n               \"#fcd9e5\", \n               \"#f99cbc\",\n               \"#f5347f\") \n    )+\n  facet_wrap(~Subject, nrow =1, strip.position = \"bottom\") +\n  labs(title=\"A proportional perspective of subject performance\",\n       subtitle=\"Higher proportion of students with high proficiency in Math than other subjects.\") +   \n  theme(\n    legend.position = \"bottom\",\n    #panel.grid.major = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.text.x = element_blank(),\n    panel.grid = element_blank(),\n    axis.ticks.y = element_blank(),    \n    plot.title = element_markdown(hjust=0),\n    plot.subtitle = element_markdown(hjust = 0),\n    strip.text.x = element_text(hjust = 0.5, margin=margin(l=0), face =\"bold\"),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\",),\n    plot.margin = unit(c(0, 0, 0, 0), \n                                \"inches\")\n)  \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-23-1.png){width=657.6}\n:::\n:::\n\n\nAn alternative approach using mean subject scores to dichotomise proficiency levels could be explored.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# Recoding to above and below average\nproficiency <-\n  stu_SG %>% \n  select(PV1MATH, PV1READ, PV1SCIE) %>% \n  mutate(proficiency_math = \n           if_else(PV1MATH < mean_m, \"Below Average\", \"Above Average\"),\n         proficiency_read =\n           if_else(PV1READ < mean_r, \"Below Average\", \"Above Average\"),\n         proficiency_scie = \n           if_else(PV1SCIE < mean_s, \"Below Average\", \"Above Average\"))\n\n# Calculating the frequency and percentage of each category\nproficiency_summary <- proficiency %>%\n  summarize(\n    math_below_average = sum(proficiency_math == \"Below Average\"),\n    math_above_average = sum(proficiency_math == \"Above Average\"),\n    read_below_average = sum(proficiency_read == \"Below Average\"),\n    read_above_average = sum(proficiency_read == \"Above Average\"),\n    scie_below_average = sum(proficiency_scie == \"Below Average\"),\n    scie_above_average = sum(proficiency_scie == \"Above Average\")\n  ) %>%\n  mutate(\n    Math_below_average_pct = math_below_average / nrow(stu_SG) * 100,\n    Math_above_average_pct = math_above_average / nrow(stu_SG) * 100,\n    Reading_below_average_pct = read_below_average / nrow(stu_SG) * 100,\n    Reading_above_average_pct = read_above_average / nrow(stu_SG) * 100,\n    Science_below_average_pct = scie_below_average / nrow(stu_SG) * 100,\n    Science_above_average_pct = scie_above_average / nrow(stu_SG) * 100\n  )  %>%\n  select(ends_with(\"pct\")) %>% \n  pivot_longer(cols = starts_with(\"Math\") | starts_with(\"Reading_\") | starts_with(\"Science_\"),\n               names_to = c(\".value\", \"level\"),\n               names_sep = \"_\") %>% \n  pivot_longer(cols = starts_with(\"Math\") | starts_with(\"Reading\") | starts_with(\"Science\"),\n               names_to = \"subject\") %>% \n  mutate(level = factor(level, \n                levels = c(\"above\", \"below\"),\n                ordered = TRUE)) \n\n# Generate the waffle chart\n\nwaf <- \n  proficiency_summary %>%\n  ggplot(aes(fill = level, \n             values = value)) +\n  expand_limits(x=c(0,0), \n                y=c(0,0)) +\n  coord_equal() +\n  labs(fill = NULL, \n       colour = NULL)+\n  theme_ipsum(grid=\"\")\n\nwaf +\n  geom_waffle(\n    n_rows = 10, \n    size = 0.33, \n    colour = \"#f5f5f5\", \n    flip = TRUE,\n    make_proportional = TRUE\n  ) +\n  scale_fill_manual(\n    values = c(\"#f5347f\", \n               alpha(\"#65666a\", 1/3)) \n    )+\n  facet_wrap(~subject, nrow =1, strip.position = \"bottom\") +\n  labs(title=\"A proportional perspective of subject performance\",\n       subtitle=\"More than half with <span style='color: #e0218a;'>above average</span> of national subject scores.\") +   \n  theme(\n    legend.position = \"none\",\n    #panel.grid.major = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    axis.text.x = element_blank(),\n    axis.title.x = element_blank(),\n    panel.grid = element_blank(),\n    axis.ticks.y = element_blank(),    \n    plot.title = element_markdown(hjust=0),\n    plot.subtitle = element_markdown(hjust = 0),\n    strip.text.x = element_text(hjust = 0.5, margin=margin(l=0), face =\"bold\"),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n        plot.margin = unit(c(0, 0, 0, 0), \n                                \"inches\")\n)  +\n    annotate(\"text\", \n             x = 6, \n             y =2.5, \n             label = paste(\"53%\"),\n             color=\"#f5347f\",\n             size = 10)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\nIn the example above, the waffle charts efficiently convey parts of a whole using 2 colours to represent the proportion of students who performed above and below average.\n\n**Clarity**\n\n1.  **Annotation:** The annotation indicates the proportion of students who scored above the average scores, eliminating the need for manual counting of filled squares.\n2.  **Facet Wrap:** The use of facet wrap helps divide a plot into a matrix of panels, with each panel showing a distinct subset of the data.\n\n**Aesthetic**\n\n3.  **Colours**: The pink and grey colour combination serves to differentiate the contribution of students who performed above and below the average subject mean score. Each square represents a percentage point, totaling 100. The muted grey tone aims to avoid drawing excessive attention while still visually representing the full extent of the chart, allowing for a clear visualisation of proportion. In the first example, the use of multiple colours was incorporated to reflect the number of categories. Furthermore, the colour gradient helps indicate the order of variables, with intensity increasing accordingly.\n\n# 4 Summary\n\nFrom this makeover, we can already pick several checklist items for better visualisation, including\n\n1.  A meaningful chart title is a must-have,\n2.  Use annotations to add value to the story\n3.  Avoid cluttering the visualisations with too much information,\n4.  Use colour, grid-lines, and aces wisely, and last but not least,\n5.  Use the appropriate chart for the data on hand.\n\nI hope you found some inspiration from the data visualisation makeovers and perhaps even picked up a few new ideas along the way. Taking a closer look at these transformations has given me a chance to reflect on how I can improve my own work too.\n\nThere are inifinite ways to represent data. Whichever type of data visualisation you opt for, remember to make it accessible and understandable to the audience.\n\n# 5 Resources\n\nDuong, Fred. (2021). Dumbbell Chart with a Gap Column. *R Graph Gallery.* https://r-graph-gallery.com/web-dumbbell-chart-with-a-gap-column.html\n\nScherer, Cedric. (2019). The Evolution of a ggplot (Ep. 1). *Cedric Scherer*. https://www.cedricscherer.com/2019/05/17/the-evolution-of-a-ggplot-ep.-1/\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
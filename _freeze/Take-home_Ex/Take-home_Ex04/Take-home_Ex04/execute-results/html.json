{
  "hash": "850178a7afefe20f22d283653e6c7f32",
  "result": {
    "markdown": "---\ntitle: \"Take-home Exercise 4: Prototyping Modules for Shiny Application\"\ndate: \"?? Feb 2024\"\ndate-modified: \"last-modified\"\neditor: visual\ntoc-depth: 4\nexecute:\n  freeze: true #never re-render during project render\n  echo: true #if false, displays charts without codes\n  eval: true #if false, displays codes without charts\n  warning: false #dont display if there are any warnings\nformat: \n  html:\n    code-fold: false\n    code-overflow: scroll\n    code-summary: \"Show the code\"\n    code-line-numbers: false\n---\n\n\n# 1 Overview\n\nInternational large-scale assessments, such as PISA, provide structured and static data. With the goal of exploring which factors have a higher relevance in predicting student performance, this post proposes the use of multiple linear regression and random forest approach to detect and analyse factors linked to academic performance.\n\nSpecifically, this post details the steps, packages, prototypes, including the detailed breakdown of codes used for UI and Server in R Shiny as part of the model building module in preparation for the final Shiny app. \n\n# 2 Loading Data and Packages\n\n## 2.1 Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, #<< For data wrangling\n               ggplot2, patchwork, plotly, urbnthemes, # For plots\n               htmltools, reactable, #<< For dynamic tables\n               corrplot, # For corrplot\n               lmtest, # For regression analysis\n               modelr, randomForest, rpart, rpart.plot, caret,\n               performance, ggstatsplot,\n               MASS,\n               broom, vegan, recipes, DALEX, stargazer)\n```\n:::\n\n\n## 2.2 The PISA Survey Students Questionnaire\n\nThe code chunk below loads \\]our dataset into R environment, in the form of a csv file created following minor data cleaning and wrangling documented [here](https://projectpisa.netlify.app/phase1/dataprep).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstu <- read_csv(\"data/stu_SG_rcd.csv\")\nstu_encode <- read_csv(\"data/stu_SG_encode.csv\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 6,606\nColumns: 25\n$ Loneliness         <dbl> 3, 3, 3, NA, 4, 4, 3, 4, 3, 3, 3, 4, NA, NA, 3, 4, …\n$ ClassroomSafety    <dbl> 2, 1, 2, 2, 1, 2, 3, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, …\n$ TeacherSupport     <dbl> 2, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 3, 2, 1, 1, 2, …\n$ Gender             <dbl> 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, …\n$ Homework_Math      <dbl> 1, 3, 2, 3, 4, 1, 1, 2, 1, 3, 3, 4, 3, 1, 2, 1, 3, …\n$ Homework_Reading   <dbl> 1, 2, 3, 1, 3, 1, 1, 2, 1, 3, 3, 3, 2, 1, 4, 1, 3, …\n$ Homework_Science   <dbl> 2, 3, 3, 2, 4, 1, 1, 2, 1, 2, 3, 4, 3, 1, 3, 1, 3, …\n$ SchoolType         <chr> \"SGP01\", \"SGP01\", \"SGP01\", \"SGP01\", \"SGP01\", \"SGP01…\n$ ParentsEducation   <dbl> 8, 7, 4, 6, 7, 9, 6, 9, 8, 8, 4, 9, 10, 9, 6, 9, 9,…\n$ Immigration        <dbl> 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 1, 1, 3, 1, 2, 3, …\n$ HomeLanguage       <dbl> 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, …\n$ Sibling            <dbl> 4, 4, 2, 4, 4, 3, 2, 2, 3, 4, 1, 3, 4, 1, 4, 3, 2, …\n$ Aircon             <dbl> 7020002, 7020001, 7020001, 7020002, 7020002, 702000…\n$ Helper             <dbl> 7020002, 7020001, 7020002, 7020002, 7020002, 702000…\n$ Vehicle            <dbl> 2, 1, 2, 1, 2, 2, 2, 1, 3, 3, 1, 2, 2, 1, 2, 2, 1, …\n$ Books              <dbl> 7, 4, 4, 3, 2, 2, 4, 5, 7, 4, 3, 7, 4, 4, 2, 4, 5, …\n$ Exercise           <dbl> 1, 4, 2, 5, 9, 1, 2, 0, 3, 5, 1, 2, 5, 2, 4, 0, 2, …\n$ OwnRoom            <dbl> 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, …\n$ FamilyCommitment   <dbl> 10, 2, 0, 10, 5, 5, 7, 0, 0, 4, 2, 2, 10, 0, 10, 0,…\n$ Preference_Math    <dbl> 2, 4, 3, 2, 3, 3, 4, 4, 2, 3, 3, 4, 3, 4, 1, 3, 2, …\n$ Preference_Reading <dbl> 3, 3, 2, 3, 4, 3, 3, 2, 2, 2, 2, 3, 2, 2, 4, 3, 2, …\n$ Preference_Science <dbl> 3, 3, 3, 3, 4, 3, 4, 3, 3, 3, 3, 4, 2, 4, 2, 2, 2, …\n$ Math               <dbl> 605.2533, 689.9528, 676.7768, 401.0528, 436.1151, 5…\n$ Reading            <dbl> 667.4296, 627.6078, 582.9252, 361.3969, 475.6763, 4…\n$ Science            <dbl> 639.7873, 672.0703, 660.0384, 343.6425, 479.2390, 4…\n```\n:::\n:::\n\n\nThe flowchart below details the features for this model building module. \n\n\n```{mermaid}\n%%| fig-width: 8\n%%| echo: false\n\nflowchart TD\n    A[Building Explanatory Model]-->B[1. Feature Engineering - Multicollinearity, Variable Selection]\n    B-->C[2. Model Building]\n    C-.->C1[2a. Multiple Linear Regression]\n    C-.-> C2[2b. Random Forest]\n    C1-.->F[3. Model Diagnostic, Assumption Checking]\n    C2-.->F\n    F -->E[4. Model Assessment]\n    E-->D[5. Variable Importance]\n```\n\n::: {.cell}\n\n:::\n\n\n# 3 Multicollinearity\n\nRegression analysis requires numerical variables. To include categorical variables in a regression model, we will need to perform *dummy coding*.\n\nIn the code chunk below, we use [`recode()`]() to create dummy variables for *SchoolType*, *Aircon*, and *Helper* variables from our dataset. The remaining variables in our dataset are already in numerical datatype.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# Data for correlation matrix\n\ncols <- c('SchoolType', 'Aircon', 'Helper')\n\nstu_encode <- stu_encode %>% \n  mutate(SchoolType = recode(SchoolType,\n                             \"SGP01\" = 1,\n                             \"SGP03\" = 2),\n         Aircon = recode(Aircon,\n                         \"7020001\" = 1,\n                         \"7020002\" = 2),\n         Helper = recode(Helper,\n                         \"7020001\" = 1,\n                         \"7020002\" = 2))\n```\n:::\n\n\n`cor()` calculates correlation coefficients, the function needs two inputs: the x-coordinates and the y-coordinates. The argument `use = \"complete.obs\"` excludes missing values from the calculation of the correlation coefficient. Altogether, the code chunk below returns the correlation coefficient for each pair of survey participants who had valid responses for each question we have narrowed down to.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstu.cor <- cor(stu_encode[, 1:22], #<< cor(dataset()[,input$variables], checkbox for variable selection\n               use = \"pairwise.complete.obs\", #<< input$corUse, allow user to choose \"complete.obs\", \"na.or.complete\"\n               method = \"pearson\") #<< input$corMethod for selection of other methods like Kendall's Tau or Spearman's Rho\n```\n:::\n\n\n`formals()` function returns the argument list of the function specified. This can be used in the sidebar to display the options for user selection.\n\n\n::: {.cell}\n\n```{.r .cell-code}\neval(formals(cor)$method)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"pearson\"  \"kendall\"  \"spearman\"\n```\n:::\n:::\n\n::: {.cell fig.asp='0.7'}\n\n```{.r .cell-code}\npar(bg = \"#f5f5f5\")\n\nstu.sig = cor.mtest(stu.cor, \n                    conf.level= .95) #<< input$sigLevel for user to choose confidence levels\n\n## CORRPLOT ##\n#~~ ui: mainPanel(plotOutput(\"corrplot\")) ~~#\n#~~ server: output$corrplot <- renderPlot({...}) ~~#\n\ncorrplot(stu.cor,\n         method = \"number\", #<< input$corMethod for other alternatives like number, colour, ellipse\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"#7C6D62\",\n         tl.srt = 45,\n         p.mat = stu.sig$p, #<< if(input$sigTest) stu.sig$p else NULL\n         sig.level = 0.05, #<< ?? Check with Prof Kam if this should be derived?\n         tl.cex = 0.8,\n         number.cex = 0.8,\n         cl.cex = 0.8,\n         cl.ratio = 0.1,\n         bg=\"#f5f5f5\") #<< To change according to Shiny page's background\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex04_files/figure-html/unnamed-chunk-9-1.png){width=1344}\n:::\n:::\n\n\n+------------------------+--------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------+\n| Function               | Feature                                                                                                                              | UI                                                                                                                                       | Server                                                        |\n+========================+======================================================================================================================================+==========================================================================================================================================+===============================================================+\n| **stu.cor**            | Checkbox for variable selection; [**sortable**](https://rstudio.github.io/sortable/) package allows drag-and-drop to order variables | Within ***sidebarPanel***():                                                                                                             | stu_bm \\<- eventReactive(input\\$bm_action,\\                   |\n|                        |                                                                                                                                      |                                                                                                                                          | {stu_encode %\\>%\\                                             |\n|                        |                                                                                                                                      | [***sortableCheckboxGroupInput***](https://yang-tang.github.io/shinyjqui/reference/sortableCheckboxGroupInput.html)(\\                    | select(input\\$bm_vars)})                                      |\n|                        |                                                                                                                                      | inputId = \"bm_vars\",\\                                                                                                                    |                                                               |\n|                        |                                                                                                                                      | label = \"Variables to show:\",\\                                                                                                           | cor(stu_bm, use = `input$corUse`, method = `input$corMethod`) |\n|                        |                                                                                                                                      | choices = colnames(*stu_encode*\\[,1:22\\]),\\                                                                                              |                                                               |\n|                        |                                                                                                                                      | selected = input\\$variables\\                                                                                                             |                                                               |\n|                        |                                                                                                                                      | )                                                                                                                                        |                                                               |\n+------------------------+--------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------+\n|                        | Treatment of NA values                                                                                                               | Within mainPanel() \\> tabsetPanel() \\> ***tabPanel***(\"Collinearity\", column(3, \\[\\]), column(9, plotOutput(\"corrPlot\", height = 400))): | `input$corUse`                                                |\n|                        |                                                                                                                                      |                                                                                                                                          |                                                               |\n|                        |                                                                                                                                      | ***selectInput***(\\                                                                                                                      |                                                               |\n|                        |                                                                                                                                      | inputID = \"corUse\",\\                                                                                                                     |                                                               |\n|                        |                                                                                                                                      | label = \"Handling NA Values\",\\                                                                                                           |                                                               |\n|                        |                                                                                                                                      | choices = c(\"everything\", \"all.obs\", \"complete.obs\", \"na.or.complete\", \"pairwise.complete.obs\")                                          |                                                               |\n+------------------------+--------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------+\n|                        | Correlation Method                                                                                                                   | Within tabsetPanel():                                                                                                                    | `input$corMethod`                                             |\n|                        |                                                                                                                                      |                                                                                                                                          |                                                               |\n|                        |                                                                                                                                      | ***selectInput***(\\                                                                                                                      |                                                               |\n|                        |                                                                                                                                      | inputID = \"corMethod\",\\                                                                                                                  |                                                               |\n|                        |                                                                                                                                      | label = \"Correlation Method\",\\                                                                                                           |                                                               |\n|                        |                                                                                                                                      | choices = eval(formals(cor)\\$method)                                                                                                     |                                                               |\n+------------------------+--------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------+\n| **cor.mtest**          | To indicate if user wants to show statistical significance; if *yes*, allow option to set confidence level.                          | Within tabsetPanel():                                                                                                                    | `input$confLevel`                                             |\n|                        |                                                                                                                                      |                                                                                                                                          |                                                               |\n|                        |                                                                                                                                      | ***checkboxInput***(\"sigTest\", \"Show Significance Test?\"),                                                                               |                                                               |\n|                        |                                                                                                                                      |                                                                                                                                          |                                                               |\n|                        |                                                                                                                                      | *\\~Only show option to select significance level if Significance Test is select\\~*\\                                                      |                                                               |\n|                        |                                                                                                                                      | conditionalPanel(\"input.sigTest\", numericInput(\"sigLevel\", \"Significance Level\",\\                                                        |                                                               |\n|                        |                                                                                                                                      | value = 0.05,\\                                                                                                                           |                                                               |\n|                        |                                                                                                                                      | min = 0,\\                                                                                                                                |                                                               |\n|                        |                                                                                                                                      | max = 1,\\                                                                                                                                |                                                               |\n|                        |                                                                                                                                      | step = 0.01))                                                                                                                            |                                                               |\n+------------------------+--------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------+\n| **corrplot**           | Plot display method                                                                                                                  | Within tabsetPanel():                                                                                                                    | `input$corMethod`                                             |\n|                        |                                                                                                                                      |                                                                                                                                          |                                                               |\n|                        |                                                                                                                                      | ***selectInput***(\"plotMethod\", \"Plot Method\", list(\"mixed\", all = eval(formals(corrplot)\\$method)), \"number\")                           |                                                               |\n+------------------------+--------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------+\n| **Build model button** | Build model button once selection is complete.                                                                                       | ***actionButton***(inputId = \"bm_action\", label = \"Click to start building\")                                                             |                                                               |\n+------------------------+--------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------+\n\n: {tbl-colwidths=\"\\[10,20,35,35\\]\"}\n\n# 4 Model Building\n\n### Multiple Linear Regression\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Data for Multiple Linear Regression ##\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#stu_lm <- lm(Math ~ \n#               Loneliness + ClassroomSafety + TeacherSupport + Gender + Homework_Math + Homework_Reading + Homework_Science + SchoolType+ ParentsEducation + Immigration + HomeLanguage + Sibling + Aircon + Helper + Vehicle + Books + Exercise + OwnRoom + FamilyCommitment + Preference_Math + Preference_Reading + Preference_Science, \n#             data = stu_small)\n\n#summary(stu_lm)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#stu_lm_diag <- augment(stu_lm)\n```\n:::\n\n\n### Random Forest & Tunable Hyperparameters\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Data for Random Forest ##\n\n# Set the seed before splitting the data\nset.seed(1234)\n\n# Remove missing cases & convert variables to factor datatype our dataset\nstu_rcd_small <- stu %>% \n  na.omit() %>% \n  mutate(across(1:22, as.factor))\n\n# Select columns based on user preference\nstu_rcd_small <- stu_rcd_small %>% \n  dplyr::select(c(1:22, \"Math\")) #<< User should be able to pick subject & vars of interest here\n\n# Split the data into training and test\nindex <- createDataPartition(stu_rcd_small$Math, #<< input$bm_target\n                             p = 0.8, #<< input$rf_partition\n                             list = FALSE) \n\ntrain_stu <- stu_rcd_small[index, ]\ntest_stu  <- stu_rcd_small[-index, ]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstu_rf <- randomForest(Math ~., #<< input$bm_target ~.\n                       data = train_stu,\n                       importance = TRUE,\n                       ntree = 500)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(stu_rf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\n randomForest(formula = Math ~ ., data = train_stu, importance = TRUE,      ntree = 500) \n               Type of random forest: regression\n                     Number of trees: 500\nNo. of variables tried at each split: 7\n\n          Mean of squared residuals: 6201.33\n                    % Var explained: 36.49\n```\n:::\n:::\n\n\n+------------+---------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------------------------------------------------------+\n| Function   | Feature                                                                                                                                     | UI                                                                                       | Server                                                    |\n+============+=============================================================================================================================================+==========================================================================================+===========================================================+\n| **stu_rf** | Select subject, variables *(synchronised with variable selection for correlation matrix in Section 3),* partition size, and number of trees | Within ***sidebarPanel***():                                                             | stu_rf_dataset \\<- eventReactive(\\                        |\n|            |                                                                                                                                             |                                                                                          | input\\$bm_action, {\\                                      |\n|            |                                                                                                                                             | selectInput(\\                                                                            | stu_rcd_small\\[, c(input\\$bm_vars \\| input\\$bm_target)\\]\\ |\n|            |                                                                                                                                             | inputId = \"bm_target\", \\                                                                 | })                                                        |\n|            |                                                                                                                                             | label = \"Subject\",\\                                                                      |                                                           |\n|            |                                                                                                                                             | choices = c(\"Math\", \"Reading\", \"Science\")                                                | stu_rfmb_index \\<- eventReactive(\\                        |\n|            |                                                                                                                                             |                                                                                          | input\\$bm_action, {\\                                      |\n|            |                                                                                                                                             | Within ***mainPanel***() \\> tabsetPanel() \\> ***sliderInput***(\\                         | createDataPartition(\\                                     |\n|            |                                                                                                                                             | inputId = \"rf_partition\",\\                                                               | stu_rf_dataset()*\\[, input\\$bm_target\\]*,\\                |\n|            |                                                                                                                                             | label = \"Train-Test Partition Ratio:\",\\                                                  | p = input\\$rf_partition,\\                                 |\n|            |                                                                                                                                             | min = 0.5,\\                                                                              | list = FALSE)\\                                            |\n|            |                                                                                                                                             | max = 0.95,\\                                                                             | })                                                        |\n|            |                                                                                                                                             | value = c(0.8)))                                                                         |                                                           |\n|            |                                                                                                                                             |                                                                                          | stu_rf_train \\<- eventReactive(\\                          |\n|            |                                                                                                                                             | Within ***mainPanel***() \\> tabsetPanel() \\> ***numericInput***(inputId = \"rf_treenum\",\\ | input\\$bm_action, {\\                                      |\n|            |                                                                                                                                             | label = \"Number of Trees (Pick between 3 to 500):\",\\                                     | stu_rf_dataset()\\[stu_rfmb_index(),\\]\\                    |\n|            |                                                                                                                                             | min = 5,\\                                                                                | })                                                        |\n|            |                                                                                                                                             | max = 500,\\                                                                              |                                                           |\n|            |                                                                                                                                             | value = 50)),                                                                            | stu_rf_test \\<- eventReactive(\\                           |\n|            |                                                                                                                                             |                                                                                          | input\\$bm_action, {\\                                      |\n|            |                                                                                                                                             |                                                                                          | stu_rf_dataset()\\[-stu_rfmb_index(),\\]\\                   |\n|            |                                                                                                                                             |                                                                                          | })                                                        |\n|            |                                                                                                                                             |                                                                                          |                                                           |\n|            |                                                                                                                                             |                                                                                          | stu_rf \\<- eventReactive(\\                                |\n|            |                                                                                                                                             |                                                                                          | input\\$bm_action, {\\                                      |\n|            |                                                                                                                                             |                                                                                          | randomForest(input\\$bm_target \\~.,\\                       |\n|            |                                                                                                                                             |                                                                                          | data = stu_rf_train ,\\                                    |\n|            |                                                                                                                                             |                                                                                          | importance = TRUE,\\                                       |\n|            |                                                                                                                                             |                                                                                          | ntree = input\\$rf_treenum)})                              |\n+------------+---------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------------------------------------------------------+\n\n: {tbl-colwidths=\"\\[10,20,35,35\\]\"}\n\n# 5 Model Assessment\n\n## Multiple Linear Regression\n\n\n::: {.cell}\n\n:::\n\n\n### Random Forest - RMSE\n\nRoot mean square error (RMSE) is used to estimate how well our random forest was able to predict our test set outcomes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict_rf <- bind_cols(\n   Actual = test_stu$Math, \n   Predicted = predict(stu_rf, newdata = test_stu),\n   Residuals = predict(stu_rf, newdata = test_stu) - test_stu$Math\n)\n\npredict_rf_rmse <- RMSE(pred = predict_rf$Predicted, obs = predict_rf$Actual)\npredict_rf_rmse\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 77.59298\n```\n:::\n:::\n\n\n+---------------+--------------------------------------------------------------------------------------------------------------------+---------------------------------------------+-----------------------------------------------------------------+\n| Function      | Feature                                                                                                            | UI                                          | Server                                                          |\n+===============+====================================================================================================================+=============================================+=================================================================+\n| **predict()** | Model to be updated when response and explanatory variables are selected and 'Build Model' is clicked.             | \\-                                          | [Calculate RMSE]{.underline}                                    |\n|               |                                                                                                                    |                                             |                                                                 |\n|               |                                                                                                                    |                                             | predict_rf \\<- eventReactive(\\                                  |\n|               |                                                                                                                    |                                             | input\\$bm_action, {\\                                            |\n|               |                                                                                                                    |                                             | bind_cols(\\                                                     |\n|               |                                                                                                                    |                                             | Actual = stu_rf_test*()\\$input\\$bm_target*,\\                    |\n|               |                                                                                                                    |                                             | Predicted = predict(*stu_rf()*,\\                                |\n|               |                                                                                                                    |                                             | newdata = *stu_rf_test()*), Residuals = predict(*stu_rf()*,\\    |\n|               |                                                                                                                    |                                             | newdata = *stu_rf_test()* - *stu_rf_test()\\$input\\$bm_target*)\\ |\n|               |                                                                                                                    |                                             | })                                                              |\n|               |                                                                                                                    |                                             |                                                                 |\n|               |                                                                                                                    |                                             | predict_rf_rmse \\<- eventReactive(\\                             |\n|               |                                                                                                                    |                                             | input\\$bm_action, { caret::RMSE(\\                               |\n|               |                                                                                                                    |                                             | pred = *predict_rf()\\$Predicted*,\\                              |\n|               |                                                                                                                    |                                             | obs = *predict_rf()\\$Actual*)\\                                  |\n|               |                                                                                                                    |                                             | })                                                              |\n+---------------+--------------------------------------------------------------------------------------------------------------------+---------------------------------------------+-----------------------------------------------------------------+\n| **RMSE()**    | Metrics displayed to be updated when response and explanatory variables are selected and 'Build Model' is clicked. | Within mainPanel():                         | [Display RMSE]{.underline}                                      |\n|               |                                                                                                                    |                                             |                                                                 |\n|               |                                                                                                                    | fluidRow( div(\\                             | rf_display_RMSE = function(){\\                                  |\n|               |                                                                                                                    | ***valueBoxOutput***(\"rf_rmse\", width = 4)) | output\\$rf_rmse = ***renderValueBox***(\\                        |\n|               |                                                                                                                    |                                             | valueBox(\\                                                      |\n|               |                                                                                                                    |                                             | value = *predict_rf_rmse()*)\\                                   |\n|               |                                                                                                                    |                                             | )}                                                              |\n|               |                                                                                                                    |                                             |                                                                 |\n|               |                                                                                                                    |                                             | observeEvent(input\\$bm_action, *rf_display_RMSE()*)             |\n+---------------+--------------------------------------------------------------------------------------------------------------------+---------------------------------------------+-----------------------------------------------------------------+\n\n: {tbl-colwidths=\"\\[10,20,35,35\\]\"}\n\n# 6 Model Diagnostics\n\n## Multiple Linear Regression\n\nWe will focus on three plots to check if assumptions of multiple linear model are met:\n\n1.  **Residuals vs. fitted values plot:** This plot serves mainly to check the linearity, although lack of homoscedasticity or independence can also be detected. For linearity, we expect the line (a non-linear fit of the mean of the residuals) to be almost flat. This means that the trend of Y-values is linear with respect to the variables. Heteroskedasticity can be detected also in the form of irregular vertical dispersion around the red line. The dependence between residuals can be detected (harder) in the form of non randomly spread residuals.\n\n2.  **QQ-plot:** In linear regression, residuals should be normally distributed. This can be checked using so-called Q-Q plots (quantile-quantile plot) to compare the shapes of distributions. This plot shows the quantiles of the studentized residuals versus fitted values. Usually, dots should fall along the reference line. If there is some deviation (mostly at the tails), this indicates that the model doesn't predict the outcome well for the range that shows larger deviations from the reference line.\n\n3.  **Scale-location plot:** Serves for checking the homoscedasticity. To meet this assumption, the variance of the residuals across different values of variables is similar and does not notably increase or decrease. Hence, the desired pattern would be that dots spread equally above and below a roughly straight, horizontal line and show no apparent deviation.\n\n\n::: {.cell fig.asp='0.5'}\n\n```{.r .cell-code}\n## MLR DIAGNOSTIC PLOTS ##\n#~~ ui: mainPanel(plotOutput(\"diagplot\")) ~~#\n#~~ server: output$diagplot <- renderPlot({...}) ~~#\n\npar(bg = \"#f5f5f5\")\n\npar(mfrow=c(1,3))\n#plot(stu_lm, 1, pch = 19, col = rgb(0, 0, 0, 0.15))\n#plot(stu_lm, 2, pch = 19, col = rgb(0, 0, 0, 0.15))\n#plot(stu_lm, 3, pch = 19, col = rgb(0, 0, 0, 0.15))\n```\n:::\n\n\n+------------------+--------------------------------------------------------------------------------------------------------+---------------------+--------------------------------------------------------------------------------------------------------+\n| Function         | Feature                                                                                                | UI                  | Server                                                                                                 |\n+==================+========================================================================================================+=====================+========================================================================================================+\n| **plot(stu_lm)** | Plots to be updated when response and explanatory variables are selected and 'Build Model' is clicked. | Within mainPanel(): | This has to be wrapped in `reactive({ })` as it is reacting to inputs (when user clicks 'Build Model'. |\n|                  |                                                                                                        |                     |                                                                                                        |\n|                  |                                                                                                        | div(\\               | lm_diagplot \\<- eventReactive(input\\$bm_action\\_, { *plot(...)\\                                        |\n|                  |                                                                                                        | plotOutput(\\        | *})                                                                                                    |\n|                  |                                                                                                        | \"diagplots\")        |                                                                                                        |\n|                  |                                                                                                        |                     | output\\$diagplots \\<- renderPlot({lm_diagplot()\\                                                       |\n|                  |                                                                                                        |                     | })                                                                                                     |\n+------------------+--------------------------------------------------------------------------------------------------------+---------------------+--------------------------------------------------------------------------------------------------------+\n\n: {tbl-colwidths=\"\\[10,20,35,35\\]\"}\n\n## Random Forest\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrf_predvsactual <- \n  predict_rf %>%\n   ggplot(aes(x = Actual, y = Predicted)) +\n   geom_point(alpha = 0.6, color = \"#73b2c4\") +\n   geom_smooth(method = \"loess\", formula = \"y ~ x\") +\n   geom_abline(intercept = 0, slope = 1, linetype = 2) +\n   labs(title = \"Predicted vs Actual\") +\n   theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\nrf_residvsactual <- \n  predict_rf %>%\n   ggplot(aes(x = Actual, y = Residuals)) +\n   geom_point(alpha = 0.6, color = \"#73b2c4\") +\n   geom_smooth(method = \"loess\", formula = \"y ~ x\") +\n   geom_hline(yintercept = 0, linetype = 2) +\n   labs(title = \"Residuals vs Actual\") +\n   theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\nrf_residvsfitted <- \n  predict_rf %>%\n   ggplot(aes(x = Predicted, y = Residuals)) +\n   geom_point(alpha = 0.6, color = \"#73b2c4\") +\n   geom_smooth(method = \"loess\", formula = \"y ~ x\") +\n   geom_hline(yintercept = 0, linetype = 2) +\n   labs(title = \"Residuals vs Actual\") +\n   theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\nrf_predvsactual + rf_residvsactual + rf_residvsfitted\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex04_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n1.  **Predicted vs Actual:** This is a scatter plot that helps you visualize the performance of a regression model. The x-axis represents the actual values, and the y-axis represents the predicted values. Ideally, if the predictions are perfect, the points will lie along a straight line with a slope of 1.\n\n2.  **Residuals vs Observed:** Middle plot above shows a scatter plot of residuals (vertical axis) in function of the observed (horizontal axis) values of the dependent variable. For a \"perfect\" predictive model, we would expect the horizontal line at zero. For a \"good\" model, we would like to see a symmetric scatter of points around the horizontal line at zero, indicating random deviations of predictions from the observed values. The plot in shows that, for the large observed values of the dependent variable, the residuals are negative, while for small values they are posutive. This trend is clearly captured by the smoothed curve included in the graph. Thus, the plot suggests that the predictions are shifted towards the average.\n\n3.  **Residuals vs. fitted values plot:** Refer to MLR section for elaboration.\n\n+------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+----------------------------------+-------------------------------------------+\n| Function                                                         | Feature                                                                                                | UI                               | Server                                    |\n+==================================================================+========================================================================================================+==================================+===========================================+\n| **Predicted vs Actual graphs and Residual plots using ggplot()** | Plots to be updated when response and explanatory variables are selected and 'Build Model' is clicked. | Within mainPanel():              | rf_plot_predvsactual \\<- eventReactive(\\  |\n|                                                                  |                                                                                                        |                                  | input\\$bm_action\\_, { \\                   |\n|                                                                  |                                                                                                        | plotOutput(\"rf_predvsactual\")\\   | ggplot(data = *predict_rf, ...)\\          |\n|                                                                  |                                                                                                        | \\                                | *})                                       |\n|                                                                  |                                                                                                        | plotOutput(\"rf_residvsactual \")\\ |                                           |\n|                                                                  |                                                                                                        | \\                                | output\\$rf_predvsactual \\<-\\              |\n|                                                                  |                                                                                                        | plotOutput(\"rf_residvsfitted \")\\ | renderPlot({\\                             |\n|                                                                  |                                                                                                        |                                  | rf_plot_predvsactual()\\                   |\n|                                                                  |                                                                                                        |                                  | })                                        |\n|                                                                  |                                                                                                        |                                  |                                           |\n|                                                                  |                                                                                                        |                                  | rf_plot_residvsactual \\<- eventReactive(\\ |\n|                                                                  |                                                                                                        |                                  | input\\$bm_action\\_, { \\                   |\n|                                                                  |                                                                                                        |                                  | ggplot(data = *predict_rf, ...)\\          |\n|                                                                  |                                                                                                        |                                  | *})                                       |\n|                                                                  |                                                                                                        |                                  |                                           |\n|                                                                  |                                                                                                        |                                  | output\\$rf_residvsactual \\<-\\             |\n|                                                                  |                                                                                                        |                                  | renderPlot({\\                             |\n|                                                                  |                                                                                                        |                                  | rf_plot_residvsactual()\\                  |\n|                                                                  |                                                                                                        |                                  | })                                        |\n|                                                                  |                                                                                                        |                                  |                                           |\n|                                                                  |                                                                                                        |                                  | rf_plot_residvsfitted \\<- eventReactive(\\ |\n|                                                                  |                                                                                                        |                                  | input\\$bm_action\\_, { \\                   |\n|                                                                  |                                                                                                        |                                  | ggplot(data = *predict_rf, ...)\\          |\n|                                                                  |                                                                                                        |                                  | *})                                       |\n|                                                                  |                                                                                                        |                                  |                                           |\n|                                                                  |                                                                                                        |                                  | output\\$rf_residvsfitted \\<-\\             |\n|                                                                  |                                                                                                        |                                  | renderPlot({\\                             |\n|                                                                  |                                                                                                        |                                  | rf_plot_residvsfitted ()\\                 |\n|                                                                  |                                                                                                        |                                  | })                                        |\n+------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+----------------------------------+-------------------------------------------+\n\n# 7 Variable Selection / Importance\n\n## Multiple Linear Regression\n\nAIC is Akaike's Information Criterion, and estimates the out-of-sample prediction error and relative quality of a statistical model. A higher number indicates more information lost. Lower numbers for AIC = higher quality models.\n\nBIC is the Bayesian Information Criterion, which like AIC, penalizes models for the number of parameters to reduce overfitting. BIC also considers the number of observations in the data, which AIC does not. Lower values of BIC are better, and BIC is generally always higher than AIC, but absolute values do not matter, only relative values when comparing models on the same dataset for the same outcome. If we improve the model (with useful predictor variables), the BIC should go down.\n\nModel selection also involves a search procedure:\n\n-   \"backward\": start with all possible variables in the model, then consider how deleting a single predictor will affect a chosen metric.\n-   \"forward\": starts with a model using no variables, and adds variables sequentially until it finds a good model or reaches the full model with all the variables.\n-   \"backward/forward\" (default) and \"forward/backward\": combination of the above. Stepwise search checks going both backwards and forwards at every step. It considers the addition of any variable not currently in the model, as well as the removal of any variable currently in the model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#stepAIC(stu_lm, \n#         direction = \"backward\",\n#         criterion = \"AIC\")\n```\n:::\n\n\n## Random Forest\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrf_varimp <- importance(stu_rf) %>% \n  as.data.frame() %>% \n  rownames_to_column() %>% \n  rename(\"Variable\" = rowname) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbar_chart <- function(label, width = \"100%\", height = \"1rem\", fill = \"#73b2c4\", background = \"#f5f5f5\") {\n  bar <- div(style = list(background = fill, width = width, height = height))\n  chart <- div(style = list(flexGrow = 1, marginLeft = \"0.5rem\", background = \"#f5f5f5\"), bar)\n  div(style = list(display = \"flex\", alignItems = \"center\"), label, chart)\n}\n\ntab_varimp <- \n  reactable(data = rf_varimp,\n         \n          columns = list(\n            `%IncMSE` = colDef(\n              name = \"% Increase in Mean Square Error\",\n              align = 'left',\n              cell = function (value) {\n                width <- paste0(value, \"%\")\n                bar_chart(round(value,2), width = width)\n              }),\n            IncNodePurity = colDef(\n              name = \"Increase in Node Purity\",\n              align = 'left',\n              cell = function (value) {\n                width <- paste0(value/ max(rf_varimp$IncNodePurity) *100, \"%\")\n                bar_chart(format(as.numeric(value), nsmall = 0, big.mark=\",\"), width = width, fill = \"#f27279\", background = \"#f5f5f5\")\n              })            \n          ))\n\ntab_varimp\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"reactable html-widget html-fill-item\" id=\"htmlwidget-3c7665a0f761b2542316\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-3c7665a0f761b2542316\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Variable\":[\"Loneliness\",\"ClassroomSafety\",\"TeacherSupport\",\"Gender\",\"Homework_Math\",\"Homework_Reading\",\"Homework_Science\",\"SchoolType\",\"ParentsEducation\",\"Immigration\",\"HomeLanguage\",\"Sibling\",\"Aircon\",\"Helper\",\"Vehicle\",\"Books\",\"Exercise\",\"OwnRoom\",\"FamilyCommitment\",\"Preference_Math\",\"Preference_Reading\",\"Preference_Science\"],\"%IncMSE\":[4.76547557592906,12.6646471564285,11.5399826062075,13.5097324935237,13.5166483420923,11.4031544388094,23.3188694851857,5.66392676979986,32.1678097214446,12.6862620737461,9.98400271937289,19.8637774409613,12.9008340801547,3.37561111782141,5.1701018544959,62.984011126236,32.8138453580136,3.61385051967585,22.1439790891588,37.2871192220116,18.4798632726722,21.7851446116292],\"IncNodePurity\":[1259347.25027272,1108715.59036375,1309475.75031547,667161.936061374,1747266.44132147,1425324.40382199,2040694.83522924,185915.57947435,2280069.24668403,894719.831384769,595228.526316091,2216470.71203833,502929.100988251,422784.410280887,1001841.72967054,5152772.30443463,4431121.14125866,468848.067345863,4035633.42684879,2398338.1727581,1704904.18473843,1853705.77550811]},\"columns\":[{\"id\":\"Variable\",\"name\":\"Variable\",\"type\":\"character\"},{\"id\":\"%IncMSE\",\"name\":\"% Increase in Mean Square Error\",\"type\":\"numeric\",\"cell\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"4.77\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"4.76547557592906%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"12.66\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"12.6646471564285%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"11.54\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"11.5399826062075%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"13.51\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"13.5097324935237%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"13.52\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"13.5166483420923%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"11.4\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"11.4031544388094%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"23.32\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"23.3188694851857%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"5.66\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"5.66392676979986%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"32.17\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"32.1678097214446%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"12.69\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"12.6862620737461%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"9.98\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"9.98400271937289%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"19.86\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"19.8637774409613%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"12.9\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"12.9008340801547%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"3.38\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"3.37561111782141%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"5.17\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"5.1701018544959%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"62.98\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"62.984011126236%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"32.81\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"32.8138453580136%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"3.61\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"3.61385051967585%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"22.14\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"22.1439790891588%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"37.29\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"37.2871192220116%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"18.48\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"18.4798632726722%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"21.79\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#73b2c4\",\"width\":\"21.7851446116292%\",\"height\":\"1rem\"}},\"children\":[]}]}]}],\"align\":\"left\"},{\"id\":\"IncNodePurity\",\"name\":\"Increase in Node Purity\",\"type\":\"numeric\",\"cell\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"1,259,347\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"24.4401882301084%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"1,108,716\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"21.5168752830308%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"1,309,476\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"25.4130334691579%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"667,161.9\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"12.9476308411143%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"1,747,266\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"33.9092499743821%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"1,425,324\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"27.6613116126888%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"2,040,695\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"39.6038232365314%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"185,915.6\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"3.6080689867539%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"2,280,069\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"44.2493693098321%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"894,719.8\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"17.3638534467115%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"595,228.5\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"11.551617093653%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"2,216,471\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"43.0151107226447%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"502,929.1\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"9.76035949726354%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"422,784.4\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"8.20498918450221%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"1,001,842\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"19.44277120121%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"5,152,772\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"100%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"4,431,121\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"85.9948951643972%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"468,848.1\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"9.09894789921841%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"4,035,633\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"78.3196537400964%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"2,398,338\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"46.544617752545%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"1,704,904\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"33.0871244450513%\",\"height\":\"1rem\"}},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"style\":{\"display\":\"flex\",\"alignItems\":\"center\"}},\"children\":[\"1,853,706\",{\"name\":\"div\",\"attribs\":{\"style\":{\"flexGrow\":1,\"marginLeft\":\"0.5rem\",\"background\":\"#f5f5f5\"}},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"background\":\"#f27279\",\"width\":\"35.9749211878187%\",\"height\":\"1rem\"}},\"children\":[]}]}]}],\"align\":\"left\"}],\"dataKey\":\"92270f4cb3cb0bc1cb41cf4a9aef7285\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n+----------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+-------------------------------+-----------------------------------------------+\n| Function                                                       | Feature                                                                                                | UI                            | Server                                        |\n+================================================================+========================================================================================================+===============================+===============================================+\n| **rf_varimp & [reactable](https://glin.github.io/reactable/)** | Plots to be updated when response and explanatory variables are selected and 'Build Model' is clicked. | Within ***sidebarPanel***():  | rf_varimp \\<- eventReactive(\\                 |\n|                                                                |                                                                                                        |                               | input\\$rf_action\\_, {\\                        |\n|                                                                |                                                                                                        | reactableOutput(\"tab_varimp\") | importance(stu_rf) %\\>% as.data.frame() %\\>%\\ |\n|                                                                |                                                                                                        |                               | rownames_to_column() %\\>%\\                    |\n|                                                                |                                                                                                        |                               | rename(\"Variable\" = rowname)\\                 |\n|                                                                |                                                                                                        |                               | })                                            |\n|                                                                |                                                                                                        |                               |                                               |\n|                                                                |                                                                                                        |                               | output\\$tab_varimp \\<- renderReactable({\\     |\n|                                                                |                                                                                                        |                               | reactable(...)\\                               |\n|                                                                |                                                                                                        |                               | })                                            |\n+----------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+-------------------------------+-----------------------------------------------+\n\n: {tbl-colwidths=\"\\[10,20,35,35\\]\"}\n\n# 8\n",
    "supporting": [
      "Take-home_Ex04_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/core-js-2.5.3/shim.min.js\"></script>\r\n<script src=\"../../site_libs/react-18.2.0/react.min.js\"></script>\r\n<script src=\"../../site_libs/react-18.2.0/react-dom.min.js\"></script>\r\n<script src=\"../../site_libs/reactwidget-1.0.0/react-tools.js\"></script>\r\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\r\n<link href=\"../../site_libs/reactable-0.4.4/reactable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/reactable-binding-0.4.4/reactable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
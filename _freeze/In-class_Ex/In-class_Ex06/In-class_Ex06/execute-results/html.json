{
  "hash": "54b96319db4c39e49dbc47aadc182d7e",
  "result": {
    "markdown": "---\ntitle: \"In-class Exercise 6: Horizon Graph\"\ndate: \"24 Feb 2024\"\ndate-modified: \"last-modified\"\nauthor: \"Prof. Kam's #1 Fan!\" \neditor: visual\ntoc-depth: 4\nexecute:\n  freeze: true #never re-render during project render\n  echo: true #if false, displays charts without codes\n  eval: true #if false, displays codes without charts\n  warning: false #dont display if there are any warnings\n  message: false\nformat: \n  html:\n    code-fold: false\n    code-overflow: scroll\n    code-summary: \"Show the code\"\n    code-line-numbers: false\n---\n\n\n![](images/horiplot.PNG){fig-align=\"center\"}\n\n# 1 Overview\n\nBuilding horizon plot with ggHoriPlot!\n\n\n# Step 1: Getting Started\n\n:::panel-tabset\n\n## Loading Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggHoriPlot, \n               ggthemes,\n               tidyverse)\n```\n:::\n\n\n## Importing Data\n\nFor the purpose of this hands-on exercise, [Average Retail Prices Of Selected Consumer Items](https://tablebuilder.singstat.gov.sg/table/TS/M212891) will be used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naverp <- read_csv(\"data/AVERP.csv\") %>%\n  mutate(`Date` = dmy(`Date`))\n```\n:::\n\n\n:::\n\n\n# Step 2: Summary Statistics\n\nRun summary statistics to determine `origin` and `horizonscale`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(averp$Values)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.330   2.230   3.910   8.726  12.550  68.200 \n```\n:::\n:::\n\n\n\n# Step 3: Plotting the Horizon Graph\n\n:::panel-tabset\n\n## Origin = Midpoint\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n#| fig-width: 12\n#| fig-height: 10\n\naverp %>% \n  filter(Date >= \"2018-01-01\") %>%\n  ggplot() +\n  geom_horizon(aes(x = Date, y=Values), \n               origin = \"midpoint\", \n               horizonscale = 6,\n               show.legend = TRUE)+\n  facet_grid(`Consumer Items`~.) +   #<< Each row is a facet by Consumer Item\n    theme_few() +\n  scale_fill_hcl(palette = 'RdBu') +\n  theme(panel.spacing.y=unit(0, \"lines\"), strip.text.y = element_text(\n    size = 5, angle = 0, hjust = 0),\n    legend.position = 'Bottom',\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(size=7),\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n    panel.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n    legend.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n    strip.background =element_rect(fill=\"#f5f5f5\")\n    ) +\n    scale_x_date(expand=c(0,0), date_breaks = \"3 month\", date_labels = \"%b%y\") +\n  ggtitle('Average Retail Prices of Selected Consumer Items (Jan 2018 to Dec 2022)')\n```\n\n::: {.cell-output-display}\n![](In-class_Ex06_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Origin = \"Min\"\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n#| fig-width: 12\n#| fig-height: 10\naverp %>% \n  filter(Date >= \"2018-01-01\") %>%\n  ggplot() +\n  geom_horizon(aes(x = Date, y=Values), \n               origin = \"min\", \n               horizonscale = 6,\n               show.legend = TRUE)+\n  facet_grid(`Consumer Items`~.) +   #<< Each row is a facet by Consumer Item\n    theme_few() +\n  scale_fill_hcl(palette = 'RdBu') +\n  theme(panel.spacing.y=unit(0, \"lines\"), strip.text.y = element_text(\n    size = 5, angle = 0, hjust = 0),\n    legend.position = 'Bottom',\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(size=7),\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n    panel.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n    legend.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n    strip.background =element_rect(fill=\"#f5f5f5\")\n    ) +\n    scale_x_date(expand=c(0,0), date_breaks = \"3 month\", date_labels = \"%b%y\") +\n  ggtitle('Average Retail Prices of Selected Consumer Items (Jan 2018 to Dec 2022)')\n```\n\n::: {.cell-output-display}\n![](In-class_Ex06_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n## Horizon Scale = 10\n\n\n::: {.cell}\n\n```{.r .cell-code}\naverp %>% \n  filter(Date >= \"2018-01-01\") %>%\n  ggplot() +\n  geom_horizon(aes(x = Date, y=Values), \n               origin = \"midpoint\", \n               horizonscale = 10,\n               show.legend = TRUE)+\n  facet_grid(`Consumer Items`~.) +   #<< Each row is a facet by Consumer Item\n    theme_few() +\n  scale_fill_hcl(palette = 'RdBu') +\n  theme(panel.spacing.y=unit(0, \"lines\"), strip.text.y = element_text(\n    size = 5, angle = 0, hjust = 0),\n    legend.position = 'Bottom',\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(size=7),\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank(),\n    plot.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n    panel.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n    legend.background = element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"),\n    strip.background =element_rect(fill=\"#f5f5f5\")\n    ) +\n    scale_x_date(expand=c(0,0), date_breaks = \"3 month\", date_labels = \"%b%y\") +\n  ggtitle('Average Retail Prices of Selected Consumer Items (Jan 2018 to Dec 2022)')\n```\n\n::: {.cell-output-display}\n![](In-class_Ex06_files/figure-html/unnamed-chunk-6-1.png){width=1152}\n:::\n:::\n\n:::\n\n",
    "supporting": [
      "In-class_Ex06_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
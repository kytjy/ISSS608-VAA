{
  "hash": "62ec3fc336f595a0f074be1dfa248344",
  "result": {
    "markdown": "---\ntitle: \"In-class Exercise 1: Now You See It!\"\ndate: \"13 Jan 2024\"\ndate-modified: \"last-modified\" #wrapper of system.date\neditor: visual\ntoc-depth: 4\nexecute:\n  freeze: auto \n  echo: true #if false, displays charts without codes\n  eval: true #if false, displays codes without charts\n  warning: false #dont display if there are any warnings\nformat: \n  html:\n    code-fold: false\n    code-overflow: scroll\n    code-summary: \"Show the code\"\n    code-line-numbers: true\n---\n\n\n\n![](Images/placeholder.PNG){fig-align=\"center\" width=\"287\"}\n\n# 1 Getting Started\n\n::: panel-tabset\n## Installing and loading libraries\n\nIn this hands-on exercise, two R packages will be used. They are:\n\n| **Package**                             | **Description**                                                             |\n|----------------|--------------------------------------------------------|\n| [tidyverse](https://www.tidyverse.org/) | For data wragling                                                           |\n| [haven](https://haven.tidyverse.org/)   | To enable R to read and write various data formats such as 'SAS' and 'SPSS' |\n\nThe code chunk below uses `p_load()` of [pacman](https://rpubs.com/akshaypatankar/594834) package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, haven)\n```\n:::\n\n\n## Importing PISA Data\n\nThe code chunk below imports PISA data into R environment by using [`read_sas()`](https://haven.tidyverse.org/reference/read_sas.html) function of [**haven**](https://haven.tidyverse.org/) package.\n\n**Output**: Tibble dataframe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstu_qqq <- read_sas(data_file = \"data/cy08msp_stu_qqq.sas7bdat\")\n```\n:::\n\n\n[`filter()`](https://dplyr.tidyverse.org/reference/filter.html) of the [**dplyr**](https://dplyr.tidyverse.org/) package allows us to filter where participating country (*CNT*) is Singapore (*SGP*).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstu_qqq_SG <- stu_qqq %>%\n  filter(CNT == \"SGP\")\n```\n:::\n\n\nThe *.rds* file format is usually smaller than its SAS file counterpart and will therefore take up less storage space. The *.rds* file will also preserve data types and classes such as factors and dates eliminating the need to redefine data types after loading the file.\n\nFiles can be exported as RDS and imported into R using [`write_rds()`](https://readr.tidyverse.org/reference/read_rds.html) and [`read_rds()`](https://readr.tidyverse.org/reference/read_rds.html) for fast and space efficient data storage.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(stu_qqq_SG, \"data/stu_qqq_SG.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstu_qqq_SG <- read_rds(\"data/stu_qqq_SG.rds\")\n```\n:::\n\n\n## Understanding the Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#summary(stu_qqq_SG)\n```\n:::\n\n:::\n",
    "supporting": [
      "In-class_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}